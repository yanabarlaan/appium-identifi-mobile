{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nconst path = require('path');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  port: 4723,\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/Android/view*.js'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    platformName: 'Android',\n    'appium:platformVersion': \"12\",\n    'appium:deviceName': 'Pixel 5',\n    'appium:automationName': 'UIAutomator2',\n    'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\n    'appium:autoGrantPermissions': true\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['appium'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  } //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {Number} exitCode 0 - success, 1 - fail\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {Number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {Object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {Object}  test             test object\n   * @param {Object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {Any}     result.result    return object of test function\n   * @param {Number}  result.duration  duration of test\n   * @param {Boolean} result.passed    true if test has passed, otherwise false\n   * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {Object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["path","require","exports","config","port","specs","exclude","maxInstances","capabilities","platformName","join","process","cwd","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\","sources":["wdio.conf.js"],"sourcesContent":["const path = require('path');\n\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    port: 4723,\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/Android/view*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        platformName: 'Android',\n        'appium:platformVersion': \"12\",\n        'appium:deviceName': 'Pixel 5',\n        'appium:automationName': 'UIAutomator2',\n        'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\n        'appium:autoGrantPermissions': true\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['appium'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {Number} exitCode 0 - success, 1 - fail\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {Number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {Object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {Object}  test             test object\n     * @param {Object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {Any}     result.result    return object of test function\n     * @param {Number}  result.duration  duration of test\n     * @param {Boolean} result.passed    true if test has passed, otherwise false\n     * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {Object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,IANO;EAOb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,+BADG,CAvBM;EA0Bb;EACAC,OAAO,EAAE,CACL;EADK,CA3BI;EA8Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EA9CD;EA+Cb;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACXC,YAAY,EAAE,SADH;IAEX,0BAA0B,IAFf;IAGX,qBAAqB,SAHV;IAIX,yBAAyB,cAJd;IAKX,cAAcT,IAAI,CAACU,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,iCAAzB,CALH;IAMX,+BAA+B;EANpB,CAAD,CApDD;EA4Db;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAnEG;EAoEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CArFO;EAsFb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBA3FI;EA4Fb;EACA;EACAC,cAAc,EAAE,KA9FH;EA+Fb;EACA;EACA;EACAC,sBAAsB,EAAE,MAlGX;EAmGb;EACA;EACAC,oBAAoB,EAAE,CArGT;EAsGb;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,QAAD,CA3GG;EA6Gb;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAnHE;EAoHb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAD,CAjIE;EAqIb;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KADG;IAEPC,OAAO,EAAE;EAFF,CAxIE,CA4Ib;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;AA9Ra,CAAjB"}},"mtime":1654251294163},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\Android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\Android\\\\view-company-mood.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nvar _commands = _interopRequireDefault(require(\"../../screenobject/android/commands\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//const customCommands = require(\"../../screenobject/android/commands\");\ndescribe('View Company Mood Feature', () => {\n  it('User clicks “+” icon in mood tracker feed', async () => {\n    // Given user is on mood tracker feed\n    await _commands.default.userLogin(); // click login\n\n    await $('~View company mood').click(); // When user clicks \"follow\" icon\n\n    await $('//android.view.View[@index=\"5\"]').click(); //  Then \"Follow People\" screen should appear\n\n    await expect($('~Follow People')).toExist();\n  });\n  it('User views followed member first in the list', async () => {\n    //  Then followed member should be first in the list to show\n    await expect($('//android.widget.Button[@content-desc=\"￼ Following\"]')).toExist();\n  });\n  it('User follows other member', async () => {\n    //  When user clicks “Follow” button in members name\n    await $('(//android.widget.Button[@content-desc=\"Follow\"])[1]').click(); // Then Following should be displayed\n\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toBeGreaterThanOrEqual(5));\n  });\n  it('User unfollows other member', async () => {\n    //  user clicked following\n    await $('(//android.widget.Button[@content-desc=\"￼ Following\"])[1]').click(); // Then user should be able to unfollow people.\n\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(4));\n  });\n  it('User search people', async () => {\n    //  When user enters the name he/she wants to follow in \"search\" bar\n    await $('//android.widget.ImageView[@text=\"Search\"]').click();\n    await $('//android.widget.ImageView[@text=\"Search\"]').addValue(\"Abraham LINKcon\"); //\n\n    await driver.back(); // Then the person should appear appear below\n    //await expect($('//android.view.View[@content-desc=\"A Abraham LINKcon HR\"]')).toHaveTextContaining(\"Abraham LINKcon\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiY3VzdG9tQ29tbWFuZHMiLCJ1c2VyTG9naW4iLCIkIiwiY2xpY2siLCJleHBlY3QiLCJ0b0V4aXN0IiwidG9CZUdyZWF0ZXJUaGFuT3JFcXVhbCIsInRvRXF1YWwiLCJhZGRWYWx1ZSIsImRyaXZlciIsImJhY2siXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcWUFOQVBDXFxEZXNrdG9wXFxpZGVudGlmaS1tb2JpbGVcXHRlc3RcXHNwZWNzXFxBbmRyb2lkXFwiLCJzb3VyY2VzIjpbInZpZXctY29tcGFueS1tb29kLnNwZWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy9jb25zdCBjdXN0b21Db21tYW5kcyA9IHJlcXVpcmUoXCIuLi8uLi9zY3JlZW5vYmplY3QvYW5kcm9pZC9jb21tYW5kc1wiKTtcbmltcG9ydCBjdXN0b21Db21tYW5kcyBmcm9tICcuLi8uLi9zY3JlZW5vYmplY3QvYW5kcm9pZC9jb21tYW5kcyc7XG5cbmRlc2NyaWJlKCdWaWV3IENvbXBhbnkgTW9vZCBGZWF0dXJlJywgKCkgPT4ge1xuICBpdCgnVXNlciBjbGlja3Mg4oCcK+KAnSBpY29uIGluIG1vb2QgdHJhY2tlciBmZWVkJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vIEdpdmVuIHVzZXIgaXMgb24gbW9vZCB0cmFja2VyIGZlZWRcbiAgICBhd2FpdCBjdXN0b21Db21tYW5kcy51c2VyTG9naW4oKTtcblxuICAgIC8vIGNsaWNrIGxvZ2luXG4gICAgYXdhaXQgJCgnflZpZXcgY29tcGFueSBtb29kJykuY2xpY2soKTtcblxuICAgIC8vIFdoZW4gdXNlciBjbGlja3MgXCJmb2xsb3dcIiBpY29uXG4gICAgYXdhaXQgJCgnLy9hbmRyb2lkLnZpZXcuVmlld1tAaW5kZXg9XCI1XCJdJykuY2xpY2soKTtcblxuICAgIC8vICBUaGVuIFwiRm9sbG93IFBlb3BsZVwiIHNjcmVlbiBzaG91bGQgYXBwZWFyXG4gICAgYXdhaXQgZXhwZWN0KCQoJ35Gb2xsb3cgUGVvcGxlJykpLnRvRXhpc3QoKTtcbiAgfSk7XG5cbiAgaXQoJ1VzZXIgdmlld3MgZm9sbG93ZWQgbWVtYmVyIGZpcnN0IGluIHRoZSBsaXN0JywgYXN5bmMgKCkgPT4ge1xuICAgIC8vICBUaGVuIGZvbGxvd2VkIG1lbWJlciBzaG91bGQgYmUgZmlyc3QgaW4gdGhlIGxpc3QgdG8gc2hvd1xuICAgIGF3YWl0IGV4cGVjdCgkKCcvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXScpKS50b0V4aXN0KCk7XG4gIH0pO1xuXG4gIGl0KCdVc2VyIGZvbGxvd3Mgb3RoZXIgbWVtYmVyJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vICBXaGVuIHVzZXIgY2xpY2tzIOKAnEZvbGxvd+KAnSBidXR0b24gaW4gbWVtYmVycyBuYW1lXG4gICAgYXdhaXQgJCgnKC8vYW5kcm9pZC53aWRnZXQuQnV0dG9uW0Bjb250ZW50LWRlc2M9XCJGb2xsb3dcIl0pWzFdJykuY2xpY2soKTtcblxuICAgIC8vIFRoZW4gRm9sbG93aW5nIHNob3VsZCBiZSBkaXNwbGF5ZWRcbiAgICBhd2FpdCBleHBlY3QoJCgnKC8vYW5kcm9pZC53aWRnZXQuQnV0dG9uW0Bjb250ZW50LWRlc2M9XCLvv7wgRm9sbG93aW5nXCJdKScpLnRvQmVHcmVhdGVyVGhhbk9yRXF1YWwoNSkpO1xuICB9KTtcblxuICBpdCgnVXNlciB1bmZvbGxvd3Mgb3RoZXIgbWVtYmVyJywgYXN5bmMgKCkgPT4ge1xuICAgIC8vICB1c2VyIGNsaWNrZWQgZm9sbG93aW5nXG4gICAgYXdhaXQgJCgnKC8vYW5kcm9pZC53aWRnZXQuQnV0dG9uW0Bjb250ZW50LWRlc2M9XCLvv7wgRm9sbG93aW5nXCJdKVsxXScpLmNsaWNrKCk7XG5cbiAgICAvLyBUaGVuIHVzZXIgc2hvdWxkIGJlIGFibGUgdG8gdW5mb2xsb3cgcGVvcGxlLlxuICAgIGF3YWl0IGV4cGVjdCgkKCcoLy9hbmRyb2lkLndpZGdldC5CdXR0b25bQGNvbnRlbnQtZGVzYz1cIu+/vCBGb2xsb3dpbmdcIl0pJykudG9FcXVhbCg0KSk7XG4gIH0pO1xuXG4gIGl0KCdVc2VyIHNlYXJjaCBwZW9wbGUnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gIFdoZW4gdXNlciBlbnRlcnMgdGhlIG5hbWUgaGUvc2hlIHdhbnRzIHRvIGZvbGxvdyBpbiBcInNlYXJjaFwiIGJhclxuICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VWaWV3W0B0ZXh0PVwiU2VhcmNoXCJdJykuY2xpY2soKTtcbiAgICBhd2FpdCAkKCcvL2FuZHJvaWQud2lkZ2V0LkltYWdlVmlld1tAdGV4dD1cIlNlYXJjaFwiXScpLmFkZFZhbHVlKFwiQWJyYWhhbSBMSU5LY29uXCIpO1xuXG4gICAgLy9cbiAgICBhd2FpdCBkcml2ZXIuYmFjaygpO1xuXG4gICAgLy8gVGhlbiB0aGUgcGVyc29uIHNob3VsZCBhcHBlYXIgYXBwZWFyIGJlbG93XG4gICAgLy9hd2FpdCBleHBlY3QoJCgnLy9hbmRyb2lkLnZpZXcuVmlld1tAY29udGVudC1kZXNjPVwiQSBBYnJhaGFtIExJTktjb24gSFJcIl0nKSkudG9IYXZlVGV4dENvbnRhaW5pbmcoXCJBYnJhaGFtIExJTktjb25cIik7XG4gIH0pO1xufSkiXSwibWFwcGluZ3MiOiI7O0FBQ0E7Ozs7QUFEQTtBQUdBQSxRQUFRLENBQUMsMkJBQUQsRUFBOEIsTUFBTTtFQUMxQ0MsRUFBRSxDQUFDLDJDQUFELEVBQThDLFlBQVk7SUFDMUQ7SUFDQSxNQUFNQyxpQkFBQSxDQUFlQyxTQUFmLEVBQU4sQ0FGMEQsQ0FJMUQ7O0lBQ0EsTUFBTUMsQ0FBQyxDQUFDLG9CQUFELENBQUQsQ0FBd0JDLEtBQXhCLEVBQU4sQ0FMMEQsQ0FPMUQ7O0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLGlDQUFELENBQUQsQ0FBcUNDLEtBQXJDLEVBQU4sQ0FSMEQsQ0FVMUQ7O0lBQ0EsTUFBTUMsTUFBTSxDQUFDRixDQUFDLENBQUMsZ0JBQUQsQ0FBRixDQUFOLENBQTRCRyxPQUE1QixFQUFOO0VBQ0QsQ0FaQyxDQUFGO0VBY0FOLEVBQUUsQ0FBQyw4Q0FBRCxFQUFpRCxZQUFZO0lBQzdEO0lBQ0EsTUFBTUssTUFBTSxDQUFDRixDQUFDLENBQUMsc0RBQUQsQ0FBRixDQUFOLENBQWtFRyxPQUFsRSxFQUFOO0VBQ0QsQ0FIQyxDQUFGO0VBS0FOLEVBQUUsQ0FBQywyQkFBRCxFQUE4QixZQUFZO0lBQzFDO0lBQ0EsTUFBTUcsQ0FBQyxDQUFDLHNEQUFELENBQUQsQ0FBMERDLEtBQTFELEVBQU4sQ0FGMEMsQ0FJMUM7O0lBQ0EsTUFBTUMsTUFBTSxDQUFDRixDQUFDLENBQUMsd0RBQUQsQ0FBRCxDQUE0REksc0JBQTVELENBQW1GLENBQW5GLENBQUQsQ0FBWjtFQUNELENBTkMsQ0FBRjtFQVFBUCxFQUFFLENBQUMsNkJBQUQsRUFBZ0MsWUFBWTtJQUM1QztJQUNBLE1BQU1HLENBQUMsQ0FBQywyREFBRCxDQUFELENBQStEQyxLQUEvRCxFQUFOLENBRjRDLENBSTVDOztJQUNBLE1BQU1DLE1BQU0sQ0FBQ0YsQ0FBQyxDQUFDLHdEQUFELENBQUQsQ0FBNERLLE9BQTVELENBQW9FLENBQXBFLENBQUQsQ0FBWjtFQUNELENBTkMsQ0FBRjtFQVFBUixFQUFFLENBQUMsb0JBQUQsRUFBdUIsWUFBWTtJQUNuQztJQUNBLE1BQU1HLENBQUMsQ0FBQyw0Q0FBRCxDQUFELENBQWdEQyxLQUFoRCxFQUFOO0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLDRDQUFELENBQUQsQ0FBZ0RNLFFBQWhELENBQXlELGlCQUF6RCxDQUFOLENBSG1DLENBS25DOztJQUNBLE1BQU1DLE1BQU0sQ0FBQ0MsSUFBUCxFQUFOLENBTm1DLENBUW5DO0lBQ0E7RUFDRCxDQVZDLENBQUY7QUFXRCxDQS9DTyxDQUFSIn0=","map":{"version":3,"names":["describe","it","customCommands","userLogin","$","click","expect","toExist","toBeGreaterThanOrEqual","toEqual","addValue","driver","back"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\test\\specs\\Android\\","sources":["view-company-mood.spec.js"],"sourcesContent":["//const customCommands = require(\"../../screenobject/android/commands\");\nimport customCommands from '../../screenobject/android/commands';\n\ndescribe('View Company Mood Feature', () => {\n  it('User clicks “+” icon in mood tracker feed', async () => {\n    // Given user is on mood tracker feed\n    await customCommands.userLogin();\n\n    // click login\n    await $('~View company mood').click();\n\n    // When user clicks \"follow\" icon\n    await $('//android.view.View[@index=\"5\"]').click();\n\n    //  Then \"Follow People\" screen should appear\n    await expect($('~Follow People')).toExist();\n  });\n\n  it('User views followed member first in the list', async () => {\n    //  Then followed member should be first in the list to show\n    await expect($('//android.widget.Button[@content-desc=\"￼ Following\"]')).toExist();\n  });\n\n  it('User follows other member', async () => {\n    //  When user clicks “Follow” button in members name\n    await $('(//android.widget.Button[@content-desc=\"Follow\"])[1]').click();\n\n    // Then Following should be displayed\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toBeGreaterThanOrEqual(5));\n  });\n\n  it('User unfollows other member', async () => {\n    //  user clicked following\n    await $('(//android.widget.Button[@content-desc=\"￼ Following\"])[1]').click();\n\n    // Then user should be able to unfollow people.\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(4));\n  });\n\n  it('User search people', async () => {\n    //  When user enters the name he/she wants to follow in \"search\" bar\n    await $('//android.widget.ImageView[@text=\"Search\"]').click();\n    await $('//android.widget.ImageView[@text=\"Search\"]').addValue(\"Abraham LINKcon\");\n\n    //\n    await driver.back();\n\n    // Then the person should appear appear below\n    //await expect($('//android.view.View[@content-desc=\"A Abraham LINKcon HR\"]')).toHaveTextContaining(\"Abraham LINKcon\");\n  });\n})"],"mappings":";;AACA;;;;AADA;AAGAA,QAAQ,CAAC,2BAAD,EAA8B,MAAM;EAC1CC,EAAE,CAAC,2CAAD,EAA8C,YAAY;IAC1D;IACA,MAAMC,iBAAA,CAAeC,SAAf,EAAN,CAF0D,CAI1D;;IACA,MAAMC,CAAC,CAAC,oBAAD,CAAD,CAAwBC,KAAxB,EAAN,CAL0D,CAO1D;;IACA,MAAMD,CAAC,CAAC,iCAAD,CAAD,CAAqCC,KAArC,EAAN,CAR0D,CAU1D;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,gBAAD,CAAF,CAAN,CAA4BG,OAA5B,EAAN;EACD,CAZC,CAAF;EAcAN,EAAE,CAAC,8CAAD,EAAiD,YAAY;IAC7D;IACA,MAAMK,MAAM,CAACF,CAAC,CAAC,sDAAD,CAAF,CAAN,CAAkEG,OAAlE,EAAN;EACD,CAHC,CAAF;EAKAN,EAAE,CAAC,2BAAD,EAA8B,YAAY;IAC1C;IACA,MAAMG,CAAC,CAAC,sDAAD,CAAD,CAA0DC,KAA1D,EAAN,CAF0C,CAI1C;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,wDAAD,CAAD,CAA4DI,sBAA5D,CAAmF,CAAnF,CAAD,CAAZ;EACD,CANC,CAAF;EAQAP,EAAE,CAAC,6BAAD,EAAgC,YAAY;IAC5C;IACA,MAAMG,CAAC,CAAC,2DAAD,CAAD,CAA+DC,KAA/D,EAAN,CAF4C,CAI5C;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,wDAAD,CAAD,CAA4DK,OAA5D,CAAoE,CAApE,CAAD,CAAZ;EACD,CANC,CAAF;EAQAR,EAAE,CAAC,oBAAD,EAAuB,YAAY;IACnC;IACA,MAAMG,CAAC,CAAC,4CAAD,CAAD,CAAgDC,KAAhD,EAAN;IACA,MAAMD,CAAC,CAAC,4CAAD,CAAD,CAAgDM,QAAhD,CAAyD,iBAAzD,CAAN,CAHmC,CAKnC;;IACA,MAAMC,MAAM,CAACC,IAAP,EAAN,CANmC,CAQnC;IACA;EACD,CAVC,CAAF;AAWD,CA/CO,CAAR"}},"mtime":1654251873900},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\screenobject\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\screenobject\\\\android\\\\commands.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass customCommands {\n  // get skipBtn() {\n  //   return $('//*[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/btn_start_skip\"]')\n  // }\n  // get addNoteTxt() {\n  //   return $('//*[@text=\"Add note\"]')\n  // }\n  async userLogin() {\n    // click skip button\n    await $('android.widget.Button').click(); // click get started\n\n    await $('//*[@content-desc=\"Get Started\"]').click();\n    await $('//*[@text=\"Enter your email\"]').click();\n    await $('//*[@text=\"Enter your email\"]').addValue(\"hovsqa@gmail.com\");\n    await $('~Log in').click();\n    await $('//*[@password=\"true\"]').click();\n    await $('//*[@password=\"true\"]').addValue(\"password\");\n    await $('~Log in').click(); // assertion\n\n    await expect($('~View company mood')).toBeDisplayed();\n  }\n\n} //module.exports = new customCommands();\n\n\nvar _default = new customCommands();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjdXN0b21Db21tYW5kcyIsInVzZXJMb2dpbiIsIiQiLCJjbGljayIsImFkZFZhbHVlIiwiZXhwZWN0IiwidG9CZURpc3BsYXllZCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxZQU5BUENcXERlc2t0b3BcXGlkZW50aWZpLW1vYmlsZVxcdGVzdFxcc2NyZWVub2JqZWN0XFxhbmRyb2lkXFwiLCJzb3VyY2VzIjpbImNvbW1hbmRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGN1c3RvbUNvbW1hbmRzIHtcclxuICAvLyBnZXQgc2tpcEJ0bigpIHtcclxuICAvLyAgIHJldHVybiAkKCcvLypbQHJlc291cmNlLWlkPVwiY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL2J0bl9zdGFydF9za2lwXCJdJylcclxuICAvLyB9XHJcblxyXG4gIC8vIGdldCBhZGROb3RlVHh0KCkge1xyXG4gIC8vICAgcmV0dXJuICQoJy8vKltAdGV4dD1cIkFkZCBub3RlXCJdJylcclxuICAvLyB9XHJcblxyXG4gIGFzeW5jIHVzZXJMb2dpbigpIHtcclxuICAgIC8vIGNsaWNrIHNraXAgYnV0dG9uXHJcbiAgICBhd2FpdCAkKCdhbmRyb2lkLndpZGdldC5CdXR0b24nKS5jbGljaygpO1xyXG5cclxuICAgIC8vIGNsaWNrIGdldCBzdGFydGVkXHJcbiAgICBhd2FpdCAkKCcvLypbQGNvbnRlbnQtZGVzYz1cIkdldCBTdGFydGVkXCJdJykuY2xpY2soKTtcclxuICAgIGF3YWl0ICQoJy8vKltAdGV4dD1cIkVudGVyIHlvdXIgZW1haWxcIl0nKS5jbGljaygpO1xyXG4gICAgYXdhaXQgJCgnLy8qW0B0ZXh0PVwiRW50ZXIgeW91ciBlbWFpbFwiXScpLmFkZFZhbHVlKFwiaG92c3FhQGdtYWlsLmNvbVwiKTtcclxuICAgIGF3YWl0ICQoJ35Mb2cgaW4nKS5jbGljaygpO1xyXG4gICAgYXdhaXQgJCgnLy8qW0BwYXNzd29yZD1cInRydWVcIl0nKS5jbGljaygpO1xyXG4gICAgYXdhaXQgJCgnLy8qW0BwYXNzd29yZD1cInRydWVcIl0nKS5hZGRWYWx1ZShcInBhc3N3b3JkXCIpO1xyXG4gICAgYXdhaXQgJCgnfkxvZyBpbicpLmNsaWNrKCk7XHJcblxyXG4gICAgLy8gYXNzZXJ0aW9uXHJcbiAgICBhd2FpdCBleHBlY3QoJCgnflZpZXcgY29tcGFueSBtb29kJykpLnRvQmVEaXNwbGF5ZWQoKTtcclxuICB9XHJcbn1cclxuXHJcbi8vbW9kdWxlLmV4cG9ydHMgPSBuZXcgY3VzdG9tQ29tbWFuZHMoKTtcclxuIGV4cG9ydCBkZWZhdWx0IG5ldyBjdXN0b21Db21tYW5kcygpOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLGNBQU4sQ0FBcUI7RUFDbkI7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0VBRWUsTUFBVEMsU0FBUyxHQUFHO0lBQ2hCO0lBQ0EsTUFBTUMsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJDLEtBQTNCLEVBQU4sQ0FGZ0IsQ0FJaEI7O0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLGtDQUFELENBQUQsQ0FBc0NDLEtBQXRDLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsK0JBQUQsQ0FBRCxDQUFtQ0MsS0FBbkMsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQywrQkFBRCxDQUFELENBQW1DRSxRQUFuQyxDQUE0QyxrQkFBNUMsQ0FBTjtJQUNBLE1BQU1GLENBQUMsQ0FBQyxTQUFELENBQUQsQ0FBYUMsS0FBYixFQUFOO0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJDLEtBQTNCLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQkUsUUFBM0IsQ0FBb0MsVUFBcEMsQ0FBTjtJQUNBLE1BQU1GLENBQUMsQ0FBQyxTQUFELENBQUQsQ0FBYUMsS0FBYixFQUFOLENBWGdCLENBYWhCOztJQUNBLE1BQU1FLE1BQU0sQ0FBQ0gsQ0FBQyxDQUFDLG9CQUFELENBQUYsQ0FBTixDQUFnQ0ksYUFBaEMsRUFBTjtFQUNEOztBQXhCa0IsQyxDQTJCckI7OztlQUNnQixJQUFJTixjQUFKLEUifQ==","map":{"version":3,"names":["customCommands","userLogin","$","click","addValue","expect","toBeDisplayed"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\test\\screenobject\\android\\","sources":["commands.js"],"sourcesContent":["class customCommands {\r\n  // get skipBtn() {\r\n  //   return $('//*[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/btn_start_skip\"]')\r\n  // }\r\n\r\n  // get addNoteTxt() {\r\n  //   return $('//*[@text=\"Add note\"]')\r\n  // }\r\n\r\n  async userLogin() {\r\n    // click skip button\r\n    await $('android.widget.Button').click();\r\n\r\n    // click get started\r\n    await $('//*[@content-desc=\"Get Started\"]').click();\r\n    await $('//*[@text=\"Enter your email\"]').click();\r\n    await $('//*[@text=\"Enter your email\"]').addValue(\"hovsqa@gmail.com\");\r\n    await $('~Log in').click();\r\n    await $('//*[@password=\"true\"]').click();\r\n    await $('//*[@password=\"true\"]').addValue(\"password\");\r\n    await $('~Log in').click();\r\n\r\n    // assertion\r\n    await expect($('~View company mood')).toBeDisplayed();\r\n  }\r\n}\r\n\r\n//module.exports = new customCommands();\r\n export default new customCommands();"],"mappings":";;;;;;;AAAA,MAAMA,cAAN,CAAqB;EACnB;EACA;EACA;EAEA;EACA;EACA;EAEe,MAATC,SAAS,GAAG;IAChB;IACA,MAAMC,CAAC,CAAC,uBAAD,CAAD,CAA2BC,KAA3B,EAAN,CAFgB,CAIhB;;IACA,MAAMD,CAAC,CAAC,kCAAD,CAAD,CAAsCC,KAAtC,EAAN;IACA,MAAMD,CAAC,CAAC,+BAAD,CAAD,CAAmCC,KAAnC,EAAN;IACA,MAAMD,CAAC,CAAC,+BAAD,CAAD,CAAmCE,QAAnC,CAA4C,kBAA5C,CAAN;IACA,MAAMF,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN;IACA,MAAMD,CAAC,CAAC,uBAAD,CAAD,CAA2BC,KAA3B,EAAN;IACA,MAAMD,CAAC,CAAC,uBAAD,CAAD,CAA2BE,QAA3B,CAAoC,UAApC,CAAN;IACA,MAAMF,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN,CAXgB,CAahB;;IACA,MAAME,MAAM,CAACH,CAAC,CAAC,oBAAD,CAAF,CAAN,CAAgCI,aAAhC,EAAN;EACD;;AAxBkB,C,CA2BrB;;;eACgB,IAAIN,cAAJ,E"}},"mtime":1654579834752},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\screenobject\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\screenobject\\\\android\\\\commands.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass customCommands {\n  // get skipBtn() {\n  //   return $('//*[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/btn_start_skip\"]')\n  // }\n  // get addNoteTxt() {\n  //   return $('//*[@text=\"Add note\"]')\n  // }\n  async userLogin() {\n    // click skip button\n    await $('android.widget.Button').click(); // click get started\n\n    await $('//*[@content-desc=\"Get Started\"]').click();\n    await $('//*[@text=\"Enter your email\"]').click();\n    await $('//*[@text=\"Enter your email\"]').addValue(\"hovsqa@gmail.com\");\n    await $('~Log in').click();\n    await $('//*[@password=\"true\"]').click();\n    await $('//*[@password=\"true\"]').addValue(\"password\");\n    await $('~Log in').click(); // assertion\n\n    await expect($('~View company mood')).toBeDisplayed();\n  }\n\n} //module.exports = new customCommands();\n\n\nvar _default = new customCommands();\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjdXN0b21Db21tYW5kcyIsInVzZXJMb2dpbiIsIiQiLCJjbGljayIsImFkZFZhbHVlIiwiZXhwZWN0IiwidG9CZURpc3BsYXllZCJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxZQU5BUENcXERlc2t0b3BcXGlkZW50aWZpLW1vYmlsZVxcdGVzdFxcc2NyZWVub2JqZWN0XFxhbmRyb2lkXFwiLCJzb3VyY2VzIjpbImNvbW1hbmRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIGN1c3RvbUNvbW1hbmRzIHtcclxuICAvLyBnZXQgc2tpcEJ0bigpIHtcclxuICAvLyAgIHJldHVybiAkKCcvLypbQHJlc291cmNlLWlkPVwiY29tLnNvY2lhbG5tb2JpbGUuZGljdGFwcHMubm90ZXBhZC5jb2xvci5ub3RlOmlkL2J0bl9zdGFydF9za2lwXCJdJylcclxuICAvLyB9XHJcblxyXG4gIC8vIGdldCBhZGROb3RlVHh0KCkge1xyXG4gIC8vICAgcmV0dXJuICQoJy8vKltAdGV4dD1cIkFkZCBub3RlXCJdJylcclxuICAvLyB9XHJcblxyXG4gIGFzeW5jIHVzZXJMb2dpbigpIHtcclxuICAgIC8vIGNsaWNrIHNraXAgYnV0dG9uXHJcbiAgICBhd2FpdCAkKCdhbmRyb2lkLndpZGdldC5CdXR0b24nKS5jbGljaygpO1xyXG5cclxuICAgIC8vIGNsaWNrIGdldCBzdGFydGVkXHJcbiAgICBhd2FpdCAkKCcvLypbQGNvbnRlbnQtZGVzYz1cIkdldCBTdGFydGVkXCJdJykuY2xpY2soKTtcclxuICAgIGF3YWl0ICQoJy8vKltAdGV4dD1cIkVudGVyIHlvdXIgZW1haWxcIl0nKS5jbGljaygpO1xyXG4gICAgYXdhaXQgJCgnLy8qW0B0ZXh0PVwiRW50ZXIgeW91ciBlbWFpbFwiXScpLmFkZFZhbHVlKFwiaG92c3FhQGdtYWlsLmNvbVwiKTtcclxuICAgIGF3YWl0ICQoJ35Mb2cgaW4nKS5jbGljaygpO1xyXG4gICAgYXdhaXQgJCgnLy8qW0BwYXNzd29yZD1cInRydWVcIl0nKS5jbGljaygpO1xyXG4gICAgYXdhaXQgJCgnLy8qW0BwYXNzd29yZD1cInRydWVcIl0nKS5hZGRWYWx1ZShcInBhc3N3b3JkXCIpO1xyXG4gICAgYXdhaXQgJCgnfkxvZyBpbicpLmNsaWNrKCk7XHJcblxyXG4gICAgLy8gYXNzZXJ0aW9uXHJcbiAgICBhd2FpdCBleHBlY3QoJCgnflZpZXcgY29tcGFueSBtb29kJykpLnRvQmVEaXNwbGF5ZWQoKTtcclxuICB9XHJcbn1cclxuXHJcbi8vbW9kdWxlLmV4cG9ydHMgPSBuZXcgY3VzdG9tQ29tbWFuZHMoKTtcclxuIGV4cG9ydCBkZWZhdWx0IG5ldyBjdXN0b21Db21tYW5kcygpOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLE1BQU1BLGNBQU4sQ0FBcUI7RUFDbkI7RUFDQTtFQUNBO0VBRUE7RUFDQTtFQUNBO0VBRWUsTUFBVEMsU0FBUyxHQUFHO0lBQ2hCO0lBQ0EsTUFBTUMsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJDLEtBQTNCLEVBQU4sQ0FGZ0IsQ0FJaEI7O0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLGtDQUFELENBQUQsQ0FBc0NDLEtBQXRDLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsK0JBQUQsQ0FBRCxDQUFtQ0MsS0FBbkMsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQywrQkFBRCxDQUFELENBQW1DRSxRQUFuQyxDQUE0QyxrQkFBNUMsQ0FBTjtJQUNBLE1BQU1GLENBQUMsQ0FBQyxTQUFELENBQUQsQ0FBYUMsS0FBYixFQUFOO0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJDLEtBQTNCLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQkUsUUFBM0IsQ0FBb0MsVUFBcEMsQ0FBTjtJQUNBLE1BQU1GLENBQUMsQ0FBQyxTQUFELENBQUQsQ0FBYUMsS0FBYixFQUFOLENBWGdCLENBYWhCOztJQUNBLE1BQU1FLE1BQU0sQ0FBQ0gsQ0FBQyxDQUFDLG9CQUFELENBQUYsQ0FBTixDQUFnQ0ksYUFBaEMsRUFBTjtFQUNEOztBQXhCa0IsQyxDQTJCckI7OztlQUNnQixJQUFJTixjQUFKLEUifQ==","map":{"version":3,"names":["customCommands","userLogin","$","click","addValue","expect","toBeDisplayed"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\test\\screenobject\\android\\","sources":["commands.js"],"sourcesContent":["class customCommands {\r\n  // get skipBtn() {\r\n  //   return $('//*[@resource-id=\"com.socialnmobile.dictapps.notepad.color.note:id/btn_start_skip\"]')\r\n  // }\r\n\r\n  // get addNoteTxt() {\r\n  //   return $('//*[@text=\"Add note\"]')\r\n  // }\r\n\r\n  async userLogin() {\r\n    // click skip button\r\n    await $('android.widget.Button').click();\r\n\r\n    // click get started\r\n    await $('//*[@content-desc=\"Get Started\"]').click();\r\n    await $('//*[@text=\"Enter your email\"]').click();\r\n    await $('//*[@text=\"Enter your email\"]').addValue(\"hovsqa@gmail.com\");\r\n    await $('~Log in').click();\r\n    await $('//*[@password=\"true\"]').click();\r\n    await $('//*[@password=\"true\"]').addValue(\"password\");\r\n    await $('~Log in').click();\r\n\r\n    // assertion\r\n    await expect($('~View company mood')).toBeDisplayed();\r\n  }\r\n}\r\n\r\n//module.exports = new customCommands();\r\n export default new customCommands();"],"mappings":";;;;;;;AAAA,MAAMA,cAAN,CAAqB;EACnB;EACA;EACA;EAEA;EACA;EACA;EAEe,MAATC,SAAS,GAAG;IAChB;IACA,MAAMC,CAAC,CAAC,uBAAD,CAAD,CAA2BC,KAA3B,EAAN,CAFgB,CAIhB;;IACA,MAAMD,CAAC,CAAC,kCAAD,CAAD,CAAsCC,KAAtC,EAAN;IACA,MAAMD,CAAC,CAAC,+BAAD,CAAD,CAAmCC,KAAnC,EAAN;IACA,MAAMD,CAAC,CAAC,+BAAD,CAAD,CAAmCE,QAAnC,CAA4C,kBAA5C,CAAN;IACA,MAAMF,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN;IACA,MAAMD,CAAC,CAAC,uBAAD,CAAD,CAA2BC,KAA3B,EAAN;IACA,MAAMD,CAAC,CAAC,uBAAD,CAAD,CAA2BE,QAA3B,CAAoC,UAApC,CAAN;IACA,MAAMF,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN,CAXgB,CAahB;;IACA,MAAME,MAAM,CAACH,CAAC,CAAC,oBAAD,CAAF,CAAN,CAAgCI,aAAhC,EAAN;EACD;;AAxBkB,C,CA2BrB;;;eACgB,IAAIN,cAAJ,E"}},"mtime":1654579834752},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\wdio.android.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nconst {\n  config\n} = require('./wdio.shared.conf');\n\nconst path = require('path'); //\n// ====================\n// Runner Configuration\n// ====================\n//\n\n\nconfig.port = 4723; //\n// ============\n// Specs\n// ============\n\nconfig.specs = [//'./test/specs/**/android-native*.js'\n'./test/specs/android/view*.js']; //\n// ============\n// Capabilities\n// ============\n\nconfig.capabilities = [{\n  platformName: 'Android',\n  'appium:platformVersion': \"12\",\n  'appium:deviceName': 'Pixel 5',\n  'appium:automationName': 'UIAutomator2',\n  'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\n  'appium:autoGrantPermissions': true\n}]; //\n// Test runner services\n// Services take over a specific job you don't want to take care of. They enhance\n// your test setup with almost no effort. Unlike plugins, they don't add new\n// commands. Instead, they hook themselves up into the test process.\n\nconfig.services = ['appium'], exports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25maWciLCJyZXF1aXJlIiwicGF0aCIsInBvcnQiLCJzcGVjcyIsImNhcGFiaWxpdGllcyIsInBsYXRmb3JtTmFtZSIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwic2VydmljZXMiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXFlBTkFQQ1xcRGVza3RvcFxcaWRlbnRpZmktbW9iaWxlXFxjb25maWdcXCIsInNvdXJjZXMiOlsid2Rpby5hbmRyb2lkLmNvbmYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2NvbmZpZ30gPSByZXF1aXJlKCcuL3dkaW8uc2hhcmVkLmNvbmYnKTtcclxuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxuXHJcbi8vXHJcbi8vID09PT09PT09PT09PT09PT09PT09XHJcbi8vIFJ1bm5lciBDb25maWd1cmF0aW9uXHJcbi8vID09PT09PT09PT09PT09PT09PT09XHJcbi8vXHJcbmNvbmZpZy5wb3J0ID0gNDcyMztcclxuXHJcbi8vXHJcbi8vID09PT09PT09PT09PVxyXG4vLyBTcGVjc1xyXG4vLyA9PT09PT09PT09PT1cclxuY29uZmlnLnNwZWNzID0gW1xyXG4gIC8vJy4vdGVzdC9zcGVjcy8qKi9hbmRyb2lkLW5hdGl2ZSouanMnXHJcbiAgJy4vdGVzdC9zcGVjcy9hbmRyb2lkL3ZpZXcqLmpzJ1xyXG5dO1xyXG5cclxuLy9cclxuLy8gPT09PT09PT09PT09XHJcbi8vIENhcGFiaWxpdGllc1xyXG4vLyA9PT09PT09PT09PT1cclxuY29uZmlnLmNhcGFiaWxpdGllcyA9IFtcclxuICB7XHJcbiAgICBwbGF0Zm9ybU5hbWU6ICdBbmRyb2lkJyxcclxuICAgICdhcHBpdW06cGxhdGZvcm1WZXJzaW9uJzogXCIxMlwiLFxyXG4gICAgJ2FwcGl1bTpkZXZpY2VOYW1lJzogJ1BpeGVsIDUnLFxyXG4gICAgJ2FwcGl1bTphdXRvbWF0aW9uTmFtZSc6ICdVSUF1dG9tYXRvcjInLFxyXG4gICAgJ2FwcGl1bTphcHAnOiBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ2FwcC9hbmRyb2lkL2FwcC1kZXYtcmVsZWFzZS5hcGsnKSxcclxuICAgICdhcHBpdW06YXV0b0dyYW50UGVybWlzc2lvbnMnOiB0cnVlXHJcbiAgfVxyXG5dXHJcblxyXG4vL1xyXG4vLyBUZXN0IHJ1bm5lciBzZXJ2aWNlc1xyXG4vLyBTZXJ2aWNlcyB0YWtlIG92ZXIgYSBzcGVjaWZpYyBqb2IgeW91IGRvbid0IHdhbnQgdG8gdGFrZSBjYXJlIG9mLiBUaGV5IGVuaGFuY2VcclxuLy8geW91ciB0ZXN0IHNldHVwIHdpdGggYWxtb3N0IG5vIGVmZm9ydC4gVW5saWtlIHBsdWdpbnMsIHRoZXkgZG9uJ3QgYWRkIG5ld1xyXG4vLyBjb21tYW5kcy4gSW5zdGVhZCwgdGhleSBob29rIHRoZW1zZWx2ZXMgdXAgaW50byB0aGUgdGVzdCBwcm9jZXNzLlxyXG5jb25maWcuc2VydmljZXMgPSBbJ2FwcGl1bSddLFxyXG5cclxuZXhwb3J0cy5jb25maWcgPSBjb25maWc7Il0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU07RUFBQ0E7QUFBRCxJQUFXQyxPQUFPLENBQUMsb0JBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQixDLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0FELE1BQU0sQ0FBQ0csSUFBUCxHQUFjLElBQWQsQyxDQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBSCxNQUFNLENBQUNJLEtBQVAsR0FBZSxDQUNiO0FBQ0EsK0JBRmEsQ0FBZixDLENBS0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FKLE1BQU0sQ0FBQ0ssWUFBUCxHQUFzQixDQUNwQjtFQUNFQyxZQUFZLEVBQUUsU0FEaEI7RUFFRSwwQkFBMEIsSUFGNUI7RUFHRSxxQkFBcUIsU0FIdkI7RUFJRSx5QkFBeUIsY0FKM0I7RUFLRSxjQUFjSixJQUFJLENBQUNLLElBQUwsQ0FBVUMsT0FBTyxDQUFDQyxHQUFSLEVBQVYsRUFBeUIsaUNBQXpCLENBTGhCO0VBTUUsK0JBQStCO0FBTmpDLENBRG9CLENBQXRCLEMsQ0FXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBVCxNQUFNLENBQUNVLFFBQVAsR0FBa0IsQ0FBQyxRQUFELENBQWxCLEVBRUFDLE9BQU8sQ0FBQ1gsTUFBUixHQUFpQkEsTUFGakIifQ==","map":{"version":3,"names":["config","require","path","port","specs","capabilities","platformName","join","process","cwd","services","exports"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\config\\","sources":["wdio.android.conf.js"],"sourcesContent":["const {config} = require('./wdio.shared.conf');\r\nconst path = require('path');\r\n\r\n//\r\n// ====================\r\n// Runner Configuration\r\n// ====================\r\n//\r\nconfig.port = 4723;\r\n\r\n//\r\n// ============\r\n// Specs\r\n// ============\r\nconfig.specs = [\r\n  //'./test/specs/**/android-native*.js'\r\n  './test/specs/android/view*.js'\r\n];\r\n\r\n//\r\n// ============\r\n// Capabilities\r\n// ============\r\nconfig.capabilities = [\r\n  {\r\n    platformName: 'Android',\r\n    'appium:platformVersion': \"12\",\r\n    'appium:deviceName': 'Pixel 5',\r\n    'appium:automationName': 'UIAutomator2',\r\n    'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\r\n    'appium:autoGrantPermissions': true\r\n  }\r\n]\r\n\r\n//\r\n// Test runner services\r\n// Services take over a specific job you don't want to take care of. They enhance\r\n// your test setup with almost no effort. Unlike plugins, they don't add new\r\n// commands. Instead, they hook themselves up into the test process.\r\nconfig.services = ['appium'],\r\n\r\nexports.config = config;"],"mappings":";;AAAA,MAAM;EAACA;AAAD,IAAWC,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB,C,CAEA;AACA;AACA;AACA;AACA;;;AACAD,MAAM,CAACG,IAAP,GAAc,IAAd,C,CAEA;AACA;AACA;AACA;;AACAH,MAAM,CAACI,KAAP,GAAe,CACb;AACA,+BAFa,CAAf,C,CAKA;AACA;AACA;AACA;;AACAJ,MAAM,CAACK,YAAP,GAAsB,CACpB;EACEC,YAAY,EAAE,SADhB;EAEE,0BAA0B,IAF5B;EAGE,qBAAqB,SAHvB;EAIE,yBAAyB,cAJ3B;EAKE,cAAcJ,IAAI,CAACK,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,iCAAzB,CALhB;EAME,+BAA+B;AANjC,CADoB,CAAtB,C,CAWA;AACA;AACA;AACA;AACA;;AACAT,MAAM,CAACU,QAAP,GAAkB,CAAC,QAAD,CAAlB,EAEAC,OAAO,CAACX,MAAR,GAAiBA,MAFjB"}},"mtime":1654579745566},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\n// const path = require('path');\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  // port: 4723,\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  // specs: [\n  //     './test/specs/Android/view*.js'\n  // ],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  // capabilities: [{\n  //     platformName: 'Android',\n  //     'appium:platformVersion': \"12\",\n  //     'appium:deviceName': 'Pixel 5',\n  //     'appium:automationName': 'UIAutomator2',\n  //     'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\n  //     'appium:autoGrantPermissions': true\n  // }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  // //\n  // // Test runner services\n  // // Services take over a specific job you don't want to take care of. They enhance\n  // // your test setup with almost no effort. Unlike plugins, they don't add new\n  // // commands. Instead, they hook themselves up into the test process.\n  // services: ['appium'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  } //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\r\n   * Gets executed once before all workers get launched.\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\r\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n   * for that worker as well as modify runtime environments in an async fashion.\r\n   * @param  {String} cid      capability id (e.g 0-0)\r\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\r\n   * @param  {[type]} specs    specs to be run in the worker process\r\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\r\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\r\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\r\n   * Gets executed just after a worker process has exited.\r\n   * @param  {String} cid      capability id (e.g 0-0)\r\n   * @param  {Number} exitCode 0 - success, 1 - fail\r\n   * @param  {[type]} specs    specs to be run in the worker process\r\n   * @param  {Number} retries  number of retries used\r\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\r\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n   * to manipulate configurations depending on the capability or spec.\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that are to be run\r\n   * @param {String} cid worker id (e.g. 0-0)\r\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\r\n   * Gets executed before test execution begins. At this point you can access to all global\r\n   * variables like `browser`. It is the perfect place to define custom commands.\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n   * @param {Object}         browser      instance of created browser/device session\r\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\r\n   * Runs before a WebdriverIO command gets executed.\r\n   * @param {String} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\r\n   * Hook that gets executed before the suite starts\r\n   * @param {Object} suite suite details\r\n   */\n  // beforeSuite: function (suite) {\n  // },\n\n  /**\r\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n   */\n  // beforeTest: function (test, context) {\n  // },\n\n  /**\r\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n   * beforeEach in Mocha)\r\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\r\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n   * afterEach in Mocha)\r\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\r\n   * Function to be executed after a test (in Mocha/Jasmine only)\r\n   * @param {Object}  test             test object\r\n   * @param {Object}  context          scope object the test was executed with\r\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n   * @param {Any}     result.result    return object of test function\r\n   * @param {Number}  result.duration  duration of test\r\n   * @param {Boolean} result.passed    true if test has passed, otherwise false\r\n   * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\r\n   * Hook that gets executed after the suite has ended\r\n   * @param {Object} suite suite details\r\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\r\n   * Runs after a WebdriverIO command gets executed\r\n   * @param {String} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   * @param {Number} result 0 - command success, 1 - command error\r\n   * @param {Object} error error object if any\r\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\r\n   * Gets executed after all tests are done. You still have access to all global variables from\r\n   * the test.\r\n   * @param {Number} result 0 - test pass, 1 - test fail\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\r\n   * Gets executed right after terminating the webdriver session.\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\r\n   * Gets executed after all workers got shut down and the process is about to exit. An error\r\n   * thrown in the onComplete hook will result in the test run failing.\r\n   * @param {Object} exitCode 0 - success, 1 - fail\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {<Object>} results object containing test results\r\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\r\n  * Gets executed when a refresh happens.\r\n  * @param {String} oldSessionId session ID of the old session\r\n  * @param {String} newSessionId session ID of the new session\r\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["// const path = require('path');\r\n\r\nexports.config = {\r\n    //\r\n    // ====================\r\n    // Runner Configuration\r\n    // ====================\r\n    //\r\n    // port: 4723,\r\n    //\r\n    // ==================\r\n    // Specify Test Files\r\n    // ==================\r\n    // Define which test specs should run. The pattern is relative to the directory\r\n    // from which `wdio` was called.\r\n    //\r\n    // The specs are defined as an array of spec files (optionally using wildcards\r\n    // that will be expanded). The test for each spec file will be run in a separate\r\n    // worker process. In order to have a group of spec files run in the same worker\r\n    // process simply enclose them in an array within the specs array.\r\n    //\r\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\r\n    // then the current working directory is where your `package.json` resides, so `wdio`\r\n    // will be called from there.\r\n    //\r\n    // specs: [\r\n    //     './test/specs/Android/view*.js'\r\n    // ],\r\n    // Patterns to exclude.\r\n    exclude: [\r\n        // 'path/to/excluded/files'\r\n    ],\r\n    //\r\n    // ============\r\n    // Capabilities\r\n    // ============\r\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\r\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\r\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\r\n    // order to group specific specs to a specific capability.\r\n    //\r\n    // First, you can define how many instances should be started at the same time. Let's\r\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\r\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\r\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\r\n    // and 30 processes will get spawned. The property handles how many capabilities\r\n    // from the same test should run tests.\r\n    //\r\n    maxInstances: 10,\r\n    //\r\n    // If you have trouble getting all important capabilities together, check out the\r\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\r\n    // https://saucelabs.com/platform/platform-configurator\r\n    //\r\n    // capabilities: [{\r\n    //     platformName: 'Android',\r\n    //     'appium:platformVersion': \"12\",\r\n    //     'appium:deviceName': 'Pixel 5',\r\n    //     'appium:automationName': 'UIAutomator2',\r\n    //     'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\r\n    //     'appium:autoGrantPermissions': true\r\n    // }],\r\n    //\r\n    // ===================\r\n    // Test Configurations\r\n    // ===================\r\n    // Define all options that are relevant for the WebdriverIO instance here\r\n    //\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    logLevel: 'info',\r\n    //\r\n    // Set specific log levels per logger\r\n    // loggers:\r\n    // - webdriver, webdriverio\r\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\r\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\r\n    // - @wdio/local-runner\r\n    // - @wdio/sumologic-reporter\r\n    // - @wdio/cli, @wdio/config, @wdio/utils\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    // logLevels: {\r\n    //     webdriver: 'info',\r\n    //     '@wdio/appium-service': 'info'\r\n    // },\r\n    //\r\n    // If you only want to run your tests until a specific amount of tests have failed use\r\n    // bail (default is 0 - don't bail, run all tests).\r\n    bail: 0,\r\n    //\r\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\r\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\r\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\r\n    // gets prepended directly.\r\n    baseUrl: 'http://localhost',\r\n    //\r\n    // Default timeout for all waitFor* commands.\r\n    waitforTimeout: 10000,\r\n    //\r\n    // Default timeout in milliseconds for request\r\n    // if browser driver or grid doesn't send response\r\n    connectionRetryTimeout: 120000,\r\n    //\r\n    // Default request retries count\r\n    connectionRetryCount: 3,\r\n    // //\r\n    // // Test runner services\r\n    // // Services take over a specific job you don't want to take care of. They enhance\r\n    // // your test setup with almost no effort. Unlike plugins, they don't add new\r\n    // // commands. Instead, they hook themselves up into the test process.\r\n    // services: ['appium'],\r\n    \r\n    // Framework you want to run your specs with.\r\n    // The following are supported: Mocha, Jasmine, and Cucumber\r\n    // see also: https://webdriver.io/docs/frameworks\r\n    //\r\n    // Make sure you have the wdio adapter package for the specific framework installed\r\n    // before running any tests.\r\n    framework: 'mocha',\r\n    //\r\n    // The number of times to retry the entire specfile when it fails as a whole\r\n    // specFileRetries: 1,\r\n    //\r\n    // Delay in seconds between the spec file retry attempts\r\n    // specFileRetriesDelay: 0,\r\n    //\r\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\r\n    // specFileRetriesDeferred: false,\r\n    //\r\n    // Test reporter for stdout.\r\n    // The only one supported by default is 'dot'\r\n    // see also: https://webdriver.io/docs/dot-reporter\r\n    reporters: ['spec'],\r\n\r\n\r\n    \r\n    //\r\n    // Options to be passed to Mocha.\r\n    // See the full list at http://mochajs.org/\r\n    mochaOpts: {\r\n        ui: 'bdd',\r\n        timeout: 60000\r\n    },\r\n    //\r\n    // =====\r\n    // Hooks\r\n    // =====\r\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\r\n    // it and to build services around it. You can either apply a single function or an array of\r\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\r\n    // resolved to continue.\r\n    /**\r\n     * Gets executed once before all workers get launched.\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     */\r\n    // onPrepare: function (config, capabilities) {\r\n    // },\r\n    /**\r\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n     * for that worker as well as modify runtime environments in an async fashion.\r\n     * @param  {String} cid      capability id (e.g 0-0)\r\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\r\n     * @param  {[type]} specs    specs to be run in the worker process\r\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\r\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\r\n     */\r\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\r\n    // },\r\n    /**\r\n     * Gets executed just after a worker process has exited.\r\n     * @param  {String} cid      capability id (e.g 0-0)\r\n     * @param  {Number} exitCode 0 - success, 1 - fail\r\n     * @param  {[type]} specs    specs to be run in the worker process\r\n     * @param  {Number} retries  number of retries used\r\n     */\r\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\r\n    // },\r\n    /**\r\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n     * to manipulate configurations depending on the capability or spec.\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that are to be run\r\n     * @param {String} cid worker id (e.g. 0-0)\r\n     */\r\n    // beforeSession: function (config, capabilities, specs, cid) {\r\n    // },\r\n    /**\r\n     * Gets executed before test execution begins. At this point you can access to all global\r\n     * variables like `browser`. It is the perfect place to define custom commands.\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n     * @param {Object}         browser      instance of created browser/device session\r\n     */\r\n    // before: function (capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Runs before a WebdriverIO command gets executed.\r\n     * @param {String} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     */\r\n    // beforeCommand: function (commandName, args) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed before the suite starts\r\n     * @param {Object} suite suite details\r\n     */\r\n    // beforeSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n     */\r\n    // beforeTest: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n     * beforeEach in Mocha)\r\n     */\r\n    // beforeHook: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n     * afterEach in Mocha)\r\n     */\r\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n    /**\r\n     * Function to be executed after a test (in Mocha/Jasmine only)\r\n     * @param {Object}  test             test object\r\n     * @param {Object}  context          scope object the test was executed with\r\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n     * @param {Any}     result.result    return object of test function\r\n     * @param {Number}  result.duration  duration of test\r\n     * @param {Boolean} result.passed    true if test has passed, otherwise false\r\n     * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n     */\r\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n\r\n\r\n    /**\r\n     * Hook that gets executed after the suite has ended\r\n     * @param {Object} suite suite details\r\n     */\r\n    // afterSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Runs after a WebdriverIO command gets executed\r\n     * @param {String} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     * @param {Number} result 0 - command success, 1 - command error\r\n     * @param {Object} error error object if any\r\n     */\r\n    // afterCommand: function (commandName, args, result, error) {\r\n    // },\r\n    /**\r\n     * Gets executed after all tests are done. You still have access to all global variables from\r\n     * the test.\r\n     * @param {Number} result 0 - test pass, 1 - test fail\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // after: function (result, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed right after terminating the webdriver session.\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // afterSession: function (config, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed after all workers got shut down and the process is about to exit. An error\r\n     * thrown in the onComplete hook will result in the test run failing.\r\n     * @param {Object} exitCode 0 - success, 1 - fail\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {<Object>} results object containing test results\r\n     */\r\n    // onComplete: function(exitCode, config, capabilities, results) {\r\n    // },\r\n    /**\r\n    * Gets executed when a refresh happens.\r\n    * @param {String} oldSessionId session ID of the old session\r\n    * @param {String} newSessionId session ID of the new session\r\n    */\r\n    // onReload: function(oldSessionId, newSessionId) {\r\n    // }\r\n}\r\n"],"mappings":";;AAAA;AAEAA,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,CACL;EADK,CA3BI;EA8Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EA9CD;EA+Cb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAnEG;EAoEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CArFO;EAsFb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBA3FI;EA4Fb;EACA;EACAC,cAAc,EAAE,KA9FH;EA+Fb;EACA;EACA;EACAC,sBAAsB,EAAE,MAlGX;EAmGb;EACA;EACAC,oBAAoB,EAAE,CArGT;EAsGb;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAnHE;EAoHb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAD,CAjIE;EAqIb;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KADG;IAEPC,OAAO,EAAE;EAFF,CAxIE,CA4Ib;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;AA9Ra,CAAjB"}},"mtime":1654579745568},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\wdio.shared.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\n// const path = require('path');\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  // port: 4723,\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  // specs: [\n  //     './test/specs/Android/view*.js'\n  // ],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  // capabilities: [{\n  //     platformName: 'Android',\n  //     'appium:platformVersion': \"12\",\n  //     'appium:deviceName': 'Pixel 5',\n  //     'appium:automationName': 'UIAutomator2',\n  //     'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\n  //     'appium:autoGrantPermissions': true\n  // }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  // //\n  // // Test runner services\n  // // Services take over a specific job you don't want to take care of. They enhance\n  // // your test setup with almost no effort. Unlike plugins, they don't add new\n  // // commands. Instead, they hook themselves up into the test process.\n  // services: ['appium'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  } //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\r\n   * Gets executed once before all workers get launched.\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\r\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n   * for that worker as well as modify runtime environments in an async fashion.\r\n   * @param  {String} cid      capability id (e.g 0-0)\r\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\r\n   * @param  {[type]} specs    specs to be run in the worker process\r\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\r\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\r\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\r\n   * Gets executed just after a worker process has exited.\r\n   * @param  {String} cid      capability id (e.g 0-0)\r\n   * @param  {Number} exitCode 0 - success, 1 - fail\r\n   * @param  {[type]} specs    specs to be run in the worker process\r\n   * @param  {Number} retries  number of retries used\r\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\r\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n   * to manipulate configurations depending on the capability or spec.\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that are to be run\r\n   * @param {String} cid worker id (e.g. 0-0)\r\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\r\n   * Gets executed before test execution begins. At this point you can access to all global\r\n   * variables like `browser`. It is the perfect place to define custom commands.\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n   * @param {Object}         browser      instance of created browser/device session\r\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\r\n   * Runs before a WebdriverIO command gets executed.\r\n   * @param {String} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\r\n   * Hook that gets executed before the suite starts\r\n   * @param {Object} suite suite details\r\n   */\n  // beforeSuite: function (suite) {\n  // },\n\n  /**\r\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n   */\n  // beforeTest: function (test, context) {\n  // },\n\n  /**\r\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n   * beforeEach in Mocha)\r\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\r\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n   * afterEach in Mocha)\r\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\r\n   * Function to be executed after a test (in Mocha/Jasmine only)\r\n   * @param {Object}  test             test object\r\n   * @param {Object}  context          scope object the test was executed with\r\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n   * @param {Any}     result.result    return object of test function\r\n   * @param {Number}  result.duration  duration of test\r\n   * @param {Boolean} result.passed    true if test has passed, otherwise false\r\n   * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\r\n   * Hook that gets executed after the suite has ended\r\n   * @param {Object} suite suite details\r\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\r\n   * Runs after a WebdriverIO command gets executed\r\n   * @param {String} commandName hook command name\r\n   * @param {Array} args arguments that command would receive\r\n   * @param {Number} result 0 - command success, 1 - command error\r\n   * @param {Object} error error object if any\r\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\r\n   * Gets executed after all tests are done. You still have access to all global variables from\r\n   * the test.\r\n   * @param {Number} result 0 - test pass, 1 - test fail\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\r\n   * Gets executed right after terminating the webdriver session.\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {Array.<String>} specs List of spec file paths that ran\r\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\r\n   * Gets executed after all workers got shut down and the process is about to exit. An error\r\n   * thrown in the onComplete hook will result in the test run failing.\r\n   * @param {Object} exitCode 0 - success, 1 - fail\r\n   * @param {Object} config wdio configuration object\r\n   * @param {Array.<Object>} capabilities list of capabilities details\r\n   * @param {<Object>} results object containing test results\r\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\r\n  * Gets executed when a refresh happens.\r\n  * @param {String} oldSessionId session ID of the old session\r\n  * @param {String} newSessionId session ID of the new session\r\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","exclude","maxInstances","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\config\\","sources":["wdio.shared.conf.js"],"sourcesContent":["// const path = require('path');\r\n\r\nexports.config = {\r\n    //\r\n    // ====================\r\n    // Runner Configuration\r\n    // ====================\r\n    //\r\n    // port: 4723,\r\n    //\r\n    // ==================\r\n    // Specify Test Files\r\n    // ==================\r\n    // Define which test specs should run. The pattern is relative to the directory\r\n    // from which `wdio` was called.\r\n    //\r\n    // The specs are defined as an array of spec files (optionally using wildcards\r\n    // that will be expanded). The test for each spec file will be run in a separate\r\n    // worker process. In order to have a group of spec files run in the same worker\r\n    // process simply enclose them in an array within the specs array.\r\n    //\r\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\r\n    // then the current working directory is where your `package.json` resides, so `wdio`\r\n    // will be called from there.\r\n    //\r\n    // specs: [\r\n    //     './test/specs/Android/view*.js'\r\n    // ],\r\n    // Patterns to exclude.\r\n    exclude: [\r\n        // 'path/to/excluded/files'\r\n    ],\r\n    //\r\n    // ============\r\n    // Capabilities\r\n    // ============\r\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\r\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\r\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\r\n    // order to group specific specs to a specific capability.\r\n    //\r\n    // First, you can define how many instances should be started at the same time. Let's\r\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\r\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\r\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\r\n    // and 30 processes will get spawned. The property handles how many capabilities\r\n    // from the same test should run tests.\r\n    //\r\n    maxInstances: 10,\r\n    //\r\n    // If you have trouble getting all important capabilities together, check out the\r\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\r\n    // https://saucelabs.com/platform/platform-configurator\r\n    //\r\n    // capabilities: [{\r\n    //     platformName: 'Android',\r\n    //     'appium:platformVersion': \"12\",\r\n    //     'appium:deviceName': 'Pixel 5',\r\n    //     'appium:automationName': 'UIAutomator2',\r\n    //     'appium:app': path.join(process.cwd(), 'app/android/app-dev-release.apk'),\r\n    //     'appium:autoGrantPermissions': true\r\n    // }],\r\n    //\r\n    // ===================\r\n    // Test Configurations\r\n    // ===================\r\n    // Define all options that are relevant for the WebdriverIO instance here\r\n    //\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    logLevel: 'info',\r\n    //\r\n    // Set specific log levels per logger\r\n    // loggers:\r\n    // - webdriver, webdriverio\r\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\r\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\r\n    // - @wdio/local-runner\r\n    // - @wdio/sumologic-reporter\r\n    // - @wdio/cli, @wdio/config, @wdio/utils\r\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\r\n    // logLevels: {\r\n    //     webdriver: 'info',\r\n    //     '@wdio/appium-service': 'info'\r\n    // },\r\n    //\r\n    // If you only want to run your tests until a specific amount of tests have failed use\r\n    // bail (default is 0 - don't bail, run all tests).\r\n    bail: 0,\r\n    //\r\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\r\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\r\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\r\n    // gets prepended directly.\r\n    baseUrl: 'http://localhost',\r\n    //\r\n    // Default timeout for all waitFor* commands.\r\n    waitforTimeout: 10000,\r\n    //\r\n    // Default timeout in milliseconds for request\r\n    // if browser driver or grid doesn't send response\r\n    connectionRetryTimeout: 120000,\r\n    //\r\n    // Default request retries count\r\n    connectionRetryCount: 3,\r\n    // //\r\n    // // Test runner services\r\n    // // Services take over a specific job you don't want to take care of. They enhance\r\n    // // your test setup with almost no effort. Unlike plugins, they don't add new\r\n    // // commands. Instead, they hook themselves up into the test process.\r\n    // services: ['appium'],\r\n    \r\n    // Framework you want to run your specs with.\r\n    // The following are supported: Mocha, Jasmine, and Cucumber\r\n    // see also: https://webdriver.io/docs/frameworks\r\n    //\r\n    // Make sure you have the wdio adapter package for the specific framework installed\r\n    // before running any tests.\r\n    framework: 'mocha',\r\n    //\r\n    // The number of times to retry the entire specfile when it fails as a whole\r\n    // specFileRetries: 1,\r\n    //\r\n    // Delay in seconds between the spec file retry attempts\r\n    // specFileRetriesDelay: 0,\r\n    //\r\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\r\n    // specFileRetriesDeferred: false,\r\n    //\r\n    // Test reporter for stdout.\r\n    // The only one supported by default is 'dot'\r\n    // see also: https://webdriver.io/docs/dot-reporter\r\n    reporters: ['spec'],\r\n\r\n\r\n    \r\n    //\r\n    // Options to be passed to Mocha.\r\n    // See the full list at http://mochajs.org/\r\n    mochaOpts: {\r\n        ui: 'bdd',\r\n        timeout: 60000\r\n    },\r\n    //\r\n    // =====\r\n    // Hooks\r\n    // =====\r\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\r\n    // it and to build services around it. You can either apply a single function or an array of\r\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\r\n    // resolved to continue.\r\n    /**\r\n     * Gets executed once before all workers get launched.\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     */\r\n    // onPrepare: function (config, capabilities) {\r\n    // },\r\n    /**\r\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\r\n     * for that worker as well as modify runtime environments in an async fashion.\r\n     * @param  {String} cid      capability id (e.g 0-0)\r\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\r\n     * @param  {[type]} specs    specs to be run in the worker process\r\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\r\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\r\n     */\r\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\r\n    // },\r\n    /**\r\n     * Gets executed just after a worker process has exited.\r\n     * @param  {String} cid      capability id (e.g 0-0)\r\n     * @param  {Number} exitCode 0 - success, 1 - fail\r\n     * @param  {[type]} specs    specs to be run in the worker process\r\n     * @param  {Number} retries  number of retries used\r\n     */\r\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\r\n    // },\r\n    /**\r\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\r\n     * to manipulate configurations depending on the capability or spec.\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that are to be run\r\n     * @param {String} cid worker id (e.g. 0-0)\r\n     */\r\n    // beforeSession: function (config, capabilities, specs, cid) {\r\n    // },\r\n    /**\r\n     * Gets executed before test execution begins. At this point you can access to all global\r\n     * variables like `browser`. It is the perfect place to define custom commands.\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\r\n     * @param {Object}         browser      instance of created browser/device session\r\n     */\r\n    // before: function (capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Runs before a WebdriverIO command gets executed.\r\n     * @param {String} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     */\r\n    // beforeCommand: function (commandName, args) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed before the suite starts\r\n     * @param {Object} suite suite details\r\n     */\r\n    // beforeSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\r\n     */\r\n    // beforeTest: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\r\n     * beforeEach in Mocha)\r\n     */\r\n    // beforeHook: function (test, context) {\r\n    // },\r\n    /**\r\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\r\n     * afterEach in Mocha)\r\n     */\r\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n    /**\r\n     * Function to be executed after a test (in Mocha/Jasmine only)\r\n     * @param {Object}  test             test object\r\n     * @param {Object}  context          scope object the test was executed with\r\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\r\n     * @param {Any}     result.result    return object of test function\r\n     * @param {Number}  result.duration  duration of test\r\n     * @param {Boolean} result.passed    true if test has passed, otherwise false\r\n     * @param {Object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\r\n     */\r\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\r\n    // },\r\n\r\n\r\n    /**\r\n     * Hook that gets executed after the suite has ended\r\n     * @param {Object} suite suite details\r\n     */\r\n    // afterSuite: function (suite) {\r\n    // },\r\n    /**\r\n     * Runs after a WebdriverIO command gets executed\r\n     * @param {String} commandName hook command name\r\n     * @param {Array} args arguments that command would receive\r\n     * @param {Number} result 0 - command success, 1 - command error\r\n     * @param {Object} error error object if any\r\n     */\r\n    // afterCommand: function (commandName, args, result, error) {\r\n    // },\r\n    /**\r\n     * Gets executed after all tests are done. You still have access to all global variables from\r\n     * the test.\r\n     * @param {Number} result 0 - test pass, 1 - test fail\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // after: function (result, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed right after terminating the webdriver session.\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {Array.<String>} specs List of spec file paths that ran\r\n     */\r\n    // afterSession: function (config, capabilities, specs) {\r\n    // },\r\n    /**\r\n     * Gets executed after all workers got shut down and the process is about to exit. An error\r\n     * thrown in the onComplete hook will result in the test run failing.\r\n     * @param {Object} exitCode 0 - success, 1 - fail\r\n     * @param {Object} config wdio configuration object\r\n     * @param {Array.<Object>} capabilities list of capabilities details\r\n     * @param {<Object>} results object containing test results\r\n     */\r\n    // onComplete: function(exitCode, config, capabilities, results) {\r\n    // },\r\n    /**\r\n    * Gets executed when a refresh happens.\r\n    * @param {String} oldSessionId session ID of the old session\r\n    * @param {String} newSessionId session ID of the new session\r\n    */\r\n    // onReload: function(oldSessionId, newSessionId) {\r\n    // }\r\n}\r\n"],"mappings":";;AAAA;AAEAA,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,CACL;EADK,CA3BI;EA8Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EA9CD;EA+Cb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAnEG;EAoEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CArFO;EAsFb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBA3FI;EA4Fb;EACA;EACAC,cAAc,EAAE,KA9FH;EA+Fb;EACA;EACA;EACAC,sBAAsB,EAAE,MAlGX;EAmGb;EACA;EACAC,oBAAoB,EAAE,CArGT;EAsGb;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAnHE;EAoHb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAD,CAjIE;EAqIb;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KADG;IAEPC,OAAO,EAAE;EAFF,CAxIE,CA4Ib;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;AA9Ra,CAAjB"}},"mtime":1654579745568},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\android\\\\view-company-mood.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nvar _commands = _interopRequireDefault(require(\"../../screenobject/android/commands\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//const customCommands = require(\"../../screenobject/android/commands\");\ndescribe('View Company Mood Feature', () => {\n  it('User clicks “+” icon in mood tracker feed', async () => {\n    // Given user is on mood tracker feed\n    await _commands.default.userLogin(); // click login\n\n    await $('~View company mood').click(); // When user clicks \"follow\" icon\n\n    await $('//android.view.View[@index=\"5\"]').click(); //  Then \"Follow People\" screen should appear\n\n    await expect($('~Follow People')).toExist();\n  });\n  it('User views followed member first in the list', async () => {\n    //  Then followed member should be first in the list to show\n    await expect($('//android.widget.Button[@content-desc=\"￼ Following\"]')).toExist();\n  });\n  it('User follows other member', async () => {\n    //  When user clicks “Follow” button in members name\n    await $('(//android.widget.Button[@content-desc=\"Follow\"])[1]').click(); // Then Following should be displayed\n\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(2));\n  });\n  it('User unfollows other member', async () => {\n    //  user clicked following\n    await $('(//android.widget.Button[@content-desc=\"￼ Following\"])[1]').click(); // Then user should be able to unfollow people.\n\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(4));\n  });\n  it('User search people', async () => {\n    //  When user enters the name he/she wants to follow in \"search\" bar\n    await $('//android.widget.ImageView[@text=\"Search\"]').click();\n    await $('//android.widget.ImageView[@text=\"Search\"]').addValue(\"Angelica\"); //\n\n    await driver.back(); // Then the person should appear appear below\n    //await expect($('//android.view.View[@content-desc=\"A Abraham LINKcon HR\"]')).toHaveTextContaining(\"Abraham LINKcon\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiY3VzdG9tQ29tbWFuZHMiLCJ1c2VyTG9naW4iLCIkIiwiY2xpY2siLCJleHBlY3QiLCJ0b0V4aXN0IiwidG9FcXVhbCIsImFkZFZhbHVlIiwiZHJpdmVyIiwiYmFjayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxZQU5BUENcXERlc2t0b3BcXGlkZW50aWZpLW1vYmlsZVxcdGVzdFxcc3BlY3NcXGFuZHJvaWRcXCIsInNvdXJjZXMiOlsidmlldy1jb21wYW55LW1vb2Quc3BlYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL2NvbnN0IGN1c3RvbUNvbW1hbmRzID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbm9iamVjdC9hbmRyb2lkL2NvbW1hbmRzXCIpO1xyXG5pbXBvcnQgY3VzdG9tQ29tbWFuZHMgZnJvbSAnLi4vLi4vc2NyZWVub2JqZWN0L2FuZHJvaWQvY29tbWFuZHMnO1xyXG5cclxuZGVzY3JpYmUoJ1ZpZXcgQ29tcGFueSBNb29kIEZlYXR1cmUnLCAoKSA9PiB7XHJcbiAgaXQoJ1VzZXIgY2xpY2tzIOKAnCvigJ0gaWNvbiBpbiBtb29kIHRyYWNrZXIgZmVlZCcsIGFzeW5jICgpID0+IHtcclxuICAgIC8vIEdpdmVuIHVzZXIgaXMgb24gbW9vZCB0cmFja2VyIGZlZWRcclxuICAgIGF3YWl0IGN1c3RvbUNvbW1hbmRzLnVzZXJMb2dpbigpO1xyXG5cclxuICAgIC8vIGNsaWNrIGxvZ2luXHJcbiAgICBhd2FpdCAkKCd+VmlldyBjb21wYW55IG1vb2QnKS5jbGljaygpO1xyXG5cclxuICAgIC8vIFdoZW4gdXNlciBjbGlja3MgXCJmb2xsb3dcIiBpY29uXHJcbiAgICBhd2FpdCAkKCcvL2FuZHJvaWQudmlldy5WaWV3W0BpbmRleD1cIjVcIl0nKS5jbGljaygpO1xyXG5cclxuICAgIC8vICBUaGVuIFwiRm9sbG93IFBlb3BsZVwiIHNjcmVlbiBzaG91bGQgYXBwZWFyXHJcbiAgICBhd2FpdCBleHBlY3QoJCgnfkZvbGxvdyBQZW9wbGUnKSkudG9FeGlzdCgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnVXNlciB2aWV3cyBmb2xsb3dlZCBtZW1iZXIgZmlyc3QgaW4gdGhlIGxpc3QnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyAgVGhlbiBmb2xsb3dlZCBtZW1iZXIgc2hvdWxkIGJlIGZpcnN0IGluIHRoZSBsaXN0IHRvIHNob3dcclxuICAgIGF3YWl0IGV4cGVjdCgkKCcvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXScpKS50b0V4aXN0KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdVc2VyIGZvbGxvd3Mgb3RoZXIgbWVtYmVyJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgLy8gIFdoZW4gdXNlciBjbGlja3Mg4oCcRm9sbG934oCdIGJ1dHRvbiBpbiBtZW1iZXJzIG5hbWVcclxuICAgIGF3YWl0ICQoJygvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwiRm9sbG93XCJdKVsxXScpLmNsaWNrKCk7XHJcblxyXG4gICAgLy8gVGhlbiBGb2xsb3dpbmcgc2hvdWxkIGJlIGRpc3BsYXllZFxyXG4gICAgYXdhaXQgZXhwZWN0KCQoJygvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXSknKS50b0VxdWFsKDIpKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ1VzZXIgdW5mb2xsb3dzIG90aGVyIG1lbWJlcicsIGFzeW5jICgpID0+IHtcclxuICAgIC8vICB1c2VyIGNsaWNrZWQgZm9sbG93aW5nXHJcbiAgICBhd2FpdCAkKCcoLy9hbmRyb2lkLndpZGdldC5CdXR0b25bQGNvbnRlbnQtZGVzYz1cIu+/vCBGb2xsb3dpbmdcIl0pWzFdJykuY2xpY2soKTtcclxuXHJcbiAgICAvLyBUaGVuIHVzZXIgc2hvdWxkIGJlIGFibGUgdG8gdW5mb2xsb3cgcGVvcGxlLlxyXG4gICAgYXdhaXQgZXhwZWN0KCQoJygvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXSknKS50b0VxdWFsKDQpKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ1VzZXIgc2VhcmNoIHBlb3BsZScsIGFzeW5jICgpID0+IHtcclxuICAgIC8vICBXaGVuIHVzZXIgZW50ZXJzIHRoZSBuYW1lIGhlL3NoZSB3YW50cyB0byBmb2xsb3cgaW4gXCJzZWFyY2hcIiBiYXJcclxuICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VWaWV3W0B0ZXh0PVwiU2VhcmNoXCJdJykuY2xpY2soKTtcclxuICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VWaWV3W0B0ZXh0PVwiU2VhcmNoXCJdJykuYWRkVmFsdWUoXCJBbmdlbGljYVwiKTtcclxuXHJcbiAgICAvL1xyXG4gICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcclxuXHJcbiAgICAvLyBUaGVuIHRoZSBwZXJzb24gc2hvdWxkIGFwcGVhciBhcHBlYXIgYmVsb3dcclxuICAgIC8vYXdhaXQgZXhwZWN0KCQoJy8vYW5kcm9pZC52aWV3LlZpZXdbQGNvbnRlbnQtZGVzYz1cIkEgQWJyYWhhbSBMSU5LY29uIEhSXCJdJykpLnRvSGF2ZVRleHRDb250YWluaW5nKFwiQWJyYWhhbSBMSU5LY29uXCIpO1xyXG4gIH0pO1xyXG59KSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7OztBQURBO0FBR0FBLFFBQVEsQ0FBQywyQkFBRCxFQUE4QixNQUFNO0VBQzFDQyxFQUFFLENBQUMsMkNBQUQsRUFBOEMsWUFBWTtJQUMxRDtJQUNBLE1BQU1DLGlCQUFBLENBQWVDLFNBQWYsRUFBTixDQUYwRCxDQUkxRDs7SUFDQSxNQUFNQyxDQUFDLENBQUMsb0JBQUQsQ0FBRCxDQUF3QkMsS0FBeEIsRUFBTixDQUwwRCxDQU8xRDs7SUFDQSxNQUFNRCxDQUFDLENBQUMsaUNBQUQsQ0FBRCxDQUFxQ0MsS0FBckMsRUFBTixDQVIwRCxDQVUxRDs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyxnQkFBRCxDQUFGLENBQU4sQ0FBNEJHLE9BQTVCLEVBQU47RUFDRCxDQVpDLENBQUY7RUFjQU4sRUFBRSxDQUFDLDhDQUFELEVBQWlELFlBQVk7SUFDN0Q7SUFDQSxNQUFNSyxNQUFNLENBQUNGLENBQUMsQ0FBQyxzREFBRCxDQUFGLENBQU4sQ0FBa0VHLE9BQWxFLEVBQU47RUFDRCxDQUhDLENBQUY7RUFLQU4sRUFBRSxDQUFDLDJCQUFELEVBQThCLFlBQVk7SUFDMUM7SUFDQSxNQUFNRyxDQUFDLENBQUMsc0RBQUQsQ0FBRCxDQUEwREMsS0FBMUQsRUFBTixDQUYwQyxDQUkxQzs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyx3REFBRCxDQUFELENBQTRESSxPQUE1RCxDQUFvRSxDQUFwRSxDQUFELENBQVo7RUFDRCxDQU5DLENBQUY7RUFRQVAsRUFBRSxDQUFDLDZCQUFELEVBQWdDLFlBQVk7SUFDNUM7SUFDQSxNQUFNRyxDQUFDLENBQUMsMkRBQUQsQ0FBRCxDQUErREMsS0FBL0QsRUFBTixDQUY0QyxDQUk1Qzs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyx3REFBRCxDQUFELENBQTRESSxPQUE1RCxDQUFvRSxDQUFwRSxDQUFELENBQVo7RUFDRCxDQU5DLENBQUY7RUFRQVAsRUFBRSxDQUFDLG9CQUFELEVBQXVCLFlBQVk7SUFDbkM7SUFDQSxNQUFNRyxDQUFDLENBQUMsNENBQUQsQ0FBRCxDQUFnREMsS0FBaEQsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQyw0Q0FBRCxDQUFELENBQWdESyxRQUFoRCxDQUF5RCxVQUF6RCxDQUFOLENBSG1DLENBS25DOztJQUNBLE1BQU1DLE1BQU0sQ0FBQ0MsSUFBUCxFQUFOLENBTm1DLENBUW5DO0lBQ0E7RUFDRCxDQVZDLENBQUY7QUFXRCxDQS9DTyxDQUFSIn0=","map":{"version":3,"names":["describe","it","customCommands","userLogin","$","click","expect","toExist","toEqual","addValue","driver","back"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\test\\specs\\android\\","sources":["view-company-mood.spec.js"],"sourcesContent":["//const customCommands = require(\"../../screenobject/android/commands\");\r\nimport customCommands from '../../screenobject/android/commands';\r\n\r\ndescribe('View Company Mood Feature', () => {\r\n  it('User clicks “+” icon in mood tracker feed', async () => {\r\n    // Given user is on mood tracker feed\r\n    await customCommands.userLogin();\r\n\r\n    // click login\r\n    await $('~View company mood').click();\r\n\r\n    // When user clicks \"follow\" icon\r\n    await $('//android.view.View[@index=\"5\"]').click();\r\n\r\n    //  Then \"Follow People\" screen should appear\r\n    await expect($('~Follow People')).toExist();\r\n  });\r\n\r\n  it('User views followed member first in the list', async () => {\r\n    //  Then followed member should be first in the list to show\r\n    await expect($('//android.widget.Button[@content-desc=\"￼ Following\"]')).toExist();\r\n  });\r\n\r\n  it('User follows other member', async () => {\r\n    //  When user clicks “Follow” button in members name\r\n    await $('(//android.widget.Button[@content-desc=\"Follow\"])[1]').click();\r\n\r\n    // Then Following should be displayed\r\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(2));\r\n  });\r\n\r\n  it('User unfollows other member', async () => {\r\n    //  user clicked following\r\n    await $('(//android.widget.Button[@content-desc=\"￼ Following\"])[1]').click();\r\n\r\n    // Then user should be able to unfollow people.\r\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(4));\r\n  });\r\n\r\n  it('User search people', async () => {\r\n    //  When user enters the name he/she wants to follow in \"search\" bar\r\n    await $('//android.widget.ImageView[@text=\"Search\"]').click();\r\n    await $('//android.widget.ImageView[@text=\"Search\"]').addValue(\"Angelica\");\r\n\r\n    //\r\n    await driver.back();\r\n\r\n    // Then the person should appear appear below\r\n    //await expect($('//android.view.View[@content-desc=\"A Abraham LINKcon HR\"]')).toHaveTextContaining(\"Abraham LINKcon\");\r\n  });\r\n})"],"mappings":";;AACA;;;;AADA;AAGAA,QAAQ,CAAC,2BAAD,EAA8B,MAAM;EAC1CC,EAAE,CAAC,2CAAD,EAA8C,YAAY;IAC1D;IACA,MAAMC,iBAAA,CAAeC,SAAf,EAAN,CAF0D,CAI1D;;IACA,MAAMC,CAAC,CAAC,oBAAD,CAAD,CAAwBC,KAAxB,EAAN,CAL0D,CAO1D;;IACA,MAAMD,CAAC,CAAC,iCAAD,CAAD,CAAqCC,KAArC,EAAN,CAR0D,CAU1D;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,gBAAD,CAAF,CAAN,CAA4BG,OAA5B,EAAN;EACD,CAZC,CAAF;EAcAN,EAAE,CAAC,8CAAD,EAAiD,YAAY;IAC7D;IACA,MAAMK,MAAM,CAACF,CAAC,CAAC,sDAAD,CAAF,CAAN,CAAkEG,OAAlE,EAAN;EACD,CAHC,CAAF;EAKAN,EAAE,CAAC,2BAAD,EAA8B,YAAY;IAC1C;IACA,MAAMG,CAAC,CAAC,sDAAD,CAAD,CAA0DC,KAA1D,EAAN,CAF0C,CAI1C;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,wDAAD,CAAD,CAA4DI,OAA5D,CAAoE,CAApE,CAAD,CAAZ;EACD,CANC,CAAF;EAQAP,EAAE,CAAC,6BAAD,EAAgC,YAAY;IAC5C;IACA,MAAMG,CAAC,CAAC,2DAAD,CAAD,CAA+DC,KAA/D,EAAN,CAF4C,CAI5C;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,wDAAD,CAAD,CAA4DI,OAA5D,CAAoE,CAApE,CAAD,CAAZ;EACD,CANC,CAAF;EAQAP,EAAE,CAAC,oBAAD,EAAuB,YAAY;IACnC;IACA,MAAMG,CAAC,CAAC,4CAAD,CAAD,CAAgDC,KAAhD,EAAN;IACA,MAAMD,CAAC,CAAC,4CAAD,CAAD,CAAgDK,QAAhD,CAAyD,UAAzD,CAAN,CAHmC,CAKnC;;IACA,MAAMC,MAAM,CAACC,IAAP,EAAN,CANmC,CAQnC;IACA;EACD,CAVC,CAAF;AAWD,CA/CO,CAAR"}},"mtime":1654579834754},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\android\\\\view-company-mood.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nvar _commands = _interopRequireDefault(require(\"../../screenobject/android/commands\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//const customCommands = require(\"../../screenobject/android/commands\");\ndescribe('View Company Mood Feature', () => {\n  it('User clicks “+” icon in mood tracker feed', async () => {\n    // Given user is on mood tracker feed\n    await _commands.default.userLogin(); // click login\n\n    await $('~View company mood').click(); // When user clicks \"follow\" icon\n\n    await $('//android.view.View[@index=\"5\"]').click(); //  Then \"Follow People\" screen should appear\n\n    await expect($('~Follow People')).toExist();\n  });\n  it('User views followed member first in the list', async () => {\n    //  Then followed member should be first in the list to show\n    await expect($('//android.widget.Button[@content-desc=\"￼ Following\"]')).toExist();\n  });\n  it('User follows other member', async () => {\n    //  When user clicks “Follow” button in members name\n    await $('(//android.widget.Button[@content-desc=\"Follow\"])[1]').click(); // Then Following should be displayed\n\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(2));\n  });\n  it('User unfollows other member', async () => {\n    //  user clicked following\n    await $('(//android.widget.Button[@content-desc=\"￼ Following\"])[1]').click(); // Then user should be able to unfollow people.\n\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(4));\n  });\n  it('User search people', async () => {\n    //  When user enters the name he/she wants to follow in \"search\" bar\n    await $('//android.widget.ImageView[@text=\"Search\"]').click();\n    await $('//android.widget.ImageView[@text=\"Search\"]').addValue(\"Angelica\"); //\n\n    await driver.back(); // Then the person should appear appear below\n    //await expect($('//android.view.View[@content-desc=\"A Abraham LINKcon HR\"]')).toHaveTextContaining(\"Abraham LINKcon\");\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiY3VzdG9tQ29tbWFuZHMiLCJ1c2VyTG9naW4iLCIkIiwiY2xpY2siLCJleHBlY3QiLCJ0b0V4aXN0IiwidG9FcXVhbCIsImFkZFZhbHVlIiwiZHJpdmVyIiwiYmFjayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxZQU5BUENcXERlc2t0b3BcXGlkZW50aWZpLW1vYmlsZVxcdGVzdFxcc3BlY3NcXGFuZHJvaWRcXCIsInNvdXJjZXMiOlsidmlldy1jb21wYW55LW1vb2Quc3BlYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL2NvbnN0IGN1c3RvbUNvbW1hbmRzID0gcmVxdWlyZShcIi4uLy4uL3NjcmVlbm9iamVjdC9hbmRyb2lkL2NvbW1hbmRzXCIpO1xyXG5pbXBvcnQgY3VzdG9tQ29tbWFuZHMgZnJvbSAnLi4vLi4vc2NyZWVub2JqZWN0L2FuZHJvaWQvY29tbWFuZHMnO1xyXG5cclxuZGVzY3JpYmUoJ1ZpZXcgQ29tcGFueSBNb29kIEZlYXR1cmUnLCAoKSA9PiB7XHJcbiAgaXQoJ1VzZXIgY2xpY2tzIOKAnCvigJ0gaWNvbiBpbiBtb29kIHRyYWNrZXIgZmVlZCcsIGFzeW5jICgpID0+IHtcclxuICAgIC8vIEdpdmVuIHVzZXIgaXMgb24gbW9vZCB0cmFja2VyIGZlZWRcclxuICAgIGF3YWl0IGN1c3RvbUNvbW1hbmRzLnVzZXJMb2dpbigpO1xyXG5cclxuICAgIC8vIGNsaWNrIGxvZ2luXHJcbiAgICBhd2FpdCAkKCd+VmlldyBjb21wYW55IG1vb2QnKS5jbGljaygpO1xyXG5cclxuICAgIC8vIFdoZW4gdXNlciBjbGlja3MgXCJmb2xsb3dcIiBpY29uXHJcbiAgICBhd2FpdCAkKCcvL2FuZHJvaWQudmlldy5WaWV3W0BpbmRleD1cIjVcIl0nKS5jbGljaygpO1xyXG5cclxuICAgIC8vICBUaGVuIFwiRm9sbG93IFBlb3BsZVwiIHNjcmVlbiBzaG91bGQgYXBwZWFyXHJcbiAgICBhd2FpdCBleHBlY3QoJCgnfkZvbGxvdyBQZW9wbGUnKSkudG9FeGlzdCgpO1xyXG4gIH0pO1xyXG5cclxuICBpdCgnVXNlciB2aWV3cyBmb2xsb3dlZCBtZW1iZXIgZmlyc3QgaW4gdGhlIGxpc3QnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyAgVGhlbiBmb2xsb3dlZCBtZW1iZXIgc2hvdWxkIGJlIGZpcnN0IGluIHRoZSBsaXN0IHRvIHNob3dcclxuICAgIGF3YWl0IGV4cGVjdCgkKCcvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXScpKS50b0V4aXN0KCk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KCdVc2VyIGZvbGxvd3Mgb3RoZXIgbWVtYmVyJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgLy8gIFdoZW4gdXNlciBjbGlja3Mg4oCcRm9sbG934oCdIGJ1dHRvbiBpbiBtZW1iZXJzIG5hbWVcclxuICAgIGF3YWl0ICQoJygvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwiRm9sbG93XCJdKVsxXScpLmNsaWNrKCk7XHJcblxyXG4gICAgLy8gVGhlbiBGb2xsb3dpbmcgc2hvdWxkIGJlIGRpc3BsYXllZFxyXG4gICAgYXdhaXQgZXhwZWN0KCQoJygvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXSknKS50b0VxdWFsKDIpKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ1VzZXIgdW5mb2xsb3dzIG90aGVyIG1lbWJlcicsIGFzeW5jICgpID0+IHtcclxuICAgIC8vICB1c2VyIGNsaWNrZWQgZm9sbG93aW5nXHJcbiAgICBhd2FpdCAkKCcoLy9hbmRyb2lkLndpZGdldC5CdXR0b25bQGNvbnRlbnQtZGVzYz1cIu+/vCBGb2xsb3dpbmdcIl0pWzFdJykuY2xpY2soKTtcclxuXHJcbiAgICAvLyBUaGVuIHVzZXIgc2hvdWxkIGJlIGFibGUgdG8gdW5mb2xsb3cgcGVvcGxlLlxyXG4gICAgYXdhaXQgZXhwZWN0KCQoJygvL2FuZHJvaWQud2lkZ2V0LkJ1dHRvbltAY29udGVudC1kZXNjPVwi77+8IEZvbGxvd2luZ1wiXSknKS50b0VxdWFsKDQpKTtcclxuICB9KTtcclxuXHJcbiAgaXQoJ1VzZXIgc2VhcmNoIHBlb3BsZScsIGFzeW5jICgpID0+IHtcclxuICAgIC8vICBXaGVuIHVzZXIgZW50ZXJzIHRoZSBuYW1lIGhlL3NoZSB3YW50cyB0byBmb2xsb3cgaW4gXCJzZWFyY2hcIiBiYXJcclxuICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VWaWV3W0B0ZXh0PVwiU2VhcmNoXCJdJykuY2xpY2soKTtcclxuICAgIGF3YWl0ICQoJy8vYW5kcm9pZC53aWRnZXQuSW1hZ2VWaWV3W0B0ZXh0PVwiU2VhcmNoXCJdJykuYWRkVmFsdWUoXCJBbmdlbGljYVwiKTtcclxuXHJcbiAgICAvL1xyXG4gICAgYXdhaXQgZHJpdmVyLmJhY2soKTtcclxuXHJcbiAgICAvLyBUaGVuIHRoZSBwZXJzb24gc2hvdWxkIGFwcGVhciBhcHBlYXIgYmVsb3dcclxuICAgIC8vYXdhaXQgZXhwZWN0KCQoJy8vYW5kcm9pZC52aWV3LlZpZXdbQGNvbnRlbnQtZGVzYz1cIkEgQWJyYWhhbSBMSU5LY29uIEhSXCJdJykpLnRvSGF2ZVRleHRDb250YWluaW5nKFwiQWJyYWhhbSBMSU5LY29uXCIpO1xyXG4gIH0pO1xyXG59KSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7OztBQURBO0FBR0FBLFFBQVEsQ0FBQywyQkFBRCxFQUE4QixNQUFNO0VBQzFDQyxFQUFFLENBQUMsMkNBQUQsRUFBOEMsWUFBWTtJQUMxRDtJQUNBLE1BQU1DLGlCQUFBLENBQWVDLFNBQWYsRUFBTixDQUYwRCxDQUkxRDs7SUFDQSxNQUFNQyxDQUFDLENBQUMsb0JBQUQsQ0FBRCxDQUF3QkMsS0FBeEIsRUFBTixDQUwwRCxDQU8xRDs7SUFDQSxNQUFNRCxDQUFDLENBQUMsaUNBQUQsQ0FBRCxDQUFxQ0MsS0FBckMsRUFBTixDQVIwRCxDQVUxRDs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyxnQkFBRCxDQUFGLENBQU4sQ0FBNEJHLE9BQTVCLEVBQU47RUFDRCxDQVpDLENBQUY7RUFjQU4sRUFBRSxDQUFDLDhDQUFELEVBQWlELFlBQVk7SUFDN0Q7SUFDQSxNQUFNSyxNQUFNLENBQUNGLENBQUMsQ0FBQyxzREFBRCxDQUFGLENBQU4sQ0FBa0VHLE9BQWxFLEVBQU47RUFDRCxDQUhDLENBQUY7RUFLQU4sRUFBRSxDQUFDLDJCQUFELEVBQThCLFlBQVk7SUFDMUM7SUFDQSxNQUFNRyxDQUFDLENBQUMsc0RBQUQsQ0FBRCxDQUEwREMsS0FBMUQsRUFBTixDQUYwQyxDQUkxQzs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyx3REFBRCxDQUFELENBQTRESSxPQUE1RCxDQUFvRSxDQUFwRSxDQUFELENBQVo7RUFDRCxDQU5DLENBQUY7RUFRQVAsRUFBRSxDQUFDLDZCQUFELEVBQWdDLFlBQVk7SUFDNUM7SUFDQSxNQUFNRyxDQUFDLENBQUMsMkRBQUQsQ0FBRCxDQUErREMsS0FBL0QsRUFBTixDQUY0QyxDQUk1Qzs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyx3REFBRCxDQUFELENBQTRESSxPQUE1RCxDQUFvRSxDQUFwRSxDQUFELENBQVo7RUFDRCxDQU5DLENBQUY7RUFRQVAsRUFBRSxDQUFDLG9CQUFELEVBQXVCLFlBQVk7SUFDbkM7SUFDQSxNQUFNRyxDQUFDLENBQUMsNENBQUQsQ0FBRCxDQUFnREMsS0FBaEQsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQyw0Q0FBRCxDQUFELENBQWdESyxRQUFoRCxDQUF5RCxVQUF6RCxDQUFOLENBSG1DLENBS25DOztJQUNBLE1BQU1DLE1BQU0sQ0FBQ0MsSUFBUCxFQUFOLENBTm1DLENBUW5DO0lBQ0E7RUFDRCxDQVZDLENBQUY7QUFXRCxDQS9DTyxDQUFSIn0=","map":{"version":3,"names":["describe","it","customCommands","userLogin","$","click","expect","toExist","toEqual","addValue","driver","back"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\test\\specs\\android\\","sources":["view-company-mood.spec.js"],"sourcesContent":["//const customCommands = require(\"../../screenobject/android/commands\");\r\nimport customCommands from '../../screenobject/android/commands';\r\n\r\ndescribe('View Company Mood Feature', () => {\r\n  it('User clicks “+” icon in mood tracker feed', async () => {\r\n    // Given user is on mood tracker feed\r\n    await customCommands.userLogin();\r\n\r\n    // click login\r\n    await $('~View company mood').click();\r\n\r\n    // When user clicks \"follow\" icon\r\n    await $('//android.view.View[@index=\"5\"]').click();\r\n\r\n    //  Then \"Follow People\" screen should appear\r\n    await expect($('~Follow People')).toExist();\r\n  });\r\n\r\n  it('User views followed member first in the list', async () => {\r\n    //  Then followed member should be first in the list to show\r\n    await expect($('//android.widget.Button[@content-desc=\"￼ Following\"]')).toExist();\r\n  });\r\n\r\n  it('User follows other member', async () => {\r\n    //  When user clicks “Follow” button in members name\r\n    await $('(//android.widget.Button[@content-desc=\"Follow\"])[1]').click();\r\n\r\n    // Then Following should be displayed\r\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(2));\r\n  });\r\n\r\n  it('User unfollows other member', async () => {\r\n    //  user clicked following\r\n    await $('(//android.widget.Button[@content-desc=\"￼ Following\"])[1]').click();\r\n\r\n    // Then user should be able to unfollow people.\r\n    await expect($('(//android.widget.Button[@content-desc=\"￼ Following\"])').toEqual(4));\r\n  });\r\n\r\n  it('User search people', async () => {\r\n    //  When user enters the name he/she wants to follow in \"search\" bar\r\n    await $('//android.widget.ImageView[@text=\"Search\"]').click();\r\n    await $('//android.widget.ImageView[@text=\"Search\"]').addValue(\"Angelica\");\r\n\r\n    //\r\n    await driver.back();\r\n\r\n    // Then the person should appear appear below\r\n    //await expect($('//android.view.View[@content-desc=\"A Abraham LINKcon HR\"]')).toHaveTextContaining(\"Abraham LINKcon\");\r\n  });\r\n})"],"mappings":";;AACA;;;;AADA;AAGAA,QAAQ,CAAC,2BAAD,EAA8B,MAAM;EAC1CC,EAAE,CAAC,2CAAD,EAA8C,YAAY;IAC1D;IACA,MAAMC,iBAAA,CAAeC,SAAf,EAAN,CAF0D,CAI1D;;IACA,MAAMC,CAAC,CAAC,oBAAD,CAAD,CAAwBC,KAAxB,EAAN,CAL0D,CAO1D;;IACA,MAAMD,CAAC,CAAC,iCAAD,CAAD,CAAqCC,KAArC,EAAN,CAR0D,CAU1D;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,gBAAD,CAAF,CAAN,CAA4BG,OAA5B,EAAN;EACD,CAZC,CAAF;EAcAN,EAAE,CAAC,8CAAD,EAAiD,YAAY;IAC7D;IACA,MAAMK,MAAM,CAACF,CAAC,CAAC,sDAAD,CAAF,CAAN,CAAkEG,OAAlE,EAAN;EACD,CAHC,CAAF;EAKAN,EAAE,CAAC,2BAAD,EAA8B,YAAY;IAC1C;IACA,MAAMG,CAAC,CAAC,sDAAD,CAAD,CAA0DC,KAA1D,EAAN,CAF0C,CAI1C;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,wDAAD,CAAD,CAA4DI,OAA5D,CAAoE,CAApE,CAAD,CAAZ;EACD,CANC,CAAF;EAQAP,EAAE,CAAC,6BAAD,EAAgC,YAAY;IAC5C;IACA,MAAMG,CAAC,CAAC,2DAAD,CAAD,CAA+DC,KAA/D,EAAN,CAF4C,CAI5C;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,wDAAD,CAAD,CAA4DI,OAA5D,CAAoE,CAApE,CAAD,CAAZ;EACD,CANC,CAAF;EAQAP,EAAE,CAAC,oBAAD,EAAuB,YAAY;IACnC;IACA,MAAMG,CAAC,CAAC,4CAAD,CAAD,CAAgDC,KAAhD,EAAN;IACA,MAAMD,CAAC,CAAC,4CAAD,CAAD,CAAgDK,QAAhD,CAAyD,UAAzD,CAAN,CAHmC,CAKnC;;IACA,MAAMC,MAAM,CAACC,IAAP,EAAN,CANmC,CAQnC;IACA;EACD,CAVC,CAAF;AAWD,CA/CO,CAAR"}},"mtime":1654579834754},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\config\\\\wdio.android.bs.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\nrequire('dotenv').config();\n\nconst {\n  config\n} = require('./wdio.shared.conf'); //\n// ============\n// Browserstack\n// ============\n\n\nconfig.user = process.env.BROWSERSTACK_USER;\nconfig.key = process.env.BROWSERSTACK_KEY; //\n// ============\n// Specs\n// ============\n\nconfig.specs = [//'./test/specs/**/android-native*.js'\n'./test/specs/android/*.js']; //\n// ============\n// Capabilities\n// ============\n\nconfig.capabilities = [{\n  platformName: 'Android',\n  'appium:platformVersion': \"10.0\",\n  'appium:deviceName': 'Google Pixel 3',\n  'appium:automationName': 'UIAutomator2',\n  'appium:app': \"bs://9966fbcd19371acc9e5028b9a431d7aeefb0674d\",\n  'appium:autoGrantPermissions': true\n}]; //\n// Test runner services\n// Services take over a specific job you don't want to take care of. They enhance\n// your test setup with almost no effort. Unlike plugins, they don't add new\n// commands. Instead, they hook themselves up into the test process.\n\nconfig.services = ['browserstack'], exports.config = config;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJCUk9XU0VSU1RBQ0tfVVNFUiIsImtleSIsIkJST1dTRVJTVEFDS19LRVkiLCJzcGVjcyIsImNhcGFiaWxpdGllcyIsInBsYXRmb3JtTmFtZSIsInNlcnZpY2VzIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxZQU5BUENcXERlc2t0b3BcXGlkZW50aWZpLW1vYmlsZVxcY29uZmlnXFwiLCJzb3VyY2VzIjpbIndkaW8uYW5kcm9pZC5icy5jb25mLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuY29uc3Qge2NvbmZpZ30gPSByZXF1aXJlKCcuL3dkaW8uc2hhcmVkLmNvbmYnKTtcblxuLy9cbi8vID09PT09PT09PT09PVxuLy8gQnJvd3NlcnN0YWNrXG4vLyA9PT09PT09PT09PT1cbmNvbmZpZy51c2VyID0gcHJvY2Vzcy5lbnYuQlJPV1NFUlNUQUNLX1VTRVI7XG5jb25maWcua2V5ID0gcHJvY2Vzcy5lbnYuQlJPV1NFUlNUQUNLX0tFWTtcblxuLy9cbi8vID09PT09PT09PT09PVxuLy8gU3BlY3Ncbi8vID09PT09PT09PT09PVxuY29uZmlnLnNwZWNzID0gW1xuICAvLycuL3Rlc3Qvc3BlY3MvKiovYW5kcm9pZC1uYXRpdmUqLmpzJ1xuICAnLi90ZXN0L3NwZWNzL2FuZHJvaWQvKi5qcydcbl07XG5cbi8vXG4vLyA9PT09PT09PT09PT1cbi8vIENhcGFiaWxpdGllc1xuLy8gPT09PT09PT09PT09XG5jb25maWcuY2FwYWJpbGl0aWVzID0gW1xuICB7XG4gICAgcGxhdGZvcm1OYW1lOiAnQW5kcm9pZCcsXG4gICAgJ2FwcGl1bTpwbGF0Zm9ybVZlcnNpb24nOiBcIjEwLjBcIixcbiAgICAnYXBwaXVtOmRldmljZU5hbWUnOiAnR29vZ2xlIFBpeGVsIDMnLFxuICAgICdhcHBpdW06YXV0b21hdGlvbk5hbWUnOiAnVUlBdXRvbWF0b3IyJyxcbiAgICAnYXBwaXVtOmFwcCc6IFwiYnM6Ly85OTY2ZmJjZDE5MzcxYWNjOWU1MDI4YjlhNDMxZDdhZWVmYjA2NzRkXCIsXG4gICAgJ2FwcGl1bTphdXRvR3JhbnRQZXJtaXNzaW9ucyc6IHRydWVcbiAgfVxuXVxuXG4vL1xuLy8gVGVzdCBydW5uZXIgc2VydmljZXNcbi8vIFNlcnZpY2VzIHRha2Ugb3ZlciBhIHNwZWNpZmljIGpvYiB5b3UgZG9uJ3Qgd2FudCB0byB0YWtlIGNhcmUgb2YuIFRoZXkgZW5oYW5jZVxuLy8geW91ciB0ZXN0IHNldHVwIHdpdGggYWxtb3N0IG5vIGVmZm9ydC4gVW5saWtlIHBsdWdpbnMsIHRoZXkgZG9uJ3QgYWRkIG5ld1xuLy8gY29tbWFuZHMuIEluc3RlYWQsIHRoZXkgaG9vayB0aGVtc2VsdmVzIHVwIGludG8gdGhlIHRlc3QgcHJvY2Vzcy5cbmNvbmZpZy5zZXJ2aWNlcyA9IFsnYnJvd3NlcnN0YWNrJ10sXG5cbmV4cG9ydHMuY29uZmlnID0gY29uZmlnOyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBQ0EsTUFBTTtFQUFDQTtBQUFELElBQVdELE9BQU8sQ0FBQyxvQkFBRCxDQUF4QixDLENBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBQyxNQUFNLENBQUNDLElBQVAsR0FBY0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLGlCQUExQjtBQUNBSixNQUFNLENBQUNLLEdBQVAsR0FBYUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLGdCQUF6QixDLENBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FOLE1BQU0sQ0FBQ08sS0FBUCxHQUFlLENBQ2I7QUFDQSwyQkFGYSxDQUFmLEMsQ0FLQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQVAsTUFBTSxDQUFDUSxZQUFQLEdBQXNCLENBQ3BCO0VBQ0VDLFlBQVksRUFBRSxTQURoQjtFQUVFLDBCQUEwQixNQUY1QjtFQUdFLHFCQUFxQixnQkFIdkI7RUFJRSx5QkFBeUIsY0FKM0I7RUFLRSxjQUFjLCtDQUxoQjtFQU1FLCtCQUErQjtBQU5qQyxDQURvQixDQUF0QixDLENBV0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQVQsTUFBTSxDQUFDVSxRQUFQLEdBQWtCLENBQUMsY0FBRCxDQUFsQixFQUVBQyxPQUFPLENBQUNYLE1BQVIsR0FBaUJBLE1BRmpCIn0=","map":{"version":3,"names":["require","config","user","process","env","BROWSERSTACK_USER","key","BROWSERSTACK_KEY","specs","capabilities","platformName","services","exports"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\config\\","sources":["wdio.android.bs.conf.js"],"sourcesContent":["require('dotenv').config();\nconst {config} = require('./wdio.shared.conf');\n\n//\n// ============\n// Browserstack\n// ============\nconfig.user = process.env.BROWSERSTACK_USER;\nconfig.key = process.env.BROWSERSTACK_KEY;\n\n//\n// ============\n// Specs\n// ============\nconfig.specs = [\n  //'./test/specs/**/android-native*.js'\n  './test/specs/android/*.js'\n];\n\n//\n// ============\n// Capabilities\n// ============\nconfig.capabilities = [\n  {\n    platformName: 'Android',\n    'appium:platformVersion': \"10.0\",\n    'appium:deviceName': 'Google Pixel 3',\n    'appium:automationName': 'UIAutomator2',\n    'appium:app': \"bs://9966fbcd19371acc9e5028b9a431d7aeefb0674d\",\n    'appium:autoGrantPermissions': true\n  }\n]\n\n//\n// Test runner services\n// Services take over a specific job you don't want to take care of. They enhance\n// your test setup with almost no effort. Unlike plugins, they don't add new\n// commands. Instead, they hook themselves up into the test process.\nconfig.services = ['browserstack'],\n\nexports.config = config;"],"mappings":";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAM;EAACA;AAAD,IAAWD,OAAO,CAAC,oBAAD,CAAxB,C,CAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,IAAP,GAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B;AACAJ,MAAM,CAACK,GAAP,GAAaH,OAAO,CAACC,GAAR,CAAYG,gBAAzB,C,CAEA;AACA;AACA;AACA;;AACAN,MAAM,CAACO,KAAP,GAAe,CACb;AACA,2BAFa,CAAf,C,CAKA;AACA;AACA;AACA;;AACAP,MAAM,CAACQ,YAAP,GAAsB,CACpB;EACEC,YAAY,EAAE,SADhB;EAEE,0BAA0B,MAF5B;EAGE,qBAAqB,gBAHvB;EAIE,yBAAyB,cAJ3B;EAKE,cAAc,+CALhB;EAME,+BAA+B;AANjC,CADoB,CAAtB,C,CAWA;AACA;AACA;AACA;AACA;;AACAT,MAAM,CAACU,QAAP,GAAkB,CAAC,cAAD,CAAlB,EAEAC,OAAO,CAACX,MAAR,GAAiBA,MAFjB"}},"mtime":1654575997040},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\android\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"filename\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\\\\test\\\\specs\\\\android\\\\login-via-password.spec.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\YANAPC\\\\Desktop\\\\identifi-mobile\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-private-methods\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.18.2:test":{"value":{"code":"\"use strict\";\n\ndescribe('Welcome page', () => {\n  it('User redirect to identifi login page', async () => {\n    // user navigate thru welcome page \n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click(); // click get started\n\n    await $('//*[@content-desc=\"Get Started\"]').click(); // assertion\n\n    await expect($('~Identifi Beta')).toBeDisplayed();\n  });\n  it('User logs in with unregistered email', async () => {\n    // enter unregistered email\n    await $('//*[@text=\"Enter your email\"]').click();\n    await $('//*[@text=\"Enter your email\"]').addValue(\"test22@getnada.com\"); // click login\n\n    await $('~Log in').click(); // assertion\n\n    await expect($('//*[@content-desc=\"Please enter a valid email address\"]')).toBeDisplayed();\n  });\n  it('User logs in with registered email', async () => {\n    // enter registered email\n    await $('//*[contains(@text,\"Enter your email\")]').clearValue();\n    await $('//*[contains(@text,\"Enter your email\")]').click();\n    await $('//*[contains(@text,\"Enter your email\")]').addValue(\"hovsqa@gmail.com\"); // click login\n\n    await $('~Log in').click(); // assertion\n\n    await expect($('//*[@content-desc=\"Password\"]')).toBeDisplayed();\n  });\n  it('User logs in with invalid password', async () => {\n    // input password\n    await $('//*[@password=\"true\"]').click();\n    await $('//*[@password=\"true\"]').addValue(\"invalidpassword\"); // click login\n\n    await $('~Log in').click(); // assertion\n\n    await expect($('//*[@content-desc=\"The email or password you entered is incorrect.\"]')).toBeDisplayed();\n  });\n  it('User logs in with valid password', async () => {\n    // input password\n    await $('//*[@password=\"true\"]').clearValue();\n    await $('//*[@password=\"true\"]').click();\n    await $('//*[@password=\"true\"]').addValue(\"password\"); // click login\n\n    await $('~Log in').click(); // assertion\n\n    await expect($('~View company mood')).toBeDisplayed();\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwiJCIsImNsaWNrIiwiZXhwZWN0IiwidG9CZURpc3BsYXllZCIsImFkZFZhbHVlIiwiY2xlYXJWYWx1ZSJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxZQU5BUENcXERlc2t0b3BcXGlkZW50aWZpLW1vYmlsZVxcdGVzdFxcc3BlY3NcXGFuZHJvaWRcXCIsInNvdXJjZXMiOlsibG9naW4tdmlhLXBhc3N3b3JkLnNwZWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVzY3JpYmUoJ1dlbGNvbWUgcGFnZScsICgpID0+IHtcbiAgaXQoJ1VzZXIgcmVkaXJlY3QgdG8gaWRlbnRpZmkgbG9naW4gcGFnZScsIGFzeW5jICgpID0+IHtcbiAgICAvLyB1c2VyIG5hdmlnYXRlIHRocnUgd2VsY29tZSBwYWdlIFxuICAgIGF3YWl0ICQoJy8vKltAY29udGVudC1kZXNjPVwiTmV4dFwiXScpLmNsaWNrKCk7XG4gICAgYXdhaXQgJCgnLy8qW0Bjb250ZW50LWRlc2M9XCJOZXh0XCJdJykuY2xpY2soKTtcbiAgICBhd2FpdCAkKCcvLypbQGNvbnRlbnQtZGVzYz1cIk5leHRcIl0nKS5jbGljaygpO1xuICAgIGF3YWl0ICQoJy8vKltAY29udGVudC1kZXNjPVwiTmV4dFwiXScpLmNsaWNrKCk7XG4gICAgYXdhaXQgJCgnLy8qW0Bjb250ZW50LWRlc2M9XCJOZXh0XCJdJykuY2xpY2soKTtcbiAgICBhd2FpdCAkKCcvLypbQGNvbnRlbnQtZGVzYz1cIk5leHRcIl0nKS5jbGljaygpO1xuXG4gICAgLy8gY2xpY2sgZ2V0IHN0YXJ0ZWRcbiAgICBhd2FpdCAkKCcvLypbQGNvbnRlbnQtZGVzYz1cIkdldCBTdGFydGVkXCJdJykuY2xpY2soKTtcblxuICAgIC8vIGFzc2VydGlvblxuICAgIGF3YWl0IGV4cGVjdCgkKCd+SWRlbnRpZmkgQmV0YScpKS50b0JlRGlzcGxheWVkKCk7XG4gIH0pO1xuXG4gIGl0KCdVc2VyIGxvZ3MgaW4gd2l0aCB1bnJlZ2lzdGVyZWQgZW1haWwnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gZW50ZXIgdW5yZWdpc3RlcmVkIGVtYWlsXG4gICAgYXdhaXQgJCgnLy8qW0B0ZXh0PVwiRW50ZXIgeW91ciBlbWFpbFwiXScpLmNsaWNrKCk7XG4gICAgYXdhaXQgJCgnLy8qW0B0ZXh0PVwiRW50ZXIgeW91ciBlbWFpbFwiXScpLmFkZFZhbHVlKFwidGVzdDIyQGdldG5hZGEuY29tXCIpO1xuXG4gICAgLy8gY2xpY2sgbG9naW5cbiAgICBhd2FpdCAkKCd+TG9nIGluJykuY2xpY2soKTtcblxuICAgIC8vIGFzc2VydGlvblxuICAgIGF3YWl0IGV4cGVjdCgkKCcvLypbQGNvbnRlbnQtZGVzYz1cIlBsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3NcIl0nKSkudG9CZURpc3BsYXllZCgpO1xuICB9KTtcblxuICBpdCgnVXNlciBsb2dzIGluIHdpdGggcmVnaXN0ZXJlZCBlbWFpbCcsIGFzeW5jICgpID0+IHtcbiAgICAvLyBlbnRlciByZWdpc3RlcmVkIGVtYWlsXG4gICAgYXdhaXQgJCgnLy8qW2NvbnRhaW5zKEB0ZXh0LFwiRW50ZXIgeW91ciBlbWFpbFwiKV0nKS5jbGVhclZhbHVlKCk7XG4gICAgYXdhaXQgJCgnLy8qW2NvbnRhaW5zKEB0ZXh0LFwiRW50ZXIgeW91ciBlbWFpbFwiKV0nKS5jbGljaygpO1xuICAgIGF3YWl0ICQoJy8vKltjb250YWlucyhAdGV4dCxcIkVudGVyIHlvdXIgZW1haWxcIildJykuYWRkVmFsdWUoXCJob3ZzcWFAZ21haWwuY29tXCIpO1xuXG4gICAgLy8gY2xpY2sgbG9naW5cbiAgICBhd2FpdCAkKCd+TG9nIGluJykuY2xpY2soKTtcblxuICAgIC8vIGFzc2VydGlvblxuICAgIGF3YWl0IGV4cGVjdCgkKCcvLypbQGNvbnRlbnQtZGVzYz1cIlBhc3N3b3JkXCJdJykpLnRvQmVEaXNwbGF5ZWQoKTtcbiAgfSk7XG5cbiAgaXQoJ1VzZXIgbG9ncyBpbiB3aXRoIGludmFsaWQgcGFzc3dvcmQnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gaW5wdXQgcGFzc3dvcmRcbiAgICBhd2FpdCAkKCcvLypbQHBhc3N3b3JkPVwidHJ1ZVwiXScpLmNsaWNrKCk7XG4gICAgYXdhaXQgJCgnLy8qW0BwYXNzd29yZD1cInRydWVcIl0nKS5hZGRWYWx1ZShcImludmFsaWRwYXNzd29yZFwiKTtcblxuICAgIC8vIGNsaWNrIGxvZ2luXG4gICAgYXdhaXQgJCgnfkxvZyBpbicpLmNsaWNrKCk7XG5cbiAgICAvLyBhc3NlcnRpb25cbiAgICBhd2FpdCBleHBlY3QoJCgnLy8qW0Bjb250ZW50LWRlc2M9XCJUaGUgZW1haWwgb3IgcGFzc3dvcmQgeW91IGVudGVyZWQgaXMgaW5jb3JyZWN0LlwiXScpKS50b0JlRGlzcGxheWVkKCk7XG4gIH0pO1xuXG4gIGl0KCdVc2VyIGxvZ3MgaW4gd2l0aCB2YWxpZCBwYXNzd29yZCcsIGFzeW5jICgpID0+IHtcbiAgICAvLyBpbnB1dCBwYXNzd29yZFxuICAgIGF3YWl0ICQoJy8vKltAcGFzc3dvcmQ9XCJ0cnVlXCJdJykuY2xlYXJWYWx1ZSgpO1xuICAgIGF3YWl0ICQoJy8vKltAcGFzc3dvcmQ9XCJ0cnVlXCJdJykuY2xpY2soKTtcbiAgICBhd2FpdCAkKCcvLypbQHBhc3N3b3JkPVwidHJ1ZVwiXScpLmFkZFZhbHVlKFwicGFzc3dvcmRcIik7XG5cbiAgICAvLyBjbGljayBsb2dpblxuICAgIGF3YWl0ICQoJ35Mb2cgaW4nKS5jbGljaygpO1xuXG4gICAgLy8gYXNzZXJ0aW9uXG4gICAgYXdhaXQgZXhwZWN0KCQoJ35WaWV3IGNvbXBhbnkgbW9vZCcpKS50b0JlRGlzcGxheWVkKCk7XG4gIH0pO1xufSk7Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxRQUFRLENBQUMsY0FBRCxFQUFpQixNQUFNO0VBQzdCQyxFQUFFLENBQUMsc0NBQUQsRUFBeUMsWUFBWTtJQUNyRDtJQUNBLE1BQU1DLENBQUMsQ0FBQywyQkFBRCxDQUFELENBQStCQyxLQUEvQixFQUFOO0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLDJCQUFELENBQUQsQ0FBK0JDLEtBQS9CLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsMkJBQUQsQ0FBRCxDQUErQkMsS0FBL0IsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQywyQkFBRCxDQUFELENBQStCQyxLQUEvQixFQUFOO0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLDJCQUFELENBQUQsQ0FBK0JDLEtBQS9CLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsMkJBQUQsQ0FBRCxDQUErQkMsS0FBL0IsRUFBTixDQVBxRCxDQVNyRDs7SUFDQSxNQUFNRCxDQUFDLENBQUMsa0NBQUQsQ0FBRCxDQUFzQ0MsS0FBdEMsRUFBTixDQVZxRCxDQVlyRDs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyxnQkFBRCxDQUFGLENBQU4sQ0FBNEJHLGFBQTVCLEVBQU47RUFDRCxDQWRDLENBQUY7RUFnQkFKLEVBQUUsQ0FBQyxzQ0FBRCxFQUF5QyxZQUFZO0lBQ3JEO0lBQ0EsTUFBTUMsQ0FBQyxDQUFDLCtCQUFELENBQUQsQ0FBbUNDLEtBQW5DLEVBQU47SUFDQSxNQUFNRCxDQUFDLENBQUMsK0JBQUQsQ0FBRCxDQUFtQ0ksUUFBbkMsQ0FBNEMsb0JBQTVDLENBQU4sQ0FIcUQsQ0FLckQ7O0lBQ0EsTUFBTUosQ0FBQyxDQUFDLFNBQUQsQ0FBRCxDQUFhQyxLQUFiLEVBQU4sQ0FOcUQsQ0FRckQ7O0lBQ0EsTUFBTUMsTUFBTSxDQUFDRixDQUFDLENBQUMseURBQUQsQ0FBRixDQUFOLENBQXFFRyxhQUFyRSxFQUFOO0VBQ0QsQ0FWQyxDQUFGO0VBWUFKLEVBQUUsQ0FBQyxvQ0FBRCxFQUF1QyxZQUFZO0lBQ25EO0lBQ0EsTUFBTUMsQ0FBQyxDQUFDLHlDQUFELENBQUQsQ0FBNkNLLFVBQTdDLEVBQU47SUFDQSxNQUFNTCxDQUFDLENBQUMseUNBQUQsQ0FBRCxDQUE2Q0MsS0FBN0MsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQyx5Q0FBRCxDQUFELENBQTZDSSxRQUE3QyxDQUFzRCxrQkFBdEQsQ0FBTixDQUptRCxDQU1uRDs7SUFDQSxNQUFNSixDQUFDLENBQUMsU0FBRCxDQUFELENBQWFDLEtBQWIsRUFBTixDQVBtRCxDQVNuRDs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQywrQkFBRCxDQUFGLENBQU4sQ0FBMkNHLGFBQTNDLEVBQU47RUFDRCxDQVhDLENBQUY7RUFhQUosRUFBRSxDQUFDLG9DQUFELEVBQXVDLFlBQVk7SUFDbkQ7SUFDQSxNQUFNQyxDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQkMsS0FBM0IsRUFBTjtJQUNBLE1BQU1ELENBQUMsQ0FBQyx1QkFBRCxDQUFELENBQTJCSSxRQUEzQixDQUFvQyxpQkFBcEMsQ0FBTixDQUhtRCxDQUtuRDs7SUFDQSxNQUFNSixDQUFDLENBQUMsU0FBRCxDQUFELENBQWFDLEtBQWIsRUFBTixDQU5tRCxDQVFuRDs7SUFDQSxNQUFNQyxNQUFNLENBQUNGLENBQUMsQ0FBQyxzRUFBRCxDQUFGLENBQU4sQ0FBa0ZHLGFBQWxGLEVBQU47RUFDRCxDQVZDLENBQUY7RUFZQUosRUFBRSxDQUFDLGtDQUFELEVBQXFDLFlBQVk7SUFDakQ7SUFDQSxNQUFNQyxDQUFDLENBQUMsdUJBQUQsQ0FBRCxDQUEyQkssVUFBM0IsRUFBTjtJQUNBLE1BQU1MLENBQUMsQ0FBQyx1QkFBRCxDQUFELENBQTJCQyxLQUEzQixFQUFOO0lBQ0EsTUFBTUQsQ0FBQyxDQUFDLHVCQUFELENBQUQsQ0FBMkJJLFFBQTNCLENBQW9DLFVBQXBDLENBQU4sQ0FKaUQsQ0FNakQ7O0lBQ0EsTUFBTUosQ0FBQyxDQUFDLFNBQUQsQ0FBRCxDQUFhQyxLQUFiLEVBQU4sQ0FQaUQsQ0FTakQ7O0lBQ0EsTUFBTUMsTUFBTSxDQUFDRixDQUFDLENBQUMsb0JBQUQsQ0FBRixDQUFOLENBQWdDRyxhQUFoQyxFQUFOO0VBQ0QsQ0FYQyxDQUFGO0FBWUQsQ0FsRU8sQ0FBUiJ9","map":{"version":3,"names":["describe","it","$","click","expect","toBeDisplayed","addValue","clearValue"],"sourceRoot":"C:\\Users\\YANAPC\\Desktop\\identifi-mobile\\test\\specs\\android\\","sources":["login-via-password.spec.js"],"sourcesContent":["describe('Welcome page', () => {\n  it('User redirect to identifi login page', async () => {\n    // user navigate thru welcome page \n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n    await $('//*[@content-desc=\"Next\"]').click();\n\n    // click get started\n    await $('//*[@content-desc=\"Get Started\"]').click();\n\n    // assertion\n    await expect($('~Identifi Beta')).toBeDisplayed();\n  });\n\n  it('User logs in with unregistered email', async () => {\n    // enter unregistered email\n    await $('//*[@text=\"Enter your email\"]').click();\n    await $('//*[@text=\"Enter your email\"]').addValue(\"test22@getnada.com\");\n\n    // click login\n    await $('~Log in').click();\n\n    // assertion\n    await expect($('//*[@content-desc=\"Please enter a valid email address\"]')).toBeDisplayed();\n  });\n\n  it('User logs in with registered email', async () => {\n    // enter registered email\n    await $('//*[contains(@text,\"Enter your email\")]').clearValue();\n    await $('//*[contains(@text,\"Enter your email\")]').click();\n    await $('//*[contains(@text,\"Enter your email\")]').addValue(\"hovsqa@gmail.com\");\n\n    // click login\n    await $('~Log in').click();\n\n    // assertion\n    await expect($('//*[@content-desc=\"Password\"]')).toBeDisplayed();\n  });\n\n  it('User logs in with invalid password', async () => {\n    // input password\n    await $('//*[@password=\"true\"]').click();\n    await $('//*[@password=\"true\"]').addValue(\"invalidpassword\");\n\n    // click login\n    await $('~Log in').click();\n\n    // assertion\n    await expect($('//*[@content-desc=\"The email or password you entered is incorrect.\"]')).toBeDisplayed();\n  });\n\n  it('User logs in with valid password', async () => {\n    // input password\n    await $('//*[@password=\"true\"]').clearValue();\n    await $('//*[@password=\"true\"]').click();\n    await $('//*[@password=\"true\"]').addValue(\"password\");\n\n    // click login\n    await $('~Log in').click();\n\n    // assertion\n    await expect($('~View company mood')).toBeDisplayed();\n  });\n});"],"mappings":";;AAAAA,QAAQ,CAAC,cAAD,EAAiB,MAAM;EAC7BC,EAAE,CAAC,sCAAD,EAAyC,YAAY;IACrD;IACA,MAAMC,CAAC,CAAC,2BAAD,CAAD,CAA+BC,KAA/B,EAAN;IACA,MAAMD,CAAC,CAAC,2BAAD,CAAD,CAA+BC,KAA/B,EAAN;IACA,MAAMD,CAAC,CAAC,2BAAD,CAAD,CAA+BC,KAA/B,EAAN;IACA,MAAMD,CAAC,CAAC,2BAAD,CAAD,CAA+BC,KAA/B,EAAN;IACA,MAAMD,CAAC,CAAC,2BAAD,CAAD,CAA+BC,KAA/B,EAAN;IACA,MAAMD,CAAC,CAAC,2BAAD,CAAD,CAA+BC,KAA/B,EAAN,CAPqD,CASrD;;IACA,MAAMD,CAAC,CAAC,kCAAD,CAAD,CAAsCC,KAAtC,EAAN,CAVqD,CAYrD;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,gBAAD,CAAF,CAAN,CAA4BG,aAA5B,EAAN;EACD,CAdC,CAAF;EAgBAJ,EAAE,CAAC,sCAAD,EAAyC,YAAY;IACrD;IACA,MAAMC,CAAC,CAAC,+BAAD,CAAD,CAAmCC,KAAnC,EAAN;IACA,MAAMD,CAAC,CAAC,+BAAD,CAAD,CAAmCI,QAAnC,CAA4C,oBAA5C,CAAN,CAHqD,CAKrD;;IACA,MAAMJ,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN,CANqD,CAQrD;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,yDAAD,CAAF,CAAN,CAAqEG,aAArE,EAAN;EACD,CAVC,CAAF;EAYAJ,EAAE,CAAC,oCAAD,EAAuC,YAAY;IACnD;IACA,MAAMC,CAAC,CAAC,yCAAD,CAAD,CAA6CK,UAA7C,EAAN;IACA,MAAML,CAAC,CAAC,yCAAD,CAAD,CAA6CC,KAA7C,EAAN;IACA,MAAMD,CAAC,CAAC,yCAAD,CAAD,CAA6CI,QAA7C,CAAsD,kBAAtD,CAAN,CAJmD,CAMnD;;IACA,MAAMJ,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN,CAPmD,CASnD;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,+BAAD,CAAF,CAAN,CAA2CG,aAA3C,EAAN;EACD,CAXC,CAAF;EAaAJ,EAAE,CAAC,oCAAD,EAAuC,YAAY;IACnD;IACA,MAAMC,CAAC,CAAC,uBAAD,CAAD,CAA2BC,KAA3B,EAAN;IACA,MAAMD,CAAC,CAAC,uBAAD,CAAD,CAA2BI,QAA3B,CAAoC,iBAApC,CAAN,CAHmD,CAKnD;;IACA,MAAMJ,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN,CANmD,CAQnD;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,sEAAD,CAAF,CAAN,CAAkFG,aAAlF,EAAN;EACD,CAVC,CAAF;EAYAJ,EAAE,CAAC,kCAAD,EAAqC,YAAY;IACjD;IACA,MAAMC,CAAC,CAAC,uBAAD,CAAD,CAA2BK,UAA3B,EAAN;IACA,MAAML,CAAC,CAAC,uBAAD,CAAD,CAA2BC,KAA3B,EAAN;IACA,MAAMD,CAAC,CAAC,uBAAD,CAAD,CAA2BI,QAA3B,CAAoC,UAApC,CAAN,CAJiD,CAMjD;;IACA,MAAMJ,CAAC,CAAC,SAAD,CAAD,CAAaC,KAAb,EAAN,CAPiD,CASjD;;IACA,MAAMC,MAAM,CAACF,CAAC,CAAC,oBAAD,CAAF,CAAN,CAAgCG,aAAhC,EAAN;EACD,CAXC,CAAF;AAYD,CAlEO,CAAR"}},"mtime":1654237808391}}