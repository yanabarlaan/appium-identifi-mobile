#!/usr/bin/env node
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.webviewHelpers = exports.startServer = exports.default = exports.commonCapConstraints = exports.androidHelpers = exports.androidCommands = exports.WEBVIEW_WIN = exports.WEBVIEW_BASE = exports.SETTINGS_HELPER_PKG_ID = exports.NATIVE_WIN = exports.CHROMIUM_WIN = exports.AndroidDriver = void 0;

require("source-map-support/register");

var _asyncbox = require("asyncbox");

var server = _interopRequireWildcard(require("./lib/server"));

var driver = _interopRequireWildcard(require("./lib/driver"));

var androidHelperIndex = _interopRequireWildcard(require("./lib/android-helpers"));

var commandIndex = _interopRequireWildcard(require("./lib/commands/index"));

var webview = _interopRequireWildcard(require("./lib/webview-helpers"));

var caps = _interopRequireWildcard(require("./lib/desired-caps"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const {
  startServer
} = server;
exports.startServer = startServer;
const DEFAULT_HOST = 'localhost';
const DEFAULT_PORT = 4723;

async function main() {
  const getArgValue = argName => {
    const argIndex = process.argv.indexOf(argName);
    return argIndex > 0 ? process.argv[argIndex + 1] : null;
  };

  const port = parseInt(getArgValue('--port'), 10) || DEFAULT_PORT;
  const host = getArgValue('--host') || DEFAULT_HOST;
  return await startServer(port, host);
}

if (require.main === module) {
  (0, _asyncbox.asyncify)(main);
}

const {
  AndroidDriver
} = driver;
exports.AndroidDriver = AndroidDriver;
const {
  helpers: webviewHelpers,
  NATIVE_WIN,
  WEBVIEW_WIN,
  WEBVIEW_BASE,
  CHROMIUM_WIN
} = webview;
exports.CHROMIUM_WIN = CHROMIUM_WIN;
exports.WEBVIEW_BASE = WEBVIEW_BASE;
exports.WEBVIEW_WIN = WEBVIEW_WIN;
exports.NATIVE_WIN = NATIVE_WIN;
exports.webviewHelpers = webviewHelpers;
const {
  commonCapConstraints
} = caps;
exports.commonCapConstraints = commonCapConstraints;
const {
  commands: androidCommands
} = commandIndex;
exports.androidCommands = androidCommands;
const {
  helpers: androidHelpers,
  SETTINGS_HELPER_PKG_ID
} = androidHelperIndex;
exports.SETTINGS_HELPER_PKG_ID = SETTINGS_HELPER_PKG_ID;
exports.androidHelpers = androidHelpers;
var _default = AndroidDriver;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJuYW1lcyI6WyJzdGFydFNlcnZlciIsInNlcnZlciIsIkRFRkFVTFRfSE9TVCIsIkRFRkFVTFRfUE9SVCIsIm1haW4iLCJnZXRBcmdWYWx1ZSIsImFyZ05hbWUiLCJhcmdJbmRleCIsInByb2Nlc3MiLCJhcmd2IiwiaW5kZXhPZiIsInBvcnQiLCJwYXJzZUludCIsImhvc3QiLCJyZXF1aXJlIiwibW9kdWxlIiwiYXN5bmNpZnkiLCJBbmRyb2lkRHJpdmVyIiwiZHJpdmVyIiwiaGVscGVycyIsIndlYnZpZXdIZWxwZXJzIiwiTkFUSVZFX1dJTiIsIldFQlZJRVdfV0lOIiwiV0VCVklFV19CQVNFIiwiQ0hST01JVU1fV0lOIiwid2VidmlldyIsImNvbW1vbkNhcENvbnN0cmFpbnRzIiwiY2FwcyIsImNvbW1hbmRzIiwiYW5kcm9pZENvbW1hbmRzIiwiY29tbWFuZEluZGV4IiwiYW5kcm9pZEhlbHBlcnMiLCJTRVRUSU5HU19IRUxQRVJfUEtHX0lEIiwiYW5kcm9pZEhlbHBlckluZGV4Il0sInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuLy8gdHJhbnNwaWxlOm1haW5cblxuaW1wb3J0IHsgYXN5bmNpZnkgfSBmcm9tICdhc3luY2JveCc7XG5pbXBvcnQgKiBhcyBzZXJ2ZXIgZnJvbSAnLi9saWIvc2VydmVyJztcblxuXG5jb25zdCB7IHN0YXJ0U2VydmVyIH0gPSBzZXJ2ZXI7XG5cbmNvbnN0IERFRkFVTFRfSE9TVCA9ICdsb2NhbGhvc3QnO1xuY29uc3QgREVGQVVMVF9QT1JUID0gNDcyMztcblxuYXN5bmMgZnVuY3Rpb24gbWFpbiAoKSB7XG4gIGNvbnN0IGdldEFyZ1ZhbHVlID0gKGFyZ05hbWUpID0+IHtcbiAgICBjb25zdCBhcmdJbmRleCA9IHByb2Nlc3MuYXJndi5pbmRleE9mKGFyZ05hbWUpO1xuICAgIHJldHVybiBhcmdJbmRleCA+IDAgPyBwcm9jZXNzLmFyZ3ZbYXJnSW5kZXggKyAxXSA6IG51bGw7XG4gIH07XG4gIGNvbnN0IHBvcnQgPSBwYXJzZUludChnZXRBcmdWYWx1ZSgnLS1wb3J0JyksIDEwKSB8fCBERUZBVUxUX1BPUlQ7XG4gIGNvbnN0IGhvc3QgPSBnZXRBcmdWYWx1ZSgnLS1ob3N0JykgfHwgREVGQVVMVF9IT1NUO1xuICByZXR1cm4gYXdhaXQgc3RhcnRTZXJ2ZXIocG9ydCwgaG9zdCk7XG59XG5cbmlmIChyZXF1aXJlLm1haW4gPT09IG1vZHVsZSkge1xuICBhc3luY2lmeShtYWluKTtcbn1cblxuXG5pbXBvcnQgKiBhcyBkcml2ZXIgZnJvbSAnLi9saWIvZHJpdmVyJztcbmltcG9ydCAqIGFzIGFuZHJvaWRIZWxwZXJJbmRleCBmcm9tICcuL2xpYi9hbmRyb2lkLWhlbHBlcnMnO1xuaW1wb3J0ICogYXMgY29tbWFuZEluZGV4IGZyb20gJy4vbGliL2NvbW1hbmRzL2luZGV4JztcbmltcG9ydCAqIGFzIHdlYnZpZXcgZnJvbSAnLi9saWIvd2Vidmlldy1oZWxwZXJzJztcbmltcG9ydCAqIGFzIGNhcHMgZnJvbSAnLi9saWIvZGVzaXJlZC1jYXBzJztcblxuXG5jb25zdCB7IEFuZHJvaWREcml2ZXIgfSA9IGRyaXZlcjtcbmNvbnN0IHsgaGVscGVyczogd2Vidmlld0hlbHBlcnMsIE5BVElWRV9XSU4sIFdFQlZJRVdfV0lOLCBXRUJWSUVXX0JBU0UsXG4gICAgICAgIENIUk9NSVVNX1dJTiB9ID0gd2VidmlldztcbmNvbnN0IHsgY29tbW9uQ2FwQ29uc3RyYWludHMgfSA9IGNhcHM7XG5jb25zdCB7IGNvbW1hbmRzOiBhbmRyb2lkQ29tbWFuZHMgfSA9IGNvbW1hbmRJbmRleDtcbmNvbnN0IHsgaGVscGVyczogYW5kcm9pZEhlbHBlcnMsIFNFVFRJTkdTX0hFTFBFUl9QS0dfSUQgfSA9IGFuZHJvaWRIZWxwZXJJbmRleDtcblxuXG5leHBvcnQgZGVmYXVsdCBBbmRyb2lkRHJpdmVyO1xuZXhwb3J0IHtcbiAgYW5kcm9pZEhlbHBlcnMsIGFuZHJvaWRDb21tYW5kcywgQW5kcm9pZERyaXZlciwgc3RhcnRTZXJ2ZXIsXG4gIGNvbW1vbkNhcENvbnN0cmFpbnRzLCB3ZWJ2aWV3SGVscGVycywgTkFUSVZFX1dJTiwgV0VCVklFV19XSU4sXG4gIFdFQlZJRVdfQkFTRSwgQ0hST01JVU1fV0lOLCBTRVRUSU5HU19IRUxQRVJfUEtHX0lELFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFHQTs7QUFDQTs7QUF1QkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQXhCQSxNQUFNO0VBQUVBO0FBQUYsSUFBa0JDLE1BQXhCOztBQUVBLE1BQU1DLFlBQVksR0FBRyxXQUFyQjtBQUNBLE1BQU1DLFlBQVksR0FBRyxJQUFyQjs7QUFFQSxlQUFlQyxJQUFmLEdBQXVCO0VBQ3JCLE1BQU1DLFdBQVcsR0FBSUMsT0FBRCxJQUFhO0lBQy9CLE1BQU1DLFFBQVEsR0FBR0MsT0FBTyxDQUFDQyxJQUFSLENBQWFDLE9BQWIsQ0FBcUJKLE9BQXJCLENBQWpCO0lBQ0EsT0FBT0MsUUFBUSxHQUFHLENBQVgsR0FBZUMsT0FBTyxDQUFDQyxJQUFSLENBQWFGLFFBQVEsR0FBRyxDQUF4QixDQUFmLEdBQTRDLElBQW5EO0VBQ0QsQ0FIRDs7RUFJQSxNQUFNSSxJQUFJLEdBQUdDLFFBQVEsQ0FBQ1AsV0FBVyxDQUFDLFFBQUQsQ0FBWixFQUF3QixFQUF4QixDQUFSLElBQXVDRixZQUFwRDtFQUNBLE1BQU1VLElBQUksR0FBR1IsV0FBVyxDQUFDLFFBQUQsQ0FBWCxJQUF5QkgsWUFBdEM7RUFDQSxPQUFPLE1BQU1GLFdBQVcsQ0FBQ1csSUFBRCxFQUFPRSxJQUFQLENBQXhCO0FBQ0Q7O0FBRUQsSUFBSUMsT0FBTyxDQUFDVixJQUFSLEtBQWlCVyxNQUFyQixFQUE2QjtFQUMzQixJQUFBQyxrQkFBQSxFQUFTWixJQUFUO0FBQ0Q7O0FBVUQsTUFBTTtFQUFFYTtBQUFGLElBQW9CQyxNQUExQjs7QUFDQSxNQUFNO0VBQUVDLE9BQU8sRUFBRUMsY0FBWDtFQUEyQkMsVUFBM0I7RUFBdUNDLFdBQXZDO0VBQW9EQyxZQUFwRDtFQUNFQztBQURGLElBQ21CQyxPQUR6Qjs7Ozs7O0FBRUEsTUFBTTtFQUFFQztBQUFGLElBQTJCQyxJQUFqQzs7QUFDQSxNQUFNO0VBQUVDLFFBQVEsRUFBRUM7QUFBWixJQUFnQ0MsWUFBdEM7O0FBQ0EsTUFBTTtFQUFFWCxPQUFPLEVBQUVZLGNBQVg7RUFBMkJDO0FBQTNCLElBQXNEQyxrQkFBNUQ7OztlQUdlaEIsYSJ9
