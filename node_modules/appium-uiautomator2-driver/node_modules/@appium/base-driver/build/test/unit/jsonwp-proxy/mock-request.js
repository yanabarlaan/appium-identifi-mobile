"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

function resFixture(url, method) {
  if (/\/status$/.test(url)) {
    return [200, {
      status: 0,
      value: {
        foo: 'bar'
      }
    }];
  }

  if (/\/element\/bad\/text$/.test(url)) {
    return [500, {
      status: 11,
      value: {
        message: 'Invisible element'
      }
    }];
  }

  if (/\/element\/200\/text$/.test(url)) {
    return [200, {
      status: 11,
      value: {
        message: 'Invisible element'
      }
    }];
  }

  if (/\/element\/200\/value$/.test(url)) {
    return [200, {
      status: 0,
      sessionId: 'innersessionid',
      value: 'foobar'
    }];
  }

  if (/\/session$/.test(url) && method === 'POST') {
    return [200, {
      status: 0,
      sessionId: '123',
      value: {
        browserName: 'boo'
      }
    }];
  }

  if (/\/nochrome$/.test(url)) {
    return [100, {
      status: 0,
      value: {
        message: 'chrome not reachable'
      }
    }];
  }

  throw new Error("Can't handle url " + url);
}

async function request(opts) {
  const {
    url,
    method,
    json
  } = opts;

  if (/badurl$/.test(url)) {
    throw new Error('noworky');
  }

  const [status, data] = resFixture(url, method, json);
  return {
    status,
    headers: {
      'content-type': 'application/json; charset=utf-8'
    },
    data
  };
}

var _default = request;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXNGaXh0dXJlIiwidXJsIiwibWV0aG9kIiwidGVzdCIsInN0YXR1cyIsInZhbHVlIiwiZm9vIiwibWVzc2FnZSIsInNlc3Npb25JZCIsImJyb3dzZXJOYW1lIiwiRXJyb3IiLCJyZXF1ZXN0Iiwib3B0cyIsImpzb24iLCJkYXRhIiwiaGVhZGVycyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Rlc3QvdW5pdC9qc29ud3AtcHJveHkvbW9jay1yZXF1ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlc0ZpeHR1cmUgKHVybCwgbWV0aG9kKSB7XG4gIGlmICgvXFwvc3RhdHVzJC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHZhbHVlOiB7Zm9vOiAnYmFyJ319XTtcbiAgfVxuICBpZiAoL1xcL2VsZW1lbnRcXC9iYWRcXC90ZXh0JC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFs1MDAsIHtzdGF0dXM6IDExLCB2YWx1ZToge21lc3NhZ2U6ICdJbnZpc2libGUgZWxlbWVudCd9fV07XG4gIH1cbiAgaWYgKC9cXC9lbGVtZW50XFwvMjAwXFwvdGV4dCQvLnRlc3QodXJsKSkge1xuICAgIHJldHVybiBbMjAwLCB7c3RhdHVzOiAxMSwgdmFsdWU6IHttZXNzYWdlOiAnSW52aXNpYmxlIGVsZW1lbnQnfX1dO1xuICB9XG4gIGlmICgvXFwvZWxlbWVudFxcLzIwMFxcL3ZhbHVlJC8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHNlc3Npb25JZDogJ2lubmVyc2Vzc2lvbmlkJywgdmFsdWU6ICdmb29iYXInfV07XG4gIH1cbiAgaWYgKC9cXC9zZXNzaW9uJC8udGVzdCh1cmwpICYmIG1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIFsyMDAsIHtzdGF0dXM6IDAsIHNlc3Npb25JZDogJzEyMycsIHZhbHVlOiB7YnJvd3Nlck5hbWU6ICdib28nfX1dO1xuICB9XG4gIGlmICgvXFwvbm9jaHJvbWUkLy50ZXN0KHVybCkpIHtcbiAgICByZXR1cm4gWzEwMCwge3N0YXR1czogMCwgdmFsdWU6IHttZXNzYWdlOiAnY2hyb21lIG5vdCByZWFjaGFibGUnfX1dO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihcIkNhbid0IGhhbmRsZSB1cmwgXCIgKyB1cmwpO1xufVxuXG5hc3luYyBmdW5jdGlvbiByZXF1ZXN0IChvcHRzKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgcmVxdWlyZS1hd2FpdFxuICBjb25zdCB7dXJsLCBtZXRob2QsIGpzb259ID0gb3B0cztcbiAgaWYgKC9iYWR1cmwkLy50ZXN0KHVybCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ25vd29ya3knKTtcbiAgfVxuXG4gIGNvbnN0IFtzdGF0dXMsIGRhdGFdID0gcmVzRml4dHVyZSh1cmwsIG1ldGhvZCwganNvbik7XG4gIHJldHVybiB7XG4gICAgc3RhdHVzLFxuICAgIGhlYWRlcnM6IHsnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnfSxcbiAgICBkYXRhLFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCByZXF1ZXN0O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxTQUFTQSxVQUFULENBQXFCQyxHQUFyQixFQUEwQkMsTUFBMUIsRUFBa0M7RUFDaEMsSUFBSSxZQUFZQyxJQUFaLENBQWlCRixHQUFqQixDQUFKLEVBQTJCO0lBQ3pCLE9BQU8sQ0FBQyxHQUFELEVBQU07TUFBQ0csTUFBTSxFQUFFLENBQVQ7TUFBWUMsS0FBSyxFQUFFO1FBQUNDLEdBQUcsRUFBRTtNQUFOO0lBQW5CLENBQU4sQ0FBUDtFQUNEOztFQUNELElBQUksd0JBQXdCSCxJQUF4QixDQUE2QkYsR0FBN0IsQ0FBSixFQUF1QztJQUNyQyxPQUFPLENBQUMsR0FBRCxFQUFNO01BQUNHLE1BQU0sRUFBRSxFQUFUO01BQWFDLEtBQUssRUFBRTtRQUFDRSxPQUFPLEVBQUU7TUFBVjtJQUFwQixDQUFOLENBQVA7RUFDRDs7RUFDRCxJQUFJLHdCQUF3QkosSUFBeEIsQ0FBNkJGLEdBQTdCLENBQUosRUFBdUM7SUFDckMsT0FBTyxDQUFDLEdBQUQsRUFBTTtNQUFDRyxNQUFNLEVBQUUsRUFBVDtNQUFhQyxLQUFLLEVBQUU7UUFBQ0UsT0FBTyxFQUFFO01BQVY7SUFBcEIsQ0FBTixDQUFQO0VBQ0Q7O0VBQ0QsSUFBSSx5QkFBeUJKLElBQXpCLENBQThCRixHQUE5QixDQUFKLEVBQXdDO0lBQ3RDLE9BQU8sQ0FBQyxHQUFELEVBQU07TUFBQ0csTUFBTSxFQUFFLENBQVQ7TUFBWUksU0FBUyxFQUFFLGdCQUF2QjtNQUF5Q0gsS0FBSyxFQUFFO0lBQWhELENBQU4sQ0FBUDtFQUNEOztFQUNELElBQUksYUFBYUYsSUFBYixDQUFrQkYsR0FBbEIsS0FBMEJDLE1BQU0sS0FBSyxNQUF6QyxFQUFpRDtJQUMvQyxPQUFPLENBQUMsR0FBRCxFQUFNO01BQUNFLE1BQU0sRUFBRSxDQUFUO01BQVlJLFNBQVMsRUFBRSxLQUF2QjtNQUE4QkgsS0FBSyxFQUFFO1FBQUNJLFdBQVcsRUFBRTtNQUFkO0lBQXJDLENBQU4sQ0FBUDtFQUNEOztFQUNELElBQUksY0FBY04sSUFBZCxDQUFtQkYsR0FBbkIsQ0FBSixFQUE2QjtJQUMzQixPQUFPLENBQUMsR0FBRCxFQUFNO01BQUNHLE1BQU0sRUFBRSxDQUFUO01BQVlDLEtBQUssRUFBRTtRQUFDRSxPQUFPLEVBQUU7TUFBVjtJQUFuQixDQUFOLENBQVA7RUFDRDs7RUFDRCxNQUFNLElBQUlHLEtBQUosQ0FBVSxzQkFBc0JULEdBQWhDLENBQU47QUFDRDs7QUFFRCxlQUFlVSxPQUFmLENBQXdCQyxJQUF4QixFQUE4QjtFQUM1QixNQUFNO0lBQUNYLEdBQUQ7SUFBTUMsTUFBTjtJQUFjVztFQUFkLElBQXNCRCxJQUE1Qjs7RUFDQSxJQUFJLFVBQVVULElBQVYsQ0FBZUYsR0FBZixDQUFKLEVBQXlCO0lBQ3ZCLE1BQU0sSUFBSVMsS0FBSixDQUFVLFNBQVYsQ0FBTjtFQUNEOztFQUVELE1BQU0sQ0FBQ04sTUFBRCxFQUFTVSxJQUFULElBQWlCZCxVQUFVLENBQUNDLEdBQUQsRUFBTUMsTUFBTixFQUFjVyxJQUFkLENBQWpDO0VBQ0EsT0FBTztJQUNMVCxNQURLO0lBRUxXLE9BQU8sRUFBRTtNQUFDLGdCQUFnQjtJQUFqQixDQUZKO0lBR0xEO0VBSEssQ0FBUDtBQUtEOztlQUVjSCxPIn0=