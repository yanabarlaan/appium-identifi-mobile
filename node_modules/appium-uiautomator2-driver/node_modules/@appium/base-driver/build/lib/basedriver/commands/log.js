"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogMixin = LogMixin;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

function LogMixin(Base) {
  class LogCommands extends Base {
    constructor(...args) {
      var _this$supportedLogTyp;

      super(...args);
      this.supportedLogTypes = (_this$supportedLogTyp = this.supportedLogTypes) !== null && _this$supportedLogTyp !== void 0 ? _this$supportedLogTyp : {};
    }

    async getLogTypes() {
      this.log.debug('Retrieving supported log types');
      return _lodash.default.keys(this.supportedLogTypes);
    }

    async getLog(logType) {
      this.log.debug(`Retrieving '${logType}' logs`);

      if (!(await this.getLogTypes()).includes(logType)) {
        const logsTypesWithDescriptions = _lodash.default.mapValues(this.supportedLogTypes, 'description');

        throw new Error(`Unsupported log type '${logType}'. ` + `Supported types: ${JSON.stringify(logsTypesWithDescriptions)}`);
      }

      return await this.supportedLogTypes[logType].getter(this);
    }

  }

  return LogCommands;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2dNaXhpbiIsIkJhc2UiLCJMb2dDb21tYW5kcyIsImNvbnN0cnVjdG9yIiwiYXJncyIsInN1cHBvcnRlZExvZ1R5cGVzIiwiZ2V0TG9nVHlwZXMiLCJsb2ciLCJkZWJ1ZyIsIl8iLCJrZXlzIiwiZ2V0TG9nIiwibG9nVHlwZSIsImluY2x1ZGVzIiwibG9nc1R5cGVzV2l0aERlc2NyaXB0aW9ucyIsIm1hcFZhbHVlcyIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImdldHRlciJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9iYXNlZHJpdmVyL2NvbW1hbmRzL2xvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSByZXF1aXJlLWF3YWl0ICovXG4vLyBAdHMtY2hlY2tcblxuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuLyoqXG4gKlxuICogQHBhcmFtIHtGaW5kQmFzZX0gQmFzZVxuICogQHJldHVybnMge0xvZ0Jhc2V9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBMb2dNaXhpbiAoQmFzZSkge1xuICAvKipcbiAgICogQGltcGxlbWVudHMge0lMb2dDb21tYW5kc31cbiAgICovXG4gIGNsYXNzIExvZ0NvbW1hbmRzIGV4dGVuZHMgQmFzZSB7XG5cbiAgICBjb25zdHJ1Y3RvciAoLi4uYXJncykge1xuICAgICAgc3VwZXIoLi4uYXJncyk7XG4gICAgICAvKiogQHR5cGUge1JlY29yZDxzdHJpbmcsIExvZ1R5cGU8RHJpdmVyPj59ICovXG4gICAgICB0aGlzLnN1cHBvcnRlZExvZ1R5cGVzID0gdGhpcy5zdXBwb3J0ZWRMb2dUeXBlcyA/PyB7fTtcbiAgICB9XG5cbiAgICBhc3luYyBnZXRMb2dUeXBlcyAoKSB7XG4gICAgICB0aGlzLmxvZy5kZWJ1ZygnUmV0cmlldmluZyBzdXBwb3J0ZWQgbG9nIHR5cGVzJyk7XG4gICAgICByZXR1cm4gXy5rZXlzKHRoaXMuc3VwcG9ydGVkTG9nVHlwZXMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEB0aGlzIHtEcml2ZXJ9XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxvZ1R5cGVcbiAgICAgKi9cbiAgICBhc3luYyBnZXRMb2cgKGxvZ1R5cGUpIHtcbiAgICAgIHRoaXMubG9nLmRlYnVnKGBSZXRyaWV2aW5nICcke2xvZ1R5cGV9JyBsb2dzYCk7XG5cbiAgICAgIGlmICghKGF3YWl0IHRoaXMuZ2V0TG9nVHlwZXMoKSkuaW5jbHVkZXMobG9nVHlwZSkpIHtcbiAgICAgICAgY29uc3QgbG9nc1R5cGVzV2l0aERlc2NyaXB0aW9ucyA9IF8ubWFwVmFsdWVzKHRoaXMuc3VwcG9ydGVkTG9nVHlwZXMsICdkZXNjcmlwdGlvbicpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFVuc3VwcG9ydGVkIGxvZyB0eXBlICcke2xvZ1R5cGV9Jy4gYCArXG4gICAgICAgICAgICBgU3VwcG9ydGVkIHR5cGVzOiAke0pTT04uc3RyaW5naWZ5KGxvZ3NUeXBlc1dpdGhEZXNjcmlwdGlvbnMpfWAsXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLnN1cHBvcnRlZExvZ1R5cGVzW2xvZ1R5cGVdLmdldHRlcih0aGlzKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIExvZ0NvbW1hbmRzO1xufVxuXG5cbi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnQGFwcGl1bS90eXBlcycpLkxvZ0NvbW1hbmRzfSBJTG9nQ29tbWFuZHNcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5Ecml2ZXJ9IERyaXZlclxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9maW5kJykuRmluZEJhc2V9IEZpbmRCYXNlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuLi9kcml2ZXInKS5CYXNlRHJpdmVyQmFzZTxpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5UaW1lb3V0Q29tbWFuZHMgJiBpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5FdmVudENvbW1hbmRzICYgaW1wb3J0KCdAYXBwaXVtL3R5cGVzJykuRmluZENvbW1hbmRzICYgSUxvZ0NvbW1hbmRzPn0gTG9nQmFzZVxuICovXG5cbi8qKlxuICogQHRlbXBsYXRlIFRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ0BhcHBpdW0vdHlwZXMnKS5Mb2dUeXBlPFQ+fSBMb2dUeXBlXG4gKi9cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFHQTs7QUFPTyxTQUFTQSxRQUFULENBQW1CQyxJQUFuQixFQUF5QjtFQUk5QixNQUFNQyxXQUFOLFNBQTBCRCxJQUExQixDQUErQjtJQUU3QkUsV0FBVyxDQUFFLEdBQUdDLElBQUwsRUFBVztNQUFBOztNQUNwQixNQUFNLEdBQUdBLElBQVQ7TUFFQSxLQUFLQyxpQkFBTCw0QkFBeUIsS0FBS0EsaUJBQTlCLHlFQUFtRCxFQUFuRDtJQUNEOztJQUVnQixNQUFYQyxXQUFXLEdBQUk7TUFDbkIsS0FBS0MsR0FBTCxDQUFTQyxLQUFULENBQWUsZ0NBQWY7TUFDQSxPQUFPQyxnQkFBRUMsSUFBRixDQUFPLEtBQUtMLGlCQUFaLENBQVA7SUFDRDs7SUFNVyxNQUFOTSxNQUFNLENBQUVDLE9BQUYsRUFBVztNQUNyQixLQUFLTCxHQUFMLENBQVNDLEtBQVQsQ0FBZ0IsZUFBY0ksT0FBUSxRQUF0Qzs7TUFFQSxJQUFJLENBQUMsQ0FBQyxNQUFNLEtBQUtOLFdBQUwsRUFBUCxFQUEyQk8sUUFBM0IsQ0FBb0NELE9BQXBDLENBQUwsRUFBbUQ7UUFDakQsTUFBTUUseUJBQXlCLEdBQUdMLGdCQUFFTSxTQUFGLENBQVksS0FBS1YsaUJBQWpCLEVBQW9DLGFBQXBDLENBQWxDOztRQUNBLE1BQU0sSUFBSVcsS0FBSixDQUNILHlCQUF3QkosT0FBUSxLQUFqQyxHQUNHLG9CQUFtQkssSUFBSSxDQUFDQyxTQUFMLENBQWVKLHlCQUFmLENBQTBDLEVBRjVELENBQU47TUFJRDs7TUFFRCxPQUFPLE1BQU0sS0FBS1QsaUJBQUwsQ0FBdUJPLE9BQXZCLEVBQWdDTyxNQUFoQyxDQUF1QyxJQUF2QyxDQUFiO0lBQ0Q7O0VBN0I0Qjs7RUErQi9CLE9BQU9qQixXQUFQO0FBQ0QifQ==