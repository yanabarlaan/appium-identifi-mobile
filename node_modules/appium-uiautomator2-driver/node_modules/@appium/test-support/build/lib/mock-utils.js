"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verifyMocks = verifyMocks;
exports.withMocks = withMocks;

require("source-map-support/register");

var _sinon = _interopRequireDefault(require("sinon"));

var _lodash = _interopRequireDefault(require("lodash"));

let SANDBOX = Symbol();

function withMocks(libs, fn) {
  return () => {
    const mocks = {
      verify() {
        this.sandbox.verify();
      },

      get sandbox() {
        return this[SANDBOX];
      },

      set sandbox(sandbox) {
        this[SANDBOX] = sandbox;
      }

    };
    beforeEach(function beforeEach() {
      mocks[SANDBOX] = _sinon.default.createSandbox();

      for (let [key, value] of _lodash.default.toPairs(libs)) {
        mocks[key] = mocks.sandbox.mock(value);
      }
    });
    afterEach(function afterEach() {
      mocks.sandbox.restore();
    });
    fn(mocks);
  };
}

function verifyMocks(mocks) {
  mocks.sandbox.verify();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTQU5EQk9YIiwiU3ltYm9sIiwid2l0aE1vY2tzIiwibGlicyIsImZuIiwibW9ja3MiLCJ2ZXJpZnkiLCJzYW5kYm94IiwiYmVmb3JlRWFjaCIsInNpbm9uIiwiY3JlYXRlU2FuZGJveCIsImtleSIsInZhbHVlIiwiXyIsInRvUGFpcnMiLCJtb2NrIiwiYWZ0ZXJFYWNoIiwicmVzdG9yZSIsInZlcmlmeU1vY2tzIl0sInNvdXJjZXMiOlsiLi4vLi4vbGliL21vY2stdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNpbm9uIGZyb20gJ3Npbm9uJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmxldCBTQU5EQk9YID0gU3ltYm9sKCk7XG5cbmZ1bmN0aW9uIHdpdGhNb2NrcyAobGlicywgZm4pIHtcbiAgcmV0dXJuICgpID0+IHtcbiAgICBjb25zdCBtb2NrcyA9IHtcbiAgICAgIHZlcmlmeSAoKSB7XG4gICAgICAgIHRoaXMuc2FuZGJveC52ZXJpZnkoKTtcbiAgICAgIH0sXG4gICAgICBnZXQgc2FuZGJveCAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW1NBTkRCT1hdO1xuICAgICAgfSxcbiAgICAgIHNldCBzYW5kYm94IChzYW5kYm94KSB7XG4gICAgICAgIHRoaXNbU0FOREJPWF0gPSBzYW5kYm94O1xuICAgICAgfSxcbiAgICB9O1xuICAgIGJlZm9yZUVhY2goZnVuY3Rpb24gYmVmb3JlRWFjaCAoKSB7XG4gICAgICBtb2Nrc1tTQU5EQk9YXSA9IHNpbm9uLmNyZWF0ZVNhbmRib3goKTtcbiAgICAgIGZvciAobGV0IFtrZXksIHZhbHVlXSBvZiBfLnRvUGFpcnMobGlicykpIHtcbiAgICAgICAgbW9ja3Nba2V5XSA9IG1vY2tzLnNhbmRib3gubW9jayh2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgYWZ0ZXJFYWNoKGZ1bmN0aW9uIGFmdGVyRWFjaCAoKSB7XG4gICAgICBtb2Nrcy5zYW5kYm94LnJlc3RvcmUoKTtcbiAgICB9KTtcbiAgICBmbihtb2Nrcyk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHZlcmlmeU1vY2tzIChtb2Nrcykge1xuICBtb2Nrcy5zYW5kYm94LnZlcmlmeSgpO1xufVxuXG5leHBvcnQgeyB3aXRoTW9ja3MsIHZlcmlmeU1vY2tzIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUVBLElBQUlBLE9BQU8sR0FBR0MsTUFBTSxFQUFwQjs7QUFFQSxTQUFTQyxTQUFULENBQW9CQyxJQUFwQixFQUEwQkMsRUFBMUIsRUFBOEI7RUFDNUIsT0FBTyxNQUFNO0lBQ1gsTUFBTUMsS0FBSyxHQUFHO01BQ1pDLE1BQU0sR0FBSTtRQUNSLEtBQUtDLE9BQUwsQ0FBYUQsTUFBYjtNQUNELENBSFc7O01BSVosSUFBSUMsT0FBSixHQUFlO1FBQ2IsT0FBTyxLQUFLUCxPQUFMLENBQVA7TUFDRCxDQU5XOztNQU9aLElBQUlPLE9BQUosQ0FBYUEsT0FBYixFQUFzQjtRQUNwQixLQUFLUCxPQUFMLElBQWdCTyxPQUFoQjtNQUNEOztJQVRXLENBQWQ7SUFXQUMsVUFBVSxDQUFDLFNBQVNBLFVBQVQsR0FBdUI7TUFDaENILEtBQUssQ0FBQ0wsT0FBRCxDQUFMLEdBQWlCUyxlQUFNQyxhQUFOLEVBQWpCOztNQUNBLEtBQUssSUFBSSxDQUFDQyxHQUFELEVBQU1DLEtBQU4sQ0FBVCxJQUF5QkMsZ0JBQUVDLE9BQUYsQ0FBVVgsSUFBVixDQUF6QixFQUEwQztRQUN4Q0UsS0FBSyxDQUFDTSxHQUFELENBQUwsR0FBYU4sS0FBSyxDQUFDRSxPQUFOLENBQWNRLElBQWQsQ0FBbUJILEtBQW5CLENBQWI7TUFDRDtJQUNGLENBTFMsQ0FBVjtJQU1BSSxTQUFTLENBQUMsU0FBU0EsU0FBVCxHQUFzQjtNQUM5QlgsS0FBSyxDQUFDRSxPQUFOLENBQWNVLE9BQWQ7SUFDRCxDQUZRLENBQVQ7SUFHQWIsRUFBRSxDQUFDQyxLQUFELENBQUY7RUFDRCxDQXRCRDtBQXVCRDs7QUFFRCxTQUFTYSxXQUFULENBQXNCYixLQUF0QixFQUE2QjtFQUMzQkEsS0FBSyxDQUFDRSxPQUFOLENBQWNELE1BQWQ7QUFDRCJ9