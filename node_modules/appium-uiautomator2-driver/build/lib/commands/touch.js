"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

let commands = {},
    extensions = {};

commands.doPerformMultiAction = async function (elementId, states) {
  let opts;

  if (elementId) {
    opts = {
      elementId,
      actions: states
    };
    return await this.uiautomator2.jwproxy.command('/touch/multi/perform', 'POST', opts);
  } else {
    opts = {
      actions: states
    };
    return await this.uiautomator2.jwproxy.command('/touch/multi/perform', 'POST', opts);
  }
};

commands.performActions = async function (actions) {
  this.log.debug(`Received the following W3C actions: ${JSON.stringify(actions, null, '  ')}`);
  const preprocessedActions = actions.map(action => Object.assign({}, action, action.type === 'pointer' ? {
    parameters: {
      pointerType: 'touch'
    }
  } : {}));
  this.log.debug(`Preprocessed actions: ${JSON.stringify(preprocessedActions, null, '  ')}`);
  return await this.uiautomator2.jwproxy.command('/actions', 'POST', {
    actions: preprocessedActions
  });
};

Object.assign(extensions, commands);
var _default = extensions;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL2NvbW1hbmRzL3RvdWNoLmpzIiwibmFtZXMiOlsiY29tbWFuZHMiLCJleHRlbnNpb25zIiwiZG9QZXJmb3JtTXVsdGlBY3Rpb24iLCJlbGVtZW50SWQiLCJzdGF0ZXMiLCJvcHRzIiwiYWN0aW9ucyIsInVpYXV0b21hdG9yMiIsImp3cHJveHkiLCJjb21tYW5kIiwicGVyZm9ybUFjdGlvbnMiLCJsb2ciLCJkZWJ1ZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJwcmVwcm9jZXNzZWRBY3Rpb25zIiwibWFwIiwiYWN0aW9uIiwiT2JqZWN0IiwiYXNzaWduIiwidHlwZSIsInBhcmFtZXRlcnMiLCJwb2ludGVyVHlwZSJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4iLCJzb3VyY2VzIjpbImxpYi9jb21tYW5kcy90b3VjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY29tbWFuZHMgPSB7fSwgZXh0ZW5zaW9ucyA9IHt9O1xuXG5jb21tYW5kcy5kb1BlcmZvcm1NdWx0aUFjdGlvbiA9IGFzeW5jIGZ1bmN0aW9uIChlbGVtZW50SWQsIHN0YXRlcykge1xuICBsZXQgb3B0cztcbiAgaWYgKGVsZW1lbnRJZCkge1xuICAgIG9wdHMgPSB7XG4gICAgICBlbGVtZW50SWQsXG4gICAgICBhY3Rpb25zOiBzdGF0ZXNcbiAgICB9O1xuXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMudWlhdXRvbWF0b3IyLmp3cHJveHkuY29tbWFuZCgnL3RvdWNoL211bHRpL3BlcmZvcm0nLCAnUE9TVCcsIG9wdHMpO1xuICB9IGVsc2Uge1xuICAgIG9wdHMgPSB7XG4gICAgICBhY3Rpb25zOiBzdGF0ZXNcbiAgICB9O1xuICAgIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoJy90b3VjaC9tdWx0aS9wZXJmb3JtJywgJ1BPU1QnLCBvcHRzKTtcbiAgfVxufTtcblxuY29tbWFuZHMucGVyZm9ybUFjdGlvbnMgPSBhc3luYyBmdW5jdGlvbiAoYWN0aW9ucykge1xuICB0aGlzLmxvZy5kZWJ1ZyhgUmVjZWl2ZWQgdGhlIGZvbGxvd2luZyBXM0MgYWN0aW9uczogJHtKU09OLnN0cmluZ2lmeShhY3Rpb25zLCBudWxsLCAnICAnKX1gKTtcbiAgLy8gVGhpcyBpcyBtYW5kYXRvcnksIHNpbmNlIFNlbGVuaXVtIEFQSSB1c2VzIE1PVVNFIGFzIHRoZSBkZWZhdWx0IHBvaW50ZXIgdHlwZVxuICBjb25zdCBwcmVwcm9jZXNzZWRBY3Rpb25zID0gYWN0aW9uc1xuICAgIC5tYXAoKGFjdGlvbikgPT4gT2JqZWN0LmFzc2lnbih7fSwgYWN0aW9uLCBhY3Rpb24udHlwZSA9PT0gJ3BvaW50ZXInID8ge1xuICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICBwb2ludGVyVHlwZTogJ3RvdWNoJ1xuICAgICAgfVxuICAgIH0gOiB7fSkpO1xuICB0aGlzLmxvZy5kZWJ1ZyhgUHJlcHJvY2Vzc2VkIGFjdGlvbnM6ICR7SlNPTi5zdHJpbmdpZnkocHJlcHJvY2Vzc2VkQWN0aW9ucywgbnVsbCwgJyAgJyl9YCk7XG4gIHJldHVybiBhd2FpdCB0aGlzLnVpYXV0b21hdG9yMi5qd3Byb3h5LmNvbW1hbmQoJy9hY3Rpb25zJywgJ1BPU1QnLCB7YWN0aW9uczogcHJlcHJvY2Vzc2VkQWN0aW9uc30pO1xufTtcblxuT2JqZWN0LmFzc2lnbihleHRlbnNpb25zLCBjb21tYW5kcyk7XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFJQSxRQUFRLEdBQUcsRUFBZjtBQUFBLElBQW1CQyxVQUFVLEdBQUcsRUFBaEM7O0FBRUFELFFBQVEsQ0FBQ0Usb0JBQVQsR0FBZ0MsZ0JBQWdCQyxTQUFoQixFQUEyQkMsTUFBM0IsRUFBbUM7RUFDakUsSUFBSUMsSUFBSjs7RUFDQSxJQUFJRixTQUFKLEVBQWU7SUFDYkUsSUFBSSxHQUFHO01BQ0xGLFNBREs7TUFFTEcsT0FBTyxFQUFFRjtJQUZKLENBQVA7SUFLQSxPQUFPLE1BQU0sS0FBS0csWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLHNCQUFsQyxFQUEwRCxNQUExRCxFQUFrRUosSUFBbEUsQ0FBYjtFQUNELENBUEQsTUFPTztJQUNMQSxJQUFJLEdBQUc7TUFDTEMsT0FBTyxFQUFFRjtJQURKLENBQVA7SUFHQSxPQUFPLE1BQU0sS0FBS0csWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLHNCQUFsQyxFQUEwRCxNQUExRCxFQUFrRUosSUFBbEUsQ0FBYjtFQUNEO0FBQ0YsQ0FmRDs7QUFpQkFMLFFBQVEsQ0FBQ1UsY0FBVCxHQUEwQixnQkFBZ0JKLE9BQWhCLEVBQXlCO0VBQ2pELEtBQUtLLEdBQUwsQ0FBU0MsS0FBVCxDQUFnQix1Q0FBc0NDLElBQUksQ0FBQ0MsU0FBTCxDQUFlUixPQUFmLEVBQXdCLElBQXhCLEVBQThCLElBQTlCLENBQW9DLEVBQTFGO0VBRUEsTUFBTVMsbUJBQW1CLEdBQUdULE9BQU8sQ0FDaENVLEdBRHlCLENBQ3BCQyxNQUFELElBQVlDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JGLE1BQWxCLEVBQTBCQSxNQUFNLENBQUNHLElBQVAsS0FBZ0IsU0FBaEIsR0FBNEI7SUFDckVDLFVBQVUsRUFBRTtNQUNWQyxXQUFXLEVBQUU7SUFESDtFQUR5RCxDQUE1QixHQUl2QyxFQUphLENBRFMsQ0FBNUI7RUFNQSxLQUFLWCxHQUFMLENBQVNDLEtBQVQsQ0FBZ0IseUJBQXdCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsbUJBQWYsRUFBb0MsSUFBcEMsRUFBMEMsSUFBMUMsQ0FBZ0QsRUFBeEY7RUFDQSxPQUFPLE1BQU0sS0FBS1IsWUFBTCxDQUFrQkMsT0FBbEIsQ0FBMEJDLE9BQTFCLENBQWtDLFVBQWxDLEVBQThDLE1BQTlDLEVBQXNEO0lBQUNILE9BQU8sRUFBRVM7RUFBVixDQUF0RCxDQUFiO0FBQ0QsQ0FYRDs7QUFhQUcsTUFBTSxDQUFDQyxNQUFQLENBQWNsQixVQUFkLEVBQTBCRCxRQUExQjtlQUNlQyxVIn0=
