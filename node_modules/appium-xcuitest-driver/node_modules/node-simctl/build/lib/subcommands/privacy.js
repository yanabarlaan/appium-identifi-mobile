"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

const commands = {};

commands.grantPermission = async function grantPermission(bundleId, perm) {
  await this.exec('privacy', {
    args: [this.requireUdid('privacy grant'), 'grant', perm, bundleId]
  });
};

commands.revokePermission = async function revokePermission(bundleId, perm) {
  await this.exec('privacy', {
    args: [this.requireUdid('privacy revoke'), 'revoke', perm, bundleId]
  });
};

commands.resetPermission = async function resetPermission(bundleId, perm) {
  await this.exec('privacy', {
    args: [this.requireUdid('private reset'), 'reset', perm, bundleId]
  });
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3N1YmNvbW1hbmRzL3ByaXZhY3kuanMiLCJuYW1lcyI6WyJjb21tYW5kcyIsImdyYW50UGVybWlzc2lvbiIsImJ1bmRsZUlkIiwicGVybSIsImV4ZWMiLCJhcmdzIiwicmVxdWlyZVVkaWQiLCJyZXZva2VQZXJtaXNzaW9uIiwicmVzZXRQZXJtaXNzaW9uIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiIsInNvdXJjZXMiOlsibGliL3N1YmNvbW1hbmRzL3ByaXZhY3kuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29tbWFuZHMgPSB7fTtcblxuLyoqXG4gKiBHcmFudHMgdGhlIGdpdmVuIHBlcm1pc3Npb24gb24gdGhlIGFwcCB3aXRoIHRoZSBnaXZlbiBidW5kbGUgaWRlbnRpZmllclxuICpcbiAqIEBzaW5jZSBYY29kZSAxMS40IFNES1xuICogQHBhcmFtIHtzdHJpbmd9IGJ1bmRsZUlkIHRoZSBpZGVudGlmaWVyIG9mIHRoZSBhcHBsaWNhdGlvbiB3aG9zZVxuICogcHJpdmFjeSBzZXR0aW5ncyBhcmUgZ29pbmcgdG8gYmUgY2hhbmdlZFxuICogQHBhcmFtIHtzdHJpbmd9IHBlcm0gb25lIG9mIHBvc3NpYmxlIHBlcm1pc3Npb24gdmFsdWVzOlxuICogLSBhbGw6IEFwcGx5IHRoZSBhY3Rpb24gdG8gYWxsIHNlcnZpY2VzLlxuICogLSBjYWxlbmRhcjogQWxsb3cgYWNjZXNzIHRvIGNhbGVuZGFyLlxuICogLSBjb250YWN0cy1saW1pdGVkOiBBbGxvdyBhY2Nlc3MgdG8gYmFzaWMgY29udGFjdCBpbmZvLlxuICogLSBjb250YWN0czogQWxsb3cgYWNjZXNzIHRvIGZ1bGwgY29udGFjdCBkZXRhaWxzLlxuICogLSBsb2NhdGlvbjogQWxsb3cgYWNjZXNzIHRvIGxvY2F0aW9uIHNlcnZpY2VzIHdoZW4gYXBwIGlzIGluIHVzZS5cbiAqIC0gbG9jYXRpb24tYWx3YXlzOiBBbGxvdyBhY2Nlc3MgdG8gbG9jYXRpb24gc2VydmljZXMgYXQgYWxsIHRpbWVzLlxuICogLSBwaG90b3MtYWRkOiBBbGxvdyBhZGRpbmcgcGhvdG9zIHRvIHRoZSBwaG90byBsaWJyYXJ5LlxuICogLSBwaG90b3M6IEFsbG93IGZ1bGwgYWNjZXNzIHRvIHRoZSBwaG90byBsaWJyYXJ5LlxuICogLSBtZWRpYS1saWJyYXJ5OiBBbGxvdyBhY2Nlc3MgdG8gdGhlIG1lZGlhIGxpYnJhcnkuXG4gKiAtIG1pY3JvcGhvbmU6IEFsbG93IGFjY2VzcyB0byBhdWRpbyBpbnB1dC5cbiAqIC0gbW90aW9uOiBBbGxvdyBhY2Nlc3MgdG8gbW90aW9uIGFuZCBmaXRuZXNzIGRhdGEuXG4gKiAtIHJlbWluZGVyczogQWxsb3cgYWNjZXNzIHRvIHJlbWluZGVycy5cbiAqIC0gc2lyaTogQWxsb3cgdXNlIG9mIHRoZSBhcHAgd2l0aCBTaXJpLlxuICogQHRocm93cyB7RXJyb3J9IGlmIHRoZSBjdXJyZW50IFNESyB2ZXJzaW9uIGRvZXMgbm90IHN1cHBvcnQgdGhlIGNvbW1hbmRcbiAqIG9yIHRoZXJlIHdhcyBhbiBlcnJvciB3aGlsZSBncmFudGluZyB0aGUgcGVybWlzc2lvblxuICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBgdWRpZGAgaW5zdGFuY2UgcHJvcGVydHkgaXMgdW5zZXRcbiAqL1xuY29tbWFuZHMuZ3JhbnRQZXJtaXNzaW9uID0gYXN5bmMgZnVuY3Rpb24gZ3JhbnRQZXJtaXNzaW9uIChidW5kbGVJZCwgcGVybSkge1xuICBhd2FpdCB0aGlzLmV4ZWMoJ3ByaXZhY3knLCB7XG4gICAgYXJnczogW3RoaXMucmVxdWlyZVVkaWQoJ3ByaXZhY3kgZ3JhbnQnKSwgJ2dyYW50JywgcGVybSwgYnVuZGxlSWRdLFxuICB9KTtcbn07XG5cbi8qKlxuICogUmV2b2tlcyB0aGUgZ2l2ZW4gcGVybWlzc2lvbiBvbiB0aGUgYXBwIHdpdGggdGhlIGdpdmVuIGJ1bmRsZSBpZGVudGlmaWVyXG4gKiBhZnRlciBpdCBoYXMgYmVlbiBncmFudGVkXG4gKlxuICogQHNpbmNlIFhjb2RlIDExLjQgU0RLXG4gKiBAcGFyYW0ge3N0cmluZ30gYnVuZGxlSWQgdGhlIGlkZW50aWZpZXIgb2YgdGhlIGFwcGxpY2F0aW9uIHdob3NlXG4gKiBwcml2YWN5IHNldHRpbmdzIGFyZSBnb2luZyB0byBiZSBjaGFuZ2VkXG4gKiBAcGFyYW0ge3N0cmluZ30gcGVybSBvbmUgb2YgcG9zc2libGUgcGVybWlzc2lvbiB2YWx1ZXMgKHNlZSBgZ3JhbnRQZXJtaXNzaW9uYClcbiAqIEB0aHJvd3Mge0Vycm9yfSBpZiB0aGUgY3VycmVudCBTREsgdmVyc2lvbiBkb2VzIG5vdCBzdXBwb3J0IHRoZSBjb21tYW5kXG4gKiBvciB0aGVyZSB3YXMgYW4gZXJyb3Igd2hpbGUgcmV2b2tpbmcgdGhlIHBlcm1pc3Npb25cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgYHVkaWRgIGluc3RhbmNlIHByb3BlcnR5IGlzIHVuc2V0XG4gKi9cbmNvbW1hbmRzLnJldm9rZVBlcm1pc3Npb24gPSBhc3luYyBmdW5jdGlvbiByZXZva2VQZXJtaXNzaW9uIChidW5kbGVJZCwgcGVybSkge1xuICBhd2FpdCB0aGlzLmV4ZWMoJ3ByaXZhY3knLCB7XG4gICAgYXJnczogW3RoaXMucmVxdWlyZVVkaWQoJ3ByaXZhY3kgcmV2b2tlJyksICdyZXZva2UnLCBwZXJtLCBidW5kbGVJZF0sXG4gIH0pO1xufTtcblxuLyoqXG4gKiBSZXNldHMgdGhlIGdpdmVuIHBlcm1pc3Npb24gb24gdGhlIGFwcCB3aXRoIHRoZSBnaXZlbiBidW5kbGUgaWRlbnRpZmllclxuICogdG8gaXRzIGRlZmF1bHQgc3RhdGVcbiAqXG4gKiBAc2luY2UgWGNvZGUgMTEuNCBTREtcbiAqIEBwYXJhbSB7c3RyaW5nfSBidW5kbGVJZCB0aGUgaWRlbnRpZmllciBvZiB0aGUgYXBwbGljYXRpb24gd2hvc2VcbiAqIHByaXZhY3kgc2V0dGluZ3MgYXJlIGdvaW5nIHRvIGJlIGNoYW5nZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBwZXJtIG9uZSBvZiBwb3NzaWJsZSBwZXJtaXNzaW9uIHZhbHVlcyAoc2VlIGBncmFudFBlcm1pc3Npb25gKVxuICogQHRocm93cyB7RXJyb3J9IGlmIHRoZSBjdXJyZW50IFNESyB2ZXJzaW9uIGRvZXMgbm90IHN1cHBvcnQgdGhlIGNvbW1hbmRcbiAqIG9yIHRoZXJlIHdhcyBhbiBlcnJvciB3aGlsZSByZXNldHRpbmcgdGhlIHBlcm1pc3Npb25cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgYHVkaWRgIGluc3RhbmNlIHByb3BlcnR5IGlzIHVuc2V0XG4gKi9cbmNvbW1hbmRzLnJlc2V0UGVybWlzc2lvbiA9IGFzeW5jIGZ1bmN0aW9uIHJlc2V0UGVybWlzc2lvbiAoYnVuZGxlSWQsIHBlcm0pIHtcbiAgYXdhaXQgdGhpcy5leGVjKCdwcml2YWN5Jywge1xuICAgIGFyZ3M6IFt0aGlzLnJlcXVpcmVVZGlkKCdwcml2YXRlIHJlc2V0JyksICdyZXNldCcsIHBlcm0sIGJ1bmRsZUlkXSxcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21tYW5kcztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsTUFBTUEsUUFBUSxHQUFHLEVBQWpCOztBQTBCQUEsUUFBUSxDQUFDQyxlQUFULEdBQTJCLGVBQWVBLGVBQWYsQ0FBZ0NDLFFBQWhDLEVBQTBDQyxJQUExQyxFQUFnRDtFQUN6RSxNQUFNLEtBQUtDLElBQUwsQ0FBVSxTQUFWLEVBQXFCO0lBQ3pCQyxJQUFJLEVBQUUsQ0FBQyxLQUFLQyxXQUFMLENBQWlCLGVBQWpCLENBQUQsRUFBb0MsT0FBcEMsRUFBNkNILElBQTdDLEVBQW1ERCxRQUFuRDtFQURtQixDQUFyQixDQUFOO0FBR0QsQ0FKRDs7QUFrQkFGLFFBQVEsQ0FBQ08sZ0JBQVQsR0FBNEIsZUFBZUEsZ0JBQWYsQ0FBaUNMLFFBQWpDLEVBQTJDQyxJQUEzQyxFQUFpRDtFQUMzRSxNQUFNLEtBQUtDLElBQUwsQ0FBVSxTQUFWLEVBQXFCO0lBQ3pCQyxJQUFJLEVBQUUsQ0FBQyxLQUFLQyxXQUFMLENBQWlCLGdCQUFqQixDQUFELEVBQXFDLFFBQXJDLEVBQStDSCxJQUEvQyxFQUFxREQsUUFBckQ7RUFEbUIsQ0FBckIsQ0FBTjtBQUdELENBSkQ7O0FBa0JBRixRQUFRLENBQUNRLGVBQVQsR0FBMkIsZUFBZUEsZUFBZixDQUFnQ04sUUFBaEMsRUFBMENDLElBQTFDLEVBQWdEO0VBQ3pFLE1BQU0sS0FBS0MsSUFBTCxDQUFVLFNBQVYsRUFBcUI7SUFDekJDLElBQUksRUFBRSxDQUFDLEtBQUtDLFdBQUwsQ0FBaUIsZUFBakIsQ0FBRCxFQUFvQyxPQUFwQyxFQUE2Q0gsSUFBN0MsRUFBbURELFFBQW5EO0VBRG1CLENBQXJCLENBQU47QUFHRCxDQUpEOztlQU1lRixRIn0=
