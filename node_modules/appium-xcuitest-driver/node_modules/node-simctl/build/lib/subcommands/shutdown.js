"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _logger = _interopRequireWildcard(require("../logger"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const commands = {};

commands.shutdownDevice = async function shutdownDevice() {
  try {
    await this.exec('shutdown', {
      args: [this.requireUdid('shutdown')]
    });
  } catch (e) {
    if (!_lodash.default.includes(e.message, 'current state: Shutdown')) {
      throw e;
    }

    _logger.default.debug(_logger.LOG_PREFIX, `Simulator already in 'Shutdown' state. Continuing`);
  }
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3N1YmNvbW1hbmRzL3NodXRkb3duLmpzIiwibmFtZXMiOlsiY29tbWFuZHMiLCJzaHV0ZG93bkRldmljZSIsImV4ZWMiLCJhcmdzIiwicmVxdWlyZVVkaWQiLCJlIiwiXyIsImluY2x1ZGVzIiwibWVzc2FnZSIsImxvZyIsImRlYnVnIiwiTE9HX1BSRUZJWCJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4iLCJzb3VyY2VzIjpbImxpYi9zdWJjb21tYW5kcy9zaHV0ZG93bi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGxvZywgeyBMT0dfUFJFRklYIH0gZnJvbSAnLi4vbG9nZ2VyJztcblxuY29uc3QgY29tbWFuZHMgPSB7fTtcblxuLyoqXG4gKiBTaHV0ZG93biB0aGUgZ2l2ZW4gU2ltdWxhdG9yIGlmIGl0IGlzIHJ1bm5pbmcuXG4gKlxuICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBjb3JyZXNwb25kaW5nIHNpbWN0bCBzdWJjb21tYW5kIGNvbW1hbmRcbiAqICAgICAgICAgICAgICAgICByZXR1cm5zIG5vbi16ZXJvIHJldHVybiBjb2RlLlxuICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBgdWRpZGAgaW5zdGFuY2UgcHJvcGVydHkgaXMgdW5zZXRcbiAqL1xuY29tbWFuZHMuc2h1dGRvd25EZXZpY2UgPSBhc3luYyBmdW5jdGlvbiBzaHV0ZG93bkRldmljZSAoKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgdGhpcy5leGVjKCdzaHV0ZG93bicsIHtcbiAgICAgIGFyZ3M6IFt0aGlzLnJlcXVpcmVVZGlkKCdzaHV0ZG93bicpXSxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmICghXy5pbmNsdWRlcyhlLm1lc3NhZ2UsICdjdXJyZW50IHN0YXRlOiBTaHV0ZG93bicpKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICBsb2cuZGVidWcoTE9HX1BSRUZJWCwgYFNpbXVsYXRvciBhbHJlYWR5IGluICdTaHV0ZG93bicgc3RhdGUuIENvbnRpbnVpbmdgKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29tbWFuZHM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7OztBQUVBLE1BQU1BLFFBQVEsR0FBRyxFQUFqQjs7QUFTQUEsUUFBUSxDQUFDQyxjQUFULEdBQTBCLGVBQWVBLGNBQWYsR0FBaUM7RUFDekQsSUFBSTtJQUNGLE1BQU0sS0FBS0MsSUFBTCxDQUFVLFVBQVYsRUFBc0I7TUFDMUJDLElBQUksRUFBRSxDQUFDLEtBQUtDLFdBQUwsQ0FBaUIsVUFBakIsQ0FBRDtJQURvQixDQUF0QixDQUFOO0VBR0QsQ0FKRCxDQUlFLE9BQU9DLENBQVAsRUFBVTtJQUNWLElBQUksQ0FBQ0MsZ0JBQUVDLFFBQUYsQ0FBV0YsQ0FBQyxDQUFDRyxPQUFiLEVBQXNCLHlCQUF0QixDQUFMLEVBQXVEO01BQ3JELE1BQU1ILENBQU47SUFDRDs7SUFDREksZ0JBQUlDLEtBQUosQ0FBVUMsa0JBQVYsRUFBdUIsbURBQXZCO0VBQ0Q7QUFDRixDQVhEOztlQWFlWCxRIn0=
