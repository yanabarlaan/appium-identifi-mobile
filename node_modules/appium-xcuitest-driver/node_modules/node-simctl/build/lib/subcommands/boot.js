"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _logger = _interopRequireWildcard(require("../logger"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const commands = {};

commands.bootDevice = async function bootDevice() {
  try {
    await this.exec('boot', {
      args: [this.requireUdid('boot')]
    });
  } catch (e) {
    if (_lodash.default.includes(e.message, 'Unable to boot device in current state: Booted')) {
      throw e;
    }

    _logger.default.debug(_logger.LOG_PREFIX, `Simulator already in 'Booted' state. Continuing`);
  }
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3N1YmNvbW1hbmRzL2Jvb3QuanMiLCJuYW1lcyI6WyJjb21tYW5kcyIsImJvb3REZXZpY2UiLCJleGVjIiwiYXJncyIsInJlcXVpcmVVZGlkIiwiZSIsIl8iLCJpbmNsdWRlcyIsIm1lc3NhZ2UiLCJsb2ciLCJkZWJ1ZyIsIkxPR19QUkVGSVgiXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIiwic291cmNlcyI6WyJsaWIvc3ViY29tbWFuZHMvYm9vdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGxvZywgeyBMT0dfUFJFRklYIH0gZnJvbSAnLi4vbG9nZ2VyJztcblxuXG5jb25zdCBjb21tYW5kcyA9IHt9O1xuXG4vKipcbiAqIEJvb3QgdGhlIHBhcnRpY3VsYXIgU2ltdWxhdG9yIGlmIGl0IGlzIG5vdCBydW5uaW5nLlxuICpcbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgY29ycmVzcG9uZGluZyBzaW1jdGwgc3ViY29tbWFuZCBjb21tYW5kXG4gKiAgICAgICAgICAgICAgICAgcmV0dXJucyBub24temVybyByZXR1cm4gY29kZS5cbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiB0aGUgYHVkaWRgIGluc3RhbmNlIHByb3BlcnR5IGlzIHVuc2V0XG4gKi9cbmNvbW1hbmRzLmJvb3REZXZpY2UgPSBhc3luYyBmdW5jdGlvbiBib290RGV2aWNlICgpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCB0aGlzLmV4ZWMoJ2Jvb3QnLCB7XG4gICAgICBhcmdzOiBbdGhpcy5yZXF1aXJlVWRpZCgnYm9vdCcpXVxuICAgIH0pO1xuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKF8uaW5jbHVkZXMoZS5tZXNzYWdlLCAnVW5hYmxlIHRvIGJvb3QgZGV2aWNlIGluIGN1cnJlbnQgc3RhdGU6IEJvb3RlZCcpKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICBsb2cuZGVidWcoTE9HX1BSRUZJWCwgYFNpbXVsYXRvciBhbHJlYWR5IGluICdCb290ZWQnIHN0YXRlLiBDb250aW51aW5nYCk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbW1hbmRzO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFHQSxNQUFNQSxRQUFRLEdBQUcsRUFBakI7O0FBU0FBLFFBQVEsQ0FBQ0MsVUFBVCxHQUFzQixlQUFlQSxVQUFmLEdBQTZCO0VBQ2pELElBQUk7SUFDRixNQUFNLEtBQUtDLElBQUwsQ0FBVSxNQUFWLEVBQWtCO01BQ3RCQyxJQUFJLEVBQUUsQ0FBQyxLQUFLQyxXQUFMLENBQWlCLE1BQWpCLENBQUQ7SUFEZ0IsQ0FBbEIsQ0FBTjtFQUdELENBSkQsQ0FJRSxPQUFPQyxDQUFQLEVBQVU7SUFDVixJQUFJQyxnQkFBRUMsUUFBRixDQUFXRixDQUFDLENBQUNHLE9BQWIsRUFBc0IsZ0RBQXRCLENBQUosRUFBNkU7TUFDM0UsTUFBTUgsQ0FBTjtJQUNEOztJQUNESSxnQkFBSUMsS0FBSixDQUFVQyxrQkFBVixFQUF1QixpREFBdkI7RUFDRDtBQUNGLENBWEQ7O2VBYWVYLFEifQ==
