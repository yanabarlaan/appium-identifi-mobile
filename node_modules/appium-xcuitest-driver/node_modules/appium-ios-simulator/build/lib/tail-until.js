"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tailUntil = tailUntil;

require("source-map-support/register");

var _teen_process = require("teen_process");

var _bluebird = _interopRequireDefault(require("bluebird"));

var _logger = _interopRequireDefault(require("./logger"));

async function tailUntil(filePath, until, timeout = 5000) {
  let proc = new _teen_process.SubProcess('tail', ['-f', '-n', '100', filePath]);

  const startDetector = stdout => stdout.indexOf(until) > -1;

  return await new _bluebird.default((resolve, reject) => {
    const started = proc.start(startDetector);

    const timedout = _bluebird.default.delay(timeout).then(function () {
      return reject(new Error(`Tailing file ${filePath} failed after ${timeout}ms`));
    });

    _bluebird.default.race([started, timedout]).then(resolve).catch(reject);
  }).finally(async () => {
    if (proc.isRunning) {
      try {
        await proc.stop();
      } catch (err) {
        _logger.default.info(`Stopping tail process failed: ${err.message}`);
      }
    }
  });
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3RhaWwtdW50aWwuanMiLCJuYW1lcyI6WyJ0YWlsVW50aWwiLCJmaWxlUGF0aCIsInVudGlsIiwidGltZW91dCIsInByb2MiLCJTdWJQcm9jZXNzIiwic3RhcnREZXRlY3RvciIsInN0ZG91dCIsImluZGV4T2YiLCJCIiwicmVzb2x2ZSIsInJlamVjdCIsInN0YXJ0ZWQiLCJzdGFydCIsInRpbWVkb3V0IiwiZGVsYXkiLCJ0aGVuIiwiRXJyb3IiLCJyYWNlIiwiY2F0Y2giLCJmaW5hbGx5IiwiaXNSdW5uaW5nIiwic3RvcCIsImVyciIsImxvZyIsImluZm8iLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIuLi8uLiIsInNvdXJjZXMiOlsibGliL3RhaWwtdW50aWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ViUHJvY2VzcyB9IGZyb20gJ3RlZW5fcHJvY2Vzcyc7XG5pbXBvcnQgQiBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgbG9nIGZyb20gJy4vbG9nZ2VyJztcblxuLy8gdGFpbHMgYSBmaWxlLCBwcm9taXNlIHJlc29sdmVzIHdoZW4gaW5wdXQgc3RyaW5nIGlzIHdyaXR0ZW4gdG8gZmlsZVxuYXN5bmMgZnVuY3Rpb24gdGFpbFVudGlsIChmaWxlUGF0aCwgdW50aWwsIHRpbWVvdXQgPSA1MDAwKSB7XG4gIGxldCBwcm9jID0gbmV3IFN1YlByb2Nlc3MoJ3RhaWwnLCBbJy1mJywgJy1uJywgJzEwMCcsIGZpbGVQYXRoXSk7XG5cbiAgLy8gLy8gZm9yIGRlYnVnZ2luZ1xuICAvLyBmdW5jdGlvbiBjb25zb2xlT3V0ICguLi5hcmdzKSB7XG4gIC8vICAgY29uc29sZS5sb2coYD4+PiAke2FyZ3N9YCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAvLyB9XG4gIC8vIHByb2Mub24oJ291dHB1dCcsIGNvbnNvbGVPdXQpO1xuXG4gIGNvbnN0IHN0YXJ0RGV0ZWN0b3IgPSAoc3Rkb3V0KSA9PiBzdGRvdXQuaW5kZXhPZih1bnRpbCkgPiAtMTtcblxuICByZXR1cm4gYXdhaXQgbmV3IEIoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHN0YXJ0ZWQgPSBwcm9jLnN0YXJ0KHN0YXJ0RGV0ZWN0b3IpO1xuXG4gICAgLyogZXNsaW50LWRpc2FibGUgcHJvbWlzZS9wcmVmZXItYXdhaXQtdG8tdGhlbiAqL1xuICAgIGNvbnN0IHRpbWVkb3V0ID0gQi5kZWxheSh0aW1lb3V0KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKGBUYWlsaW5nIGZpbGUgJHtmaWxlUGF0aH0gZmFpbGVkIGFmdGVyICR7dGltZW91dH1tc2ApKTtcbiAgICB9KTtcbiAgICAvKiBlc2xpbnQtZW5hYmxlICovXG5cbiAgICBCLnJhY2UoW3N0YXJ0ZWQsIHRpbWVkb3V0XSkudGhlbihyZXNvbHZlKS5jYXRjaChyZWplY3QpO1xuICB9KS5maW5hbGx5KGFzeW5jICgpID0+IHtcbiAgICAvLyBubyBtYXR0ZXIgd2hhdCwgc3RvcCB0aGUgdGFpbCBwcm9jZXNzXG4gICAgaWYgKHByb2MuaXNSdW5uaW5nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBwcm9jLnN0b3AoKTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAvLyB0aGVyZSBpcyBub3QgbXVjaCB3ZSBjYW4gZG8gaGVyZSwgdW5mb3J0dW5hdGVseSwgYnV0IGxvZ1xuICAgICAgICBsb2cuaW5mbyhgU3RvcHBpbmcgdGFpbCBwcm9jZXNzIGZhaWxlZDogJHtlcnIubWVzc2FnZX1gKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgeyB0YWlsVW50aWwgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFHQSxlQUFlQSxTQUFmLENBQTBCQyxRQUExQixFQUFvQ0MsS0FBcEMsRUFBMkNDLE9BQU8sR0FBRyxJQUFyRCxFQUEyRDtFQUN6RCxJQUFJQyxJQUFJLEdBQUcsSUFBSUMsd0JBQUosQ0FBZSxNQUFmLEVBQXVCLENBQUMsSUFBRCxFQUFPLElBQVAsRUFBYSxLQUFiLEVBQW9CSixRQUFwQixDQUF2QixDQUFYOztFQVFBLE1BQU1LLGFBQWEsR0FBSUMsTUFBRCxJQUFZQSxNQUFNLENBQUNDLE9BQVAsQ0FBZU4sS0FBZixJQUF3QixDQUFDLENBQTNEOztFQUVBLE9BQU8sTUFBTSxJQUFJTyxpQkFBSixDQUFNLENBQUNDLE9BQUQsRUFBVUMsTUFBVixLQUFxQjtJQUN0QyxNQUFNQyxPQUFPLEdBQUdSLElBQUksQ0FBQ1MsS0FBTCxDQUFXUCxhQUFYLENBQWhCOztJQUdBLE1BQU1RLFFBQVEsR0FBR0wsaUJBQUEsQ0FBRU0sS0FBRixDQUFRWixPQUFSLEVBQWlCYSxJQUFqQixDQUFzQixZQUFZO01BQ2pELE9BQU9MLE1BQU0sQ0FBQyxJQUFJTSxLQUFKLENBQVcsZ0JBQWVoQixRQUFTLGlCQUFnQkUsT0FBUSxJQUEzRCxDQUFELENBQWI7SUFDRCxDQUZnQixDQUFqQjs7SUFLQU0saUJBQUEsQ0FBRVMsSUFBRixDQUFPLENBQUNOLE9BQUQsRUFBVUUsUUFBVixDQUFQLEVBQTRCRSxJQUE1QixDQUFpQ04sT0FBakMsRUFBMENTLEtBQTFDLENBQWdEUixNQUFoRDtFQUNELENBVlksRUFVVlMsT0FWVSxDQVVGLFlBQVk7SUFFckIsSUFBSWhCLElBQUksQ0FBQ2lCLFNBQVQsRUFBb0I7TUFDbEIsSUFBSTtRQUNGLE1BQU1qQixJQUFJLENBQUNrQixJQUFMLEVBQU47TUFDRCxDQUZELENBRUUsT0FBT0MsR0FBUCxFQUFZO1FBRVpDLGVBQUEsQ0FBSUMsSUFBSixDQUFVLGlDQUFnQ0YsR0FBRyxDQUFDRyxPQUFRLEVBQXREO01BQ0Q7SUFDRjtFQUNGLENBcEJZLENBQWI7QUFxQkQifQ==
