"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.AfcDecoder = void 0;

require("source-map-support/register");

var _stream = _interopRequireDefault(require("stream"));

var _protocol = require("../protocol");

class AfcDecoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }

  _transform(data, encoding, onData) {
    this._decode(data);

    onData();
  }

  _decode(data) {
    const magicNumber = data.slice(0, 8);

    if (magicNumber.compare(_protocol.MAGIC_NUMBER) !== 0) {
      throw new Error(`Unexpected magic number: ${magicNumber}`);
    }

    const messageLength = this.readUInt64LE(data, 8);
    const thisLength = this.readUInt64LE(data, 16);
    const packetNumber = this.readUInt64LE(data, 24);
    const opCode = this.readUInt64LE(data, 32);
    const headerPayload = data.slice(_protocol.AFC_PACKET_HEADER_SIZE, thisLength);
    const content = data.slice(thisLength, messageLength);
    this.push({
      messageLength,
      packetNumber,
      opCode,
      headerPayload,
      content
    });
  }

  readUInt64LE(buffer, index) {
    return buffer.readUInt32LE(index);
  }

}

exports.AfcDecoder = AfcDecoder;
var _default = AfcDecoder;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL2FmYy90cmFuc2Zvcm1lci9hZmNkZWNvZGVyLmpzIiwibmFtZXMiOlsiQWZjRGVjb2RlciIsIlN0cmVhbSIsIlRyYW5zZm9ybSIsImNvbnN0cnVjdG9yIiwib2JqZWN0TW9kZSIsIl90cmFuc2Zvcm0iLCJkYXRhIiwiZW5jb2RpbmciLCJvbkRhdGEiLCJfZGVjb2RlIiwibWFnaWNOdW1iZXIiLCJzbGljZSIsImNvbXBhcmUiLCJNQUdJQ19OVU1CRVIiLCJFcnJvciIsIm1lc3NhZ2VMZW5ndGgiLCJyZWFkVUludDY0TEUiLCJ0aGlzTGVuZ3RoIiwicGFja2V0TnVtYmVyIiwib3BDb2RlIiwiaGVhZGVyUGF5bG9hZCIsIkFGQ19QQUNLRVRfSEVBREVSX1NJWkUiLCJjb250ZW50IiwicHVzaCIsImJ1ZmZlciIsImluZGV4IiwicmVhZFVJbnQzMkxFIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiIsInNvdXJjZXMiOlsibGliL2FmYy90cmFuc2Zvcm1lci9hZmNkZWNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJlYW0gZnJvbSAnc3RyZWFtJztcbmltcG9ydCB7IE1BR0lDX05VTUJFUiwgQUZDX1BBQ0tFVF9IRUFERVJfU0laRSB9IGZyb20gJy4uL3Byb3RvY29sJztcblxuXG5jbGFzcyBBZmNEZWNvZGVyIGV4dGVuZHMgU3RyZWFtLlRyYW5zZm9ybSB7XG5cbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHN1cGVyKHsgb2JqZWN0TW9kZTogdHJ1ZSB9KTtcbiAgfVxuXG4gIF90cmFuc2Zvcm0gKGRhdGEsIGVuY29kaW5nLCBvbkRhdGEpIHtcbiAgICB0aGlzLl9kZWNvZGUoZGF0YSk7XG4gICAgb25EYXRhKCk7XG4gIH1cblxuICBfZGVjb2RlIChkYXRhKSB7XG4gICAgY29uc3QgbWFnaWNOdW1iZXIgPSBkYXRhLnNsaWNlKDAsIDgpO1xuICAgIGlmIChtYWdpY051bWJlci5jb21wYXJlKE1BR0lDX05VTUJFUikgIT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBtYWdpYyBudW1iZXI6ICR7bWFnaWNOdW1iZXJ9YCk7XG4gICAgfVxuICAgIGNvbnN0IG1lc3NhZ2VMZW5ndGggPSB0aGlzLnJlYWRVSW50NjRMRShkYXRhLCA4KTtcbiAgICBjb25zdCB0aGlzTGVuZ3RoID0gdGhpcy5yZWFkVUludDY0TEUoZGF0YSwgMTYpO1xuICAgIGNvbnN0IHBhY2tldE51bWJlciA9IHRoaXMucmVhZFVJbnQ2NExFKGRhdGEsIDI0KTtcbiAgICBjb25zdCBvcENvZGUgPSB0aGlzLnJlYWRVSW50NjRMRShkYXRhLCAzMik7XG5cbiAgICBjb25zdCBoZWFkZXJQYXlsb2FkID0gZGF0YS5zbGljZShBRkNfUEFDS0VUX0hFQURFUl9TSVpFLCB0aGlzTGVuZ3RoKTtcbiAgICBjb25zdCBjb250ZW50ID0gZGF0YS5zbGljZSh0aGlzTGVuZ3RoLCBtZXNzYWdlTGVuZ3RoKTtcblxuICAgIHRoaXMucHVzaCh7IG1lc3NhZ2VMZW5ndGgsIHBhY2tldE51bWJlciwgb3BDb2RlLCBoZWFkZXJQYXlsb2FkLCBjb250ZW50IH0pO1xuICB9XG5cbiAgcmVhZFVJbnQ2NExFIChidWZmZXIsIGluZGV4KSB7XG4gICAgLy8gSWdub3JlIHRoZSBmaXJzdCA0IGJ5dGVzIHNpbmNlIHdlIGRvbid0IGRvIGFueXRoaW5nIHdpdGggbG9uZ3NcbiAgICByZXR1cm4gYnVmZmVyLnJlYWRVSW50MzJMRShpbmRleCk7XG4gIH1cbn1cblxuZXhwb3J0IHsgQWZjRGVjb2RlciB9O1xuZXhwb3J0IGRlZmF1bHQgQWZjRGVjb2RlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFHQSxNQUFNQSxVQUFOLFNBQXlCQyxnQkFBT0MsU0FBaEMsQ0FBMEM7RUFFeENDLFdBQVcsR0FBSTtJQUNiLE1BQU07TUFBRUMsVUFBVSxFQUFFO0lBQWQsQ0FBTjtFQUNEOztFQUVEQyxVQUFVLENBQUVDLElBQUYsRUFBUUMsUUFBUixFQUFrQkMsTUFBbEIsRUFBMEI7SUFDbEMsS0FBS0MsT0FBTCxDQUFhSCxJQUFiOztJQUNBRSxNQUFNO0VBQ1A7O0VBRURDLE9BQU8sQ0FBRUgsSUFBRixFQUFRO0lBQ2IsTUFBTUksV0FBVyxHQUFHSixJQUFJLENBQUNLLEtBQUwsQ0FBVyxDQUFYLEVBQWMsQ0FBZCxDQUFwQjs7SUFDQSxJQUFJRCxXQUFXLENBQUNFLE9BQVosQ0FBb0JDLHNCQUFwQixNQUFzQyxDQUExQyxFQUE2QztNQUMzQyxNQUFNLElBQUlDLEtBQUosQ0FBVyw0QkFBMkJKLFdBQVksRUFBbEQsQ0FBTjtJQUNEOztJQUNELE1BQU1LLGFBQWEsR0FBRyxLQUFLQyxZQUFMLENBQWtCVixJQUFsQixFQUF3QixDQUF4QixDQUF0QjtJQUNBLE1BQU1XLFVBQVUsR0FBRyxLQUFLRCxZQUFMLENBQWtCVixJQUFsQixFQUF3QixFQUF4QixDQUFuQjtJQUNBLE1BQU1ZLFlBQVksR0FBRyxLQUFLRixZQUFMLENBQWtCVixJQUFsQixFQUF3QixFQUF4QixDQUFyQjtJQUNBLE1BQU1hLE1BQU0sR0FBRyxLQUFLSCxZQUFMLENBQWtCVixJQUFsQixFQUF3QixFQUF4QixDQUFmO0lBRUEsTUFBTWMsYUFBYSxHQUFHZCxJQUFJLENBQUNLLEtBQUwsQ0FBV1UsZ0NBQVgsRUFBbUNKLFVBQW5DLENBQXRCO0lBQ0EsTUFBTUssT0FBTyxHQUFHaEIsSUFBSSxDQUFDSyxLQUFMLENBQVdNLFVBQVgsRUFBdUJGLGFBQXZCLENBQWhCO0lBRUEsS0FBS1EsSUFBTCxDQUFVO01BQUVSLGFBQUY7TUFBaUJHLFlBQWpCO01BQStCQyxNQUEvQjtNQUF1Q0MsYUFBdkM7TUFBc0RFO0lBQXRELENBQVY7RUFDRDs7RUFFRE4sWUFBWSxDQUFFUSxNQUFGLEVBQVVDLEtBQVYsRUFBaUI7SUFFM0IsT0FBT0QsTUFBTSxDQUFDRSxZQUFQLENBQW9CRCxLQUFwQixDQUFQO0VBQ0Q7O0FBOUJ1Qzs7O2VBa0MzQnpCLFUifQ==
