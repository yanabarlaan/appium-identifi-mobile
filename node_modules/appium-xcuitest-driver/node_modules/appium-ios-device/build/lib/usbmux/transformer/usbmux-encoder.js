"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.UsbmuxEncoder = void 0;

require("source-map-support/register");

var _stream = _interopRequireDefault(require("stream"));

var _support = require("@appium/support");

const HEADER_LENGTH = 16;
const VERSION = 1;
const TYPE = 8;

class UsbmuxEncoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }

  _transform(data, encoding, onData) {
    this._encode(data);

    onData();
  }

  _encode(data) {
    const payloadBuffer = Buffer.from(_support.plist.createPlist(data.payload, false));
    const header = {
      length: HEADER_LENGTH + payloadBuffer.length,
      version: VERSION,
      type: TYPE,
      tag: data.tag
    };
    const headerBuffer = Buffer.allocUnsafe(HEADER_LENGTH);
    headerBuffer.writeUInt32LE(header.length, 0);
    headerBuffer.writeUInt32LE(header.version, 4);
    headerBuffer.writeUInt32LE(header.type, 8);
    headerBuffer.writeUInt32LE(header.tag, 12);
    this.push(Buffer.concat([headerBuffer, payloadBuffer], headerBuffer.length + payloadBuffer.length));
  }

}

exports.UsbmuxEncoder = UsbmuxEncoder;
var _default = UsbmuxEncoder;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3VzYm11eC90cmFuc2Zvcm1lci91c2JtdXgtZW5jb2Rlci5qcyIsIm5hbWVzIjpbIkhFQURFUl9MRU5HVEgiLCJWRVJTSU9OIiwiVFlQRSIsIlVzYm11eEVuY29kZXIiLCJTdHJlYW0iLCJUcmFuc2Zvcm0iLCJjb25zdHJ1Y3RvciIsIm9iamVjdE1vZGUiLCJfdHJhbnNmb3JtIiwiZGF0YSIsImVuY29kaW5nIiwib25EYXRhIiwiX2VuY29kZSIsInBheWxvYWRCdWZmZXIiLCJCdWZmZXIiLCJmcm9tIiwicGxpc3QiLCJjcmVhdGVQbGlzdCIsInBheWxvYWQiLCJoZWFkZXIiLCJsZW5ndGgiLCJ2ZXJzaW9uIiwidHlwZSIsInRhZyIsImhlYWRlckJ1ZmZlciIsImFsbG9jVW5zYWZlIiwid3JpdGVVSW50MzJMRSIsInB1c2giLCJjb25jYXQiXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIiwic291cmNlcyI6WyJsaWIvdXNibXV4L3RyYW5zZm9ybWVyL3VzYm11eC1lbmNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJlYW0gZnJvbSAnc3RyZWFtJztcbmltcG9ydCB7IHBsaXN0IH0gZnJvbSAnQGFwcGl1bS9zdXBwb3J0JztcblxuY29uc3QgSEVBREVSX0xFTkdUSCA9IDE2O1xuY29uc3QgVkVSU0lPTiA9IDE7XG5jb25zdCBUWVBFID0gODtcblxuY2xhc3MgVXNibXV4RW5jb2RlciBleHRlbmRzIFN0cmVhbS5UcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICB9XG5cbiAgX3RyYW5zZm9ybSAoZGF0YSwgZW5jb2RpbmcsIG9uRGF0YSkge1xuICAgIHRoaXMuX2VuY29kZShkYXRhKTtcbiAgICBvbkRhdGEoKTtcbiAgfVxuXG4gIF9lbmNvZGUgKGRhdGEpIHtcbiAgICBjb25zdCBwYXlsb2FkQnVmZmVyID0gQnVmZmVyLmZyb20ocGxpc3QuY3JlYXRlUGxpc3QoZGF0YS5wYXlsb2FkLCBmYWxzZSkpO1xuXG4gICAgY29uc3QgaGVhZGVyID0ge1xuICAgICAgbGVuZ3RoOiBIRUFERVJfTEVOR1RIICsgcGF5bG9hZEJ1ZmZlci5sZW5ndGgsXG4gICAgICB2ZXJzaW9uOiBWRVJTSU9OLFxuICAgICAgdHlwZTogVFlQRSxcbiAgICAgIHRhZzogZGF0YS50YWdcbiAgICB9O1xuXG4gICAgY29uc3QgaGVhZGVyQnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKEhFQURFUl9MRU5HVEgpO1xuICAgIGhlYWRlckJ1ZmZlci53cml0ZVVJbnQzMkxFKGhlYWRlci5sZW5ndGgsIDApO1xuICAgIGhlYWRlckJ1ZmZlci53cml0ZVVJbnQzMkxFKGhlYWRlci52ZXJzaW9uLCA0KTtcbiAgICBoZWFkZXJCdWZmZXIud3JpdGVVSW50MzJMRShoZWFkZXIudHlwZSwgOCk7XG4gICAgaGVhZGVyQnVmZmVyLndyaXRlVUludDMyTEUoaGVhZGVyLnRhZywgMTIpO1xuXG4gICAgdGhpcy5wdXNoKEJ1ZmZlci5jb25jYXQoW2hlYWRlckJ1ZmZlciwgcGF5bG9hZEJ1ZmZlcl0sIGhlYWRlckJ1ZmZlci5sZW5ndGggKyBwYXlsb2FkQnVmZmVyLmxlbmd0aCkpO1xuICB9XG59XG5cbmV4cG9ydCB7IFVzYm11eEVuY29kZXJ9O1xuZXhwb3J0IGRlZmF1bHQgVXNibXV4RW5jb2RlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxNQUFNQSxhQUFhLEdBQUcsRUFBdEI7QUFDQSxNQUFNQyxPQUFPLEdBQUcsQ0FBaEI7QUFDQSxNQUFNQyxJQUFJLEdBQUcsQ0FBYjs7QUFFQSxNQUFNQyxhQUFOLFNBQTRCQyxnQkFBT0MsU0FBbkMsQ0FBNkM7RUFDM0NDLFdBQVcsR0FBSTtJQUNiLE1BQU07TUFBRUMsVUFBVSxFQUFFO0lBQWQsQ0FBTjtFQUNEOztFQUVEQyxVQUFVLENBQUVDLElBQUYsRUFBUUMsUUFBUixFQUFrQkMsTUFBbEIsRUFBMEI7SUFDbEMsS0FBS0MsT0FBTCxDQUFhSCxJQUFiOztJQUNBRSxNQUFNO0VBQ1A7O0VBRURDLE9BQU8sQ0FBRUgsSUFBRixFQUFRO0lBQ2IsTUFBTUksYUFBYSxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWUMsZUFBTUMsV0FBTixDQUFrQlIsSUFBSSxDQUFDUyxPQUF2QixFQUFnQyxLQUFoQyxDQUFaLENBQXRCO0lBRUEsTUFBTUMsTUFBTSxHQUFHO01BQ2JDLE1BQU0sRUFBRXBCLGFBQWEsR0FBR2EsYUFBYSxDQUFDTyxNQUR6QjtNQUViQyxPQUFPLEVBQUVwQixPQUZJO01BR2JxQixJQUFJLEVBQUVwQixJQUhPO01BSWJxQixHQUFHLEVBQUVkLElBQUksQ0FBQ2M7SUFKRyxDQUFmO0lBT0EsTUFBTUMsWUFBWSxHQUFHVixNQUFNLENBQUNXLFdBQVAsQ0FBbUJ6QixhQUFuQixDQUFyQjtJQUNBd0IsWUFBWSxDQUFDRSxhQUFiLENBQTJCUCxNQUFNLENBQUNDLE1BQWxDLEVBQTBDLENBQTFDO0lBQ0FJLFlBQVksQ0FBQ0UsYUFBYixDQUEyQlAsTUFBTSxDQUFDRSxPQUFsQyxFQUEyQyxDQUEzQztJQUNBRyxZQUFZLENBQUNFLGFBQWIsQ0FBMkJQLE1BQU0sQ0FBQ0csSUFBbEMsRUFBd0MsQ0FBeEM7SUFDQUUsWUFBWSxDQUFDRSxhQUFiLENBQTJCUCxNQUFNLENBQUNJLEdBQWxDLEVBQXVDLEVBQXZDO0lBRUEsS0FBS0ksSUFBTCxDQUFVYixNQUFNLENBQUNjLE1BQVAsQ0FBYyxDQUFDSixZQUFELEVBQWVYLGFBQWYsQ0FBZCxFQUE2Q1csWUFBWSxDQUFDSixNQUFiLEdBQXNCUCxhQUFhLENBQUNPLE1BQWpGLENBQVY7RUFDRDs7QUEzQjBDOzs7ZUErQjlCakIsYSJ9
