"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getConnectedDevices = getConnectedDevices;
exports.getOSVersion = getOSVersion;
exports.getRealDeviceObj = getRealDeviceObj;
exports.installToRealDevice = installToRealDevice;
exports.runRealDeviceReset = runRealDeviceReset;

require("source-map-support/register");

var _appiumIosDevice = require("appium-ios-device");

var _iosDeploy = _interopRequireDefault(require("./ios-deploy"));

var _logger = _interopRequireDefault(require("./logger"));

async function getConnectedDevices() {
  return await _appiumIosDevice.utilities.getConnectedDevices();
}

async function getOSVersion(udid) {
  return await _appiumIosDevice.utilities.getOSVersion(udid);
}

async function resetRealDevice(device, opts) {
  if (!opts.bundleId || !opts.fullReset) {
    return;
  }

  let bundleId = opts.bundleId;

  _logger.default.debug(`Reset: fullReset requested. Will try to uninstall the app '${bundleId}'.`);

  if (!(await device.isAppInstalled(bundleId))) {
    _logger.default.debug('Reset: app not installed. No need to uninstall');

    return;
  }

  try {
    await device.remove(bundleId);
  } catch (err) {
    _logger.default.error(`Reset: could not remove '${bundleId}' from device: ${err.message}`);

    throw err;
  }

  _logger.default.debug(`Reset: removed '${bundleId}'`);
}

async function runRealDeviceReset(device, opts) {
  if (!opts.noReset || opts.fullReset) {
    _logger.default.debug('Reset: running ios real device reset flow');

    if (!opts.noReset) {
      await resetRealDevice(device, opts);
    }
  } else {
    _logger.default.debug('Reset: fullReset not set. Leaving as is');
  }
}

async function installToRealDevice(device, app, bundleId, opts = {}) {
  if (!device.udid || !app) {
    _logger.default.debug('No device id or app, not installing to real device.');

    return;
  }

  const {
    noReset = false,
    strategy,
    timeout
  } = opts;

  if (await device.isAppInstalled(bundleId)) {
    if (noReset) {
      _logger.default.debug(`App '${bundleId}' is already installed. No need to reinstall.`);

      return;
    }

    _logger.default.debug(`Reset requested. Removing app with id '${bundleId}' from the device`);

    await device.remove(bundleId);
  }

  _logger.default.debug(`Installing '${app}' on device with UUID '${device.udid}'...`);

  await device.install(app, timeout, strategy);

  _logger.default.debug('The app has been installed successfully.');
}

function getRealDeviceObj(udid) {
  _logger.default.debug(`Creating iDevice object with udid '${udid}'`);

  return new _iosDeploy.default(udid);
}require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliL3JlYWwtZGV2aWNlLW1hbmFnZW1lbnQuanMiLCJuYW1lcyI6WyJnZXRDb25uZWN0ZWREZXZpY2VzIiwidXRpbGl0aWVzIiwiZ2V0T1NWZXJzaW9uIiwidWRpZCIsInJlc2V0UmVhbERldmljZSIsImRldmljZSIsIm9wdHMiLCJidW5kbGVJZCIsImZ1bGxSZXNldCIsImxvZyIsImRlYnVnIiwiaXNBcHBJbnN0YWxsZWQiLCJyZW1vdmUiLCJlcnIiLCJlcnJvciIsIm1lc3NhZ2UiLCJydW5SZWFsRGV2aWNlUmVzZXQiLCJub1Jlc2V0IiwiaW5zdGFsbFRvUmVhbERldmljZSIsImFwcCIsInN0cmF0ZWd5IiwidGltZW91dCIsImluc3RhbGwiLCJnZXRSZWFsRGV2aWNlT2JqIiwiSU9TRGVwbG95Il0sInNvdXJjZVJvb3QiOiIuLi8uLiIsInNvdXJjZXMiOlsibGliL3JlYWwtZGV2aWNlLW1hbmFnZW1lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXRpbGl0aWVzIH0gZnJvbSAnYXBwaXVtLWlvcy1kZXZpY2UnO1xuaW1wb3J0IElPU0RlcGxveSBmcm9tICcuL2lvcy1kZXBsb3knO1xuaW1wb3J0IGxvZyBmcm9tICcuL2xvZ2dlcic7XG5cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q29ubmVjdGVkRGV2aWNlcyAoKSB7XG4gIHJldHVybiBhd2FpdCB1dGlsaXRpZXMuZ2V0Q29ubmVjdGVkRGV2aWNlcygpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRPU1ZlcnNpb24gKHVkaWQpIHtcbiAgcmV0dXJuIGF3YWl0IHV0aWxpdGllcy5nZXRPU1ZlcnNpb24odWRpZCk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlc2V0UmVhbERldmljZSAoZGV2aWNlLCBvcHRzKSB7XG4gIGlmICghb3B0cy5idW5kbGVJZCB8fCAhb3B0cy5mdWxsUmVzZXQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBsZXQgYnVuZGxlSWQgPSBvcHRzLmJ1bmRsZUlkO1xuICBsb2cuZGVidWcoYFJlc2V0OiBmdWxsUmVzZXQgcmVxdWVzdGVkLiBXaWxsIHRyeSB0byB1bmluc3RhbGwgdGhlIGFwcCAnJHtidW5kbGVJZH0nLmApO1xuICBpZiAoIWF3YWl0IGRldmljZS5pc0FwcEluc3RhbGxlZChidW5kbGVJZCkpIHtcbiAgICBsb2cuZGVidWcoJ1Jlc2V0OiBhcHAgbm90IGluc3RhbGxlZC4gTm8gbmVlZCB0byB1bmluc3RhbGwnKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdHJ5IHtcbiAgICBhd2FpdCBkZXZpY2UucmVtb3ZlKGJ1bmRsZUlkKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbG9nLmVycm9yKGBSZXNldDogY291bGQgbm90IHJlbW92ZSAnJHtidW5kbGVJZH0nIGZyb20gZGV2aWNlOiAke2Vyci5tZXNzYWdlfWApO1xuICAgIHRocm93IGVycjtcbiAgfVxuICBsb2cuZGVidWcoYFJlc2V0OiByZW1vdmVkICcke2J1bmRsZUlkfSdgKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gcnVuUmVhbERldmljZVJlc2V0IChkZXZpY2UsIG9wdHMpIHtcbiAgaWYgKCFvcHRzLm5vUmVzZXQgfHwgb3B0cy5mdWxsUmVzZXQpIHtcbiAgICBsb2cuZGVidWcoJ1Jlc2V0OiBydW5uaW5nIGlvcyByZWFsIGRldmljZSByZXNldCBmbG93Jyk7XG4gICAgaWYgKCFvcHRzLm5vUmVzZXQpIHtcbiAgICAgIGF3YWl0IHJlc2V0UmVhbERldmljZShkZXZpY2UsIG9wdHMpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBsb2cuZGVidWcoJ1Jlc2V0OiBmdWxsUmVzZXQgbm90IHNldC4gTGVhdmluZyBhcyBpcycpO1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGluc3RhbGxUb1JlYWxEZXZpY2UgKGRldmljZSwgYXBwLCBidW5kbGVJZCwgb3B0cyA9IHt9KSB7XG4gIGlmICghZGV2aWNlLnVkaWQgfHwgIWFwcCkge1xuICAgIGxvZy5kZWJ1ZygnTm8gZGV2aWNlIGlkIG9yIGFwcCwgbm90IGluc3RhbGxpbmcgdG8gcmVhbCBkZXZpY2UuJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3Qge1xuICAgIG5vUmVzZXQgPSBmYWxzZSxcbiAgICBzdHJhdGVneSxcbiAgICB0aW1lb3V0LFxuICB9ID0gb3B0cztcblxuICBpZiAoYXdhaXQgZGV2aWNlLmlzQXBwSW5zdGFsbGVkKGJ1bmRsZUlkKSkge1xuICAgIGlmIChub1Jlc2V0KSB7XG4gICAgICBsb2cuZGVidWcoYEFwcCAnJHtidW5kbGVJZH0nIGlzIGFscmVhZHkgaW5zdGFsbGVkLiBObyBuZWVkIHRvIHJlaW5zdGFsbC5gKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbG9nLmRlYnVnKGBSZXNldCByZXF1ZXN0ZWQuIFJlbW92aW5nIGFwcCB3aXRoIGlkICcke2J1bmRsZUlkfScgZnJvbSB0aGUgZGV2aWNlYCk7XG4gICAgYXdhaXQgZGV2aWNlLnJlbW92ZShidW5kbGVJZCk7XG4gIH1cbiAgbG9nLmRlYnVnKGBJbnN0YWxsaW5nICcke2FwcH0nIG9uIGRldmljZSB3aXRoIFVVSUQgJyR7ZGV2aWNlLnVkaWR9Jy4uLmApO1xuICBhd2FpdCBkZXZpY2UuaW5zdGFsbChhcHAsIHRpbWVvdXQsIHN0cmF0ZWd5KTtcbiAgbG9nLmRlYnVnKCdUaGUgYXBwIGhhcyBiZWVuIGluc3RhbGxlZCBzdWNjZXNzZnVsbHkuJyk7XG59XG5cbmZ1bmN0aW9uIGdldFJlYWxEZXZpY2VPYmogKHVkaWQpIHtcbiAgbG9nLmRlYnVnKGBDcmVhdGluZyBpRGV2aWNlIG9iamVjdCB3aXRoIHVkaWQgJyR7dWRpZH0nYCk7XG4gIHJldHVybiBuZXcgSU9TRGVwbG95KHVkaWQpO1xufVxuXG5leHBvcnQgeyBnZXRDb25uZWN0ZWREZXZpY2VzLCBnZXRPU1ZlcnNpb24sIHJ1blJlYWxEZXZpY2VSZXNldCwgaW5zdGFsbFRvUmVhbERldmljZSxcbiAgZ2V0UmVhbERldmljZU9iaiB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFD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
